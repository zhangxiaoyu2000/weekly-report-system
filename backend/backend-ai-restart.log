[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------< com.weeklyreport:weekly-report-backend >---------------
[INFO] Building weekly-report-backend 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot:3.2.0:run (default-cli) > test-compile @ weekly-report-backend >>>
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ weekly-report-backend ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 16 resources from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ weekly-report-backend ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ weekly-report-backend ---
[INFO] skip non existing resourceDirectory /Volumes/project/my-project/backend/src/test/resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ weekly-report-backend ---
[INFO] No sources to compile
[INFO] 
[INFO] <<< spring-boot:3.2.0:run (default-cli) < test-compile @ weekly-report-backend <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.2.0:run (default-cli) @ weekly-report-backend ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
[32m :: Spring Boot :: [39m              [2m (v3.2.0)[0;39m

2025-09-17 16:35:00 - Starting WeeklyReportApplication using Java 23.0.2 with PID 87518 (/Volumes/project/my-project/backend/target/classes started by zhangxiaoyu in /Volumes/project/my-project/backend)
2025-09-17 16:35:00 - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-09-17 16:35:00 - The following 1 profile is active: "dev"
2025-09-17 16:35:03 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-17 16:35:03 - Finished Spring Data repository scanning in 115 ms. Found 12 JPA repository interfaces.
2025-09-17 16:35:05 - Tomcat initialized with port 8081 (http)
2025-09-17 16:35:05 - Starting service [Tomcat]
2025-09-17 16:35:05 - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-09-17 16:35:05 - Initializing Spring embedded WebApplicationContext
2025-09-17 16:35:05 - Root WebApplicationContext: initialization completed in 5028 ms
2025-09-17 16:35:05 - Filter 'jwtAuthenticationFilter' configured for use
2025-09-17 16:35:06 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-17 16:35:06 - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-09-17 16:35:06 - HHH000026: Second-level cache disabled
2025-09-17 16:35:06 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-17 16:35:06 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-17 16:35:06 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-09-17 16:35:10 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-17 16:35:10 - WeeklyReportHikariCP-Dev - Starting...
2025-09-17 16:35:10 - WeeklyReportHikariCP-Dev - Added connection com.mysql.cj.jdbc.ConnectionImpl@30dbcffd
2025-09-17 16:35:10 - WeeklyReportHikariCP-Dev - Start completed.
2025-09-17 16:35:10 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-17 16:35:12 - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-17 16:35:15 - AI Monitoring Service initialized
2025-09-17 16:35:15 - Initializing AI service providers...
2025-09-17 16:35:16 - Calling DeepSeek API with URL: https://api.deepseek.com/chat/completions
2025-09-17 16:35:16 - Request payload: {"model":"deepseek-chat","messages":[{"role":"user","content":"hello"}],"temperature":0.1,"stream":false,"max_tokens":10}
2025-09-17 16:35:21 - DeepSeek API response status: 200 OK
2025-09-17 16:35:21 - DeepSeek API response body: {"id":"81d32ef4-e79c-4f30-bd47-afcb70dcde7d","object":"chat.completion","created":1758098117,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"Hello! How can I help you today?"},"logprobs":null,"finish_reason":"length"}],"usage":{"prompt_tokens":5,"completion_tokens":9,"total_tokens":14,"prompt_tokens_details":{"cached_tokens":0},"prompt_cache_hit_tokens":0,"prompt_cache_miss_tokens":5},"system_fingerprint":"fp_08f168e49b_prod0820_fp8_kvcache"}
2025-09-17 16:35:21 - Registered AI provider: DeepSeek AI Service - Status: Configured and healthy
2025-09-17 16:35:21 - Registered AI provider: Mock AI Service for Testing - Status: CONFIGURED
2025-09-17 16:35:21 - Initialized 2 AI service providers
2025-09-17 16:35:35 - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-09-17 16:35:36 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6fd02ff8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e37bf, org.springframework.security.web.context.SecurityContextHolderFilter@21c9de09, org.springframework.security.web.header.HeaderWriterFilter@27ad1c53, org.springframework.web.filter.CorsFilter@31d51325, org.springframework.security.web.authentication.logout.LogoutFilter@26cb1e6a, com.weeklyreport.security.JwtAuthenticationFilter@65af05b2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5121ac26, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@48aeb0b2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@728ae6e6, org.springframework.security.web.session.SessionManagementFilter@d8199f3, org.springframework.security.web.access.ExceptionTranslationFilter@4f9834bf, org.springframework.security.web.access.intercept.AuthorizationFilter@c37b17f]
2025-09-17 16:35:43 - Tomcat started on port 8081 (http) with context path '/api'
2025-09-17 16:35:43 - Started WeeklyReportApplication in 44.544 seconds (process running for 45.263)
2025-09-17 16:35:44 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-17 16:35:44 - Super admin user already exists: superadmin
2025-09-17 16:35:44 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-17 16:35:44 - Super admin user already exists: zhangxiaoyu
2025-09-17 16:35:44 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-17 16:35:44 - Admin user already exists: admin1
2025-09-17 16:35:44 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-17 16:35:44 - Admin user already exists: admin2
2025-09-17 16:35:44 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-17 16:35:44 - Manager user already exists: manager1
2025-09-17 16:40:55 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-17 16:40:55 - Initializing Servlet 'dispatcherServlet'
2025-09-17 16:40:55 - Completed initialization in 46 ms
2025-09-17 16:40:55 - Securing GET /reports
2025-09-17 16:40:55 - Processing authentication for request: /api/reports
2025-09-17 16:40:56 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-17 16:40:56 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-17 16:40:56 - Successfully authenticated user: manager1 for request: /api/reports
2025-09-17 16:40:56 - Cache miss for REQUEST dispatch to '/api/reports' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
2025-09-17 16:40:56 - Secured GET /reports
2025-09-17 16:40:56 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.WeeklyReportController.getWeeklyReports(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.WeeklyReportController]
2025-09-17 16:40:56 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.WeeklyReportController.getWeeklyReports(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.WeeklyReportController]
2025-09-17 16:40:56 - Getting weekly reports with filters - page: 0, size: 20 for user: 5
2025-09-17 16:40:56 - Getting weekly reports with filter for user: 5
2025-09-17 16:40:56 - 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-17 16:40:56 - 
    /* SELECT
        DISTINCT r 
    FROM
        WeeklyReport r 
    WHERE
        r.author = :user 
        OR (
            :userRole = 'SUPER_ADMIN'
        ) 
        OR (
            :userRole = 'ADMIN'
        ) 
        OR (
            :userRole = 'MANAGER' 
            AND r.author.department = :userDepartment
        ) 
    order by
        r.reportWeek desc */ select
            distinct wr1_0.id,
            wr1_0.achievements,
            wr1_0.additional_notes,
            wr1_0.admin_review_comment,
            wr1_0.admin_reviewed_at,
            wr1_0.admin_reviewer_id,
            wr1_0.ai_analysis_result,
            wr1_0.ai_analyzed_at,
            wr1_0.ai_confidence,
            wr1_0.ai_key_issues,
            wr1_0.ai_processing_time_ms,
            wr1_0.ai_provider_used,
            wr1_0.ai_quality_score,
            wr1_0.ai_recommendations,
            wr1_0.ai_risk_level,
            wr1_0.author_id,
            wr1_0.challenges,
            wr1_0.content,
            wr1_0.created_at,
            wr1_0.is_late,
            wr1_0.manager_review_comment,
            wr1_0.manager_reviewed_at,
            wr1_0.manager_reviewer_id,
            wr1_0.next_week_plan,
            wr1_0.priority,
            wr1_0.report_week,
            wr1_0.review_comment,
            wr1_0.reviewed_at,
            wr1_0.reviewer_id,
            wr1_0.status,
            wr1_0.submitted_at,
            wr1_0.super_admin_review_comment,
            wr1_0.super_admin_reviewed_at,
            wr1_0.super_admin_reviewer_id,
            wr1_0.template_id,
            wr1_0.title,
            wr1_0.updated_at,
            wr1_0.week_number,
            wr1_0.word_count,
            wr1_0.work_summary,
            wr1_0.report_year 
        from
            weekly_reports wr1_0 
        join
            users a1_0 
                on a1_0.id=wr1_0.author_id 
        where
            wr1_0.author_id=? 
            or (
                ?='SUPER_ADMIN'
            ) 
            or (
                ?='ADMIN'
            ) 
            or (
                ?='MANAGER' 
                and a1_0.department_id=?
            ) 
        order by
            wr1_0.report_week desc 
        limit
            ?, ?
Hibernate: 
    /* SELECT
        DISTINCT r 
    FROM
        WeeklyReport r 
    WHERE
        r.author = :user 
        OR (
            :userRole = 'SUPER_ADMIN'
        ) 
        OR (
            :userRole = 'ADMIN'
        ) 
        OR (
            :userRole = 'MANAGER' 
            AND r.author.department = :userDepartment
        ) 
    order by
        r.reportWeek desc */ select
            distinct wr1_0.id,
            wr1_0.achievements,
            wr1_0.additional_notes,
            wr1_0.admin_review_comment,
            wr1_0.admin_reviewed_at,
            wr1_0.admin_reviewer_id,
            wr1_0.ai_analysis_result,
            wr1_0.ai_analyzed_at,
            wr1_0.ai_confidence,
            wr1_0.ai_key_issues,
            wr1_0.ai_processing_time_ms,
            wr1_0.ai_provider_used,
            wr1_0.ai_quality_score,
            wr1_0.ai_recommendations,
            wr1_0.ai_risk_level,
            wr1_0.author_id,
            wr1_0.challenges,
            wr1_0.content,
            wr1_0.created_at,
            wr1_0.is_late,
            wr1_0.manager_review_comment,
            wr1_0.manager_reviewed_at,
            wr1_0.manager_reviewer_id,
            wr1_0.next_week_plan,
            wr1_0.priority,
            wr1_0.report_week,
            wr1_0.review_comment,
            wr1_0.reviewed_at,
            wr1_0.reviewer_id,
            wr1_0.status,
            wr1_0.submitted_at,
            wr1_0.super_admin_review_comment,
            wr1_0.super_admin_reviewed_at,
            wr1_0.super_admin_reviewer_id,
            wr1_0.template_id,
            wr1_0.title,
            wr1_0.updated_at,
            wr1_0.week_number,
            wr1_0.word_count,
            wr1_0.work_summary,
            wr1_0.report_year 
        from
            weekly_reports wr1_0 
        join
            users a1_0 
                on a1_0.id=wr1_0.author_id 
        where
            wr1_0.author_id=? 
            or (
                ?='SUPER_ADMIN'
            ) 
            or (
                ?='ADMIN'
            ) 
            or (
                ?='MANAGER' 
                and a1_0.department_id=?
            ) 
        order by
            wr1_0.report_week desc 
        limit
            ?, ?
2025-09-17 16:40:57 - Found 1 reports from repository query
2025-09-17 16:40:57 - Report ID=4, canView=true
2025-09-17 16:40:57 - Converting report ID=4 to response DTO
2025-09-17 16:40:57 - 
    select
        c1_0.weekly_report_id,
        c1_0.id,
        c1_0.attachments,
        c1_0.author_id,
        c1_0.content,
        c1_0.created_at,
        c1_0.is_private,
        c1_0.is_resolved,
        c1_0.likes_count,
        c1_0.parent_id,
        c1_0.priority,
        c1_0.resolved_at,
        c1_0.resolved_by,
        c1_0.status,
        c1_0.tags,
        c1_0.type,
        c1_0.updated_at 
    from
        comments c1_0 
    where
        c1_0.weekly_report_id=? 
    order by
        c1_0.created_at
Hibernate: 
    select
        c1_0.weekly_report_id,
        c1_0.id,
        c1_0.attachments,
        c1_0.author_id,
        c1_0.content,
        c1_0.created_at,
        c1_0.is_private,
        c1_0.is_resolved,
        c1_0.likes_count,
        c1_0.parent_id,
        c1_0.priority,
        c1_0.resolved_at,
        c1_0.resolved_by,
        c1_0.status,
        c1_0.tags,
        c1_0.type,
        c1_0.updated_at 
    from
        comments c1_0 
    where
        c1_0.weekly_report_id=? 
    order by
        c1_0.created_at
2025-09-17 16:40:57 - 
    select
        ar1_0.report_id,
        ar1_0.id,
        ar1_0.analysis_type,
        ar1_0.completed_at,
        ar1_0.confidence,
        ar1_0.created_at,
        ar1_0.error_message,
        ar1_0.metadata,
        ar1_0.model_version,
        ar1_0.parameters,
        ar1_0.processing_time_ms,
        ar1_0.result,
        ar1_0.status,
        ar1_0.updated_at 
    from
        ai_analysis_results ar1_0 
    where
        ar1_0.report_id=? 
    order by
        ar1_0.created_at desc
Hibernate: 
    select
        ar1_0.report_id,
        ar1_0.id,
        ar1_0.analysis_type,
        ar1_0.completed_at,
        ar1_0.confidence,
        ar1_0.created_at,
        ar1_0.error_message,
        ar1_0.metadata,
        ar1_0.model_version,
        ar1_0.parameters,
        ar1_0.processing_time_ms,
        ar1_0.result,
        ar1_0.status,
        ar1_0.updated_at 
    from
        ai_analysis_results ar1_0 
    where
        ar1_0.report_id=? 
    order by
        ar1_0.created_at desc
2025-09-17 16:40:57 - Creating response with 1 report responses
2025-09-17 16:40:57 - Response created successfully: totalElements=1, reports.size()=1
2025-09-17 16:40:57 - Successfully retrieved 1 reports, total elements: 1
2025-09-17 16:40:57 - Report: id=4, title=222, status=AI_ANALYZING, authorName=主管一
2025-09-17 16:40:57 - Securing GET /tasks/weekly-report/4
2025-09-17 16:40:57 - Processing authentication for request: /api/tasks/weekly-report/4
2025-09-17 16:40:57 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-17 16:40:57 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-17 16:40:57 - Successfully authenticated user: manager1 for request: /api/tasks/weekly-report/4
2025-09-17 16:40:57 - Secured GET /tasks/weekly-report/4
2025-09-17 16:40:57 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getTasksByWeeklyReport(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-17 16:40:57 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getTasksByWeeklyReport(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-17 16:40:57 - Fetching tasks for weekly report: 4
2025-09-17 16:40:57 - 
    select
        wr1_0.id,
        wr1_0.achievements,
        wr1_0.additional_notes,
        wr1_0.admin_review_comment,
        wr1_0.admin_reviewed_at,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_result,
        wr1_0.ai_analyzed_at,
        wr1_0.ai_confidence,
        wr1_0.ai_key_issues,
        wr1_0.ai_processing_time_ms,
        wr1_0.ai_provider_used,
        wr1_0.ai_quality_score,
        wr1_0.ai_recommendations,
        wr1_0.ai_risk_level,
        wr1_0.author_id,
        wr1_0.challenges,
        wr1_0.content,
        wr1_0.created_at,
        wr1_0.is_late,
        wr1_0.manager_review_comment,
        wr1_0.manager_reviewed_at,
        wr1_0.manager_reviewer_id,
        wr1_0.next_week_plan,
        wr1_0.priority,
        wr1_0.report_week,
        wr1_0.review_comment,
        wr1_0.reviewed_at,
        wr1_0.reviewer_id,
        wr1_0.status,
        wr1_0.submitted_at,
        wr1_0.super_admin_review_comment,
        wr1_0.super_admin_reviewed_at,
        wr1_0.super_admin_reviewer_id,
        wr1_0.template_id,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.week_number,
        wr1_0.word_count,
        wr1_0.work_summary,
        wr1_0.report_year 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
Hibernate: 
    select
        wr1_0.id,
        wr1_0.achievements,
        wr1_0.additional_notes,
        wr1_0.admin_review_comment,
        wr1_0.admin_reviewed_at,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_result,
        wr1_0.ai_analyzed_at,
        wr1_0.ai_confidence,
        wr1_0.ai_key_issues,
        wr1_0.ai_processing_time_ms,
        wr1_0.ai_provider_used,
        wr1_0.ai_quality_score,
        wr1_0.ai_recommendations,
        wr1_0.ai_risk_level,
        wr1_0.author_id,
        wr1_0.challenges,
        wr1_0.content,
        wr1_0.created_at,
        wr1_0.is_late,
        wr1_0.manager_review_comment,
        wr1_0.manager_reviewed_at,
        wr1_0.manager_reviewer_id,
        wr1_0.next_week_plan,
        wr1_0.priority,
        wr1_0.report_week,
        wr1_0.review_comment,
        wr1_0.reviewed_at,
        wr1_0.reviewer_id,
        wr1_0.status,
        wr1_0.submitted_at,
        wr1_0.super_admin_review_comment,
        wr1_0.super_admin_reviewed_at,
        wr1_0.super_admin_reviewer_id,
        wr1_0.template_id,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.week_number,
        wr1_0.word_count,
        wr1_0.work_summary,
        wr1_0.report_year 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
2025-09-17 16:40:57 - 
    /* SELECT
        t 
    FROM
        Task t 
    LEFT JOIN
        
    FETCH
        t.simpleProject 
    LEFT JOIN
        
    FETCH
        t.projectPhase 
    WHERE
        t.weeklyReport = :weeklyReport 
    ORDER BY
        t.reportSection ASC,
        t.taskType ASC,
        t.createdAt ASC */ select
            t1_0.id,
            t1_0.actual_results,
            t1_0.budget,
            t1_0.completion_date,
            t1_0.created_at,
            t1_0.due_date,
            t1_0.expected_results,
            t1_0.is_completed,
            t1_0.is_overdue,
            t1_0.personnel_assignment,
            t1_0.priority,
            t1_0.progress,
            pp1_0.id,
            pp1_0.actual_results,
            pp1_0.assigned_members,
            pp1_0.completion_date,
            pp1_0.created_at,
            pp1_0.end_date,
            pp1_0.estimated_results,
            pp1_0.key_indicators,
            pp1_0.phase_description,
            pp1_0.phase_name,
            pp1_0.phase_order,
            pp1_0.project_id,
            pp1_0.start_date,
            pp1_0.status,
            pp1_0.timeline,
            pp1_0.updated_at,
            t1_0.quantitative_metrics,
            t1_0.report_section,
            t1_0.result_difference_analysis,
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            sp1_0.admin_reviewer_id,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            sp1_0.manager_reviewer_id,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sp1_0.super_admin_reviewer_id,
            sp1_0.timeline,
            sp1_0.updated_at,
            t1_0.start_date,
            t1_0.stop_loss_point,
            t1_0.task_name,
            t1_0.task_type,
            t1_0.timeline,
            t1_0.updated_at,
            t1_0.weekly_report_id 
        from
            tasks t1_0 
        left join
            simple_projects sp1_0 
                on sp1_0.id=t1_0.simple_project_id 
        left join
            project_phases pp1_0 
                on pp1_0.id=t1_0.project_phase_id 
        where
            t1_0.weekly_report_id=? 
        order by
            t1_0.report_section,
            t1_0.task_type,
            t1_0.created_at
Hibernate: 
    /* SELECT
        t 
    FROM
        Task t 
    LEFT JOIN
        
    FETCH
        t.simpleProject 
    LEFT JOIN
        
    FETCH
        t.projectPhase 
    WHERE
        t.weeklyReport = :weeklyReport 
    ORDER BY
        t.reportSection ASC,
        t.taskType ASC,
        t.createdAt ASC */ select
            t1_0.id,
            t1_0.actual_results,
            t1_0.budget,
            t1_0.completion_date,
            t1_0.created_at,
            t1_0.due_date,
            t1_0.expected_results,
            t1_0.is_completed,
            t1_0.is_overdue,
            t1_0.personnel_assignment,
            t1_0.priority,
            t1_0.progress,
            pp1_0.id,
            pp1_0.actual_results,
            pp1_0.assigned_members,
            pp1_0.completion_date,
            pp1_0.created_at,
            pp1_0.end_date,
            pp1_0.estimated_results,
            pp1_0.key_indicators,
            pp1_0.phase_description,
            pp1_0.phase_name,
            pp1_0.phase_order,
            pp1_0.project_id,
            pp1_0.start_date,
            pp1_0.status,
            pp1_0.timeline,
            pp1_0.updated_at,
            t1_0.quantitative_metrics,
            t1_0.report_section,
            t1_0.result_difference_analysis,
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            sp1_0.admin_reviewer_id,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            sp1_0.manager_reviewer_id,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sp1_0.super_admin_reviewer_id,
            sp1_0.timeline,
            sp1_0.updated_at,
            t1_0.start_date,
            t1_0.stop_loss_point,
            t1_0.task_name,
            t1_0.task_type,
            t1_0.timeline,
            t1_0.updated_at,
            t1_0.weekly_report_id 
        from
            tasks t1_0 
        left join
            simple_projects sp1_0 
                on sp1_0.id=t1_0.simple_project_id 
        left join
            project_phases pp1_0 
                on pp1_0.id=t1_0.project_phase_id 
        where
            t1_0.weekly_report_id=? 
        order by
            t1_0.report_section,
            t1_0.task_type,
            t1_0.created_at
2025-09-17 16:44:02 - Securing GET /simple/projects/my?status=ALL
2025-09-17 16:44:02 - Processing authentication for request: /api/simple/projects/my
2025-09-17 16:44:02 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-17 16:44:02 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-17 16:44:02 - Successfully authenticated user: manager1 for request: /api/simple/projects/my
2025-09-17 16:44:02 - Secured GET /simple/projects/my?status=ALL
2025-09-17 16:44:02 - 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-17 16:44:02 - 
    /* SELECT
        p 
    FROM
        SimpleProject p 
    LEFT JOIN
        
    FETCH
        p.createdBy 
    LEFT JOIN
        
    FETCH
        p.managerReviewer 
    LEFT JOIN
        
    FETCH
        p.adminReviewer 
    LEFT JOIN
        
    FETCH
        p.superAdminReviewer 
    WHERE
        p.createdBy = :createdBy 
    ORDER BY
        p.createdAt DESC */ select
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            ar1_0.id,
            ar1_0.avatar_url,
            ar1_0.created_at,
            ar1_0.department_id,
            ar1_0.email,
            ar1_0.employee_id,
            ar1_0.full_name,
            ar1_0.last_login_time,
            ar1_0.password,
            ar1_0.phone,
            ar1_0.position,
            ar1_0.role,
            ar1_0.status,
            ar1_0.updated_at,
            ar1_0.username,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            cb1_0.id,
            cb1_0.avatar_url,
            cb1_0.created_at,
            cb1_0.department_id,
            cb1_0.email,
            cb1_0.employee_id,
            cb1_0.full_name,
            cb1_0.last_login_time,
            cb1_0.password,
            cb1_0.phone,
            cb1_0.position,
            cb1_0.role,
            cb1_0.status,
            cb1_0.updated_at,
            cb1_0.username,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            mr1_0.id,
            mr1_0.avatar_url,
            mr1_0.created_at,
            mr1_0.department_id,
            mr1_0.email,
            mr1_0.employee_id,
            mr1_0.full_name,
            mr1_0.last_login_time,
            mr1_0.password,
            mr1_0.phone,
            mr1_0.position,
            mr1_0.role,
            mr1_0.status,
            mr1_0.updated_at,
            mr1_0.username,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sar1_0.id,
            sar1_0.avatar_url,
            sar1_0.created_at,
            sar1_0.department_id,
            sar1_0.email,
            sar1_0.employee_id,
            sar1_0.full_name,
            sar1_0.last_login_time,
            sar1_0.password,
            sar1_0.phone,
            sar1_0.position,
            sar1_0.role,
            sar1_0.status,
            sar1_0.updated_at,
            sar1_0.username,
            sp1_0.timeline,
            sp1_0.updated_at 
        from
            simple_projects sp1_0 
        left join
            users cb1_0 
                on cb1_0.id=sp1_0.created_by 
        left join
            users mr1_0 
                on mr1_0.id=sp1_0.manager_reviewer_id 
        left join
            users ar1_0 
                on ar1_0.id=sp1_0.admin_reviewer_id 
        left join
            users sar1_0 
                on sar1_0.id=sp1_0.super_admin_reviewer_id 
        where
            cb1_0.id=? 
        order by
            sp1_0.created_at desc
Hibernate: 
    /* SELECT
        p 
    FROM
        SimpleProject p 
    LEFT JOIN
        
    FETCH
        p.createdBy 
    LEFT JOIN
        
    FETCH
        p.managerReviewer 
    LEFT JOIN
        
    FETCH
        p.adminReviewer 
    LEFT JOIN
        
    FETCH
        p.superAdminReviewer 
    WHERE
        p.createdBy = :createdBy 
    ORDER BY
        p.createdAt DESC */ select
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            ar1_0.id,
            ar1_0.avatar_url,
            ar1_0.created_at,
            ar1_0.department_id,
            ar1_0.email,
            ar1_0.employee_id,
            ar1_0.full_name,
            ar1_0.last_login_time,
            ar1_0.password,
            ar1_0.phone,
            ar1_0.position,
            ar1_0.role,
            ar1_0.status,
            ar1_0.updated_at,
            ar1_0.username,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            cb1_0.id,
            cb1_0.avatar_url,
            cb1_0.created_at,
            cb1_0.department_id,
            cb1_0.email,
            cb1_0.employee_id,
            cb1_0.full_name,
            cb1_0.last_login_time,
            cb1_0.password,
            cb1_0.phone,
            cb1_0.position,
            cb1_0.role,
            cb1_0.status,
            cb1_0.updated_at,
            cb1_0.username,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            mr1_0.id,
            mr1_0.avatar_url,
            mr1_0.created_at,
            mr1_0.department_id,
            mr1_0.email,
            mr1_0.employee_id,
            mr1_0.full_name,
            mr1_0.last_login_time,
            mr1_0.password,
            mr1_0.phone,
            mr1_0.position,
            mr1_0.role,
            mr1_0.status,
            mr1_0.updated_at,
            mr1_0.username,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sar1_0.id,
            sar1_0.avatar_url,
            sar1_0.created_at,
            sar1_0.department_id,
            sar1_0.email,
            sar1_0.employee_id,
            sar1_0.full_name,
            sar1_0.last_login_time,
            sar1_0.password,
            sar1_0.phone,
            sar1_0.position,
            sar1_0.role,
            sar1_0.status,
            sar1_0.updated_at,
            sar1_0.username,
            sp1_0.timeline,
            sp1_0.updated_at 
        from
            simple_projects sp1_0 
        left join
            users cb1_0 
                on cb1_0.id=sp1_0.created_by 
        left join
            users mr1_0 
                on mr1_0.id=sp1_0.manager_reviewer_id 
        left join
            users ar1_0 
                on ar1_0.id=sp1_0.admin_reviewer_id 
        left join
            users sar1_0 
                on sar1_0.id=sp1_0.super_admin_reviewer_id 
        where
            cb1_0.id=? 
        order by
            sp1_0.created_at desc
2025-09-17 16:44:04 - Securing GET /reports
2025-09-17 16:44:04 - Processing authentication for request: /api/reports
2025-09-17 16:44:04 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-17 16:44:04 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-17 16:44:04 - Successfully authenticated user: manager1 for request: /api/reports
2025-09-17 16:44:04 - Secured GET /reports
2025-09-17 16:44:04 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.WeeklyReportController.getWeeklyReports(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.WeeklyReportController]
2025-09-17 16:44:04 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.WeeklyReportController.getWeeklyReports(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.WeeklyReportController]
2025-09-17 16:44:04 - Getting weekly reports with filters - page: 0, size: 20 for user: 5
2025-09-17 16:44:04 - Getting weekly reports with filter for user: 5
2025-09-17 16:44:04 - 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-17 16:44:05 - 
    /* SELECT
        DISTINCT r 
    FROM
        WeeklyReport r 
    WHERE
        r.author = :user 
        OR (
            :userRole = 'SUPER_ADMIN'
        ) 
        OR (
            :userRole = 'ADMIN'
        ) 
        OR (
            :userRole = 'MANAGER' 
            AND r.author.department = :userDepartment
        ) 
    order by
        r.reportWeek desc */ select
            distinct wr1_0.id,
            wr1_0.achievements,
            wr1_0.additional_notes,
            wr1_0.admin_review_comment,
            wr1_0.admin_reviewed_at,
            wr1_0.admin_reviewer_id,
            wr1_0.ai_analysis_result,
            wr1_0.ai_analyzed_at,
            wr1_0.ai_confidence,
            wr1_0.ai_key_issues,
            wr1_0.ai_processing_time_ms,
            wr1_0.ai_provider_used,
            wr1_0.ai_quality_score,
            wr1_0.ai_recommendations,
            wr1_0.ai_risk_level,
            wr1_0.author_id,
            wr1_0.challenges,
            wr1_0.content,
            wr1_0.created_at,
            wr1_0.is_late,
            wr1_0.manager_review_comment,
            wr1_0.manager_reviewed_at,
            wr1_0.manager_reviewer_id,
            wr1_0.next_week_plan,
            wr1_0.priority,
            wr1_0.report_week,
            wr1_0.review_comment,
            wr1_0.reviewed_at,
            wr1_0.reviewer_id,
            wr1_0.status,
            wr1_0.submitted_at,
            wr1_0.super_admin_review_comment,
            wr1_0.super_admin_reviewed_at,
            wr1_0.super_admin_reviewer_id,
            wr1_0.template_id,
            wr1_0.title,
            wr1_0.updated_at,
            wr1_0.week_number,
            wr1_0.word_count,
            wr1_0.work_summary,
            wr1_0.report_year 
        from
            weekly_reports wr1_0 
        join
            users a1_0 
                on a1_0.id=wr1_0.author_id 
        where
            wr1_0.author_id=? 
            or (
                ?='SUPER_ADMIN'
            ) 
            or (
                ?='ADMIN'
            ) 
            or (
                ?='MANAGER' 
                and a1_0.department_id=?
            ) 
        order by
            wr1_0.report_week desc 
        limit
            ?, ?
Hibernate: 
    /* SELECT
        DISTINCT r 
    FROM
        WeeklyReport r 
    WHERE
        r.author = :user 
        OR (
            :userRole = 'SUPER_ADMIN'
        ) 
        OR (
            :userRole = 'ADMIN'
        ) 
        OR (
            :userRole = 'MANAGER' 
            AND r.author.department = :userDepartment
        ) 
    order by
        r.reportWeek desc */ select
            distinct wr1_0.id,
            wr1_0.achievements,
            wr1_0.additional_notes,
            wr1_0.admin_review_comment,
            wr1_0.admin_reviewed_at,
            wr1_0.admin_reviewer_id,
            wr1_0.ai_analysis_result,
            wr1_0.ai_analyzed_at,
            wr1_0.ai_confidence,
            wr1_0.ai_key_issues,
            wr1_0.ai_processing_time_ms,
            wr1_0.ai_provider_used,
            wr1_0.ai_quality_score,
            wr1_0.ai_recommendations,
            wr1_0.ai_risk_level,
            wr1_0.author_id,
            wr1_0.challenges,
            wr1_0.content,
            wr1_0.created_at,
            wr1_0.is_late,
            wr1_0.manager_review_comment,
            wr1_0.manager_reviewed_at,
            wr1_0.manager_reviewer_id,
            wr1_0.next_week_plan,
            wr1_0.priority,
            wr1_0.report_week,
            wr1_0.review_comment,
            wr1_0.reviewed_at,
            wr1_0.reviewer_id,
            wr1_0.status,
            wr1_0.submitted_at,
            wr1_0.super_admin_review_comment,
            wr1_0.super_admin_reviewed_at,
            wr1_0.super_admin_reviewer_id,
            wr1_0.template_id,
            wr1_0.title,
            wr1_0.updated_at,
            wr1_0.week_number,
            wr1_0.word_count,
            wr1_0.work_summary,
            wr1_0.report_year 
        from
            weekly_reports wr1_0 
        join
            users a1_0 
                on a1_0.id=wr1_0.author_id 
        where
            wr1_0.author_id=? 
            or (
                ?='SUPER_ADMIN'
            ) 
            or (
                ?='ADMIN'
            ) 
            or (
                ?='MANAGER' 
                and a1_0.department_id=?
            ) 
        order by
            wr1_0.report_week desc 
        limit
            ?, ?
2025-09-17 16:44:05 - Found 1 reports from repository query
2025-09-17 16:44:05 - Report ID=4, canView=true
2025-09-17 16:44:05 - Converting report ID=4 to response DTO
2025-09-17 16:44:05 - 
    select
        c1_0.weekly_report_id,
        c1_0.id,
        c1_0.attachments,
        c1_0.author_id,
        c1_0.content,
        c1_0.created_at,
        c1_0.is_private,
        c1_0.is_resolved,
        c1_0.likes_count,
        c1_0.parent_id,
        c1_0.priority,
        c1_0.resolved_at,
        c1_0.resolved_by,
        c1_0.status,
        c1_0.tags,
        c1_0.type,
        c1_0.updated_at 
    from
        comments c1_0 
    where
        c1_0.weekly_report_id=? 
    order by
        c1_0.created_at
Hibernate: 
    select
        c1_0.weekly_report_id,
        c1_0.id,
        c1_0.attachments,
        c1_0.author_id,
        c1_0.content,
        c1_0.created_at,
        c1_0.is_private,
        c1_0.is_resolved,
        c1_0.likes_count,
        c1_0.parent_id,
        c1_0.priority,
        c1_0.resolved_at,
        c1_0.resolved_by,
        c1_0.status,
        c1_0.tags,
        c1_0.type,
        c1_0.updated_at 
    from
        comments c1_0 
    where
        c1_0.weekly_report_id=? 
    order by
        c1_0.created_at
2025-09-17 16:44:05 - 
    select
        ar1_0.report_id,
        ar1_0.id,
        ar1_0.analysis_type,
        ar1_0.completed_at,
        ar1_0.confidence,
        ar1_0.created_at,
        ar1_0.error_message,
        ar1_0.metadata,
        ar1_0.model_version,
        ar1_0.parameters,
        ar1_0.processing_time_ms,
        ar1_0.result,
        ar1_0.status,
        ar1_0.updated_at 
    from
        ai_analysis_results ar1_0 
    where
        ar1_0.report_id=? 
    order by
        ar1_0.created_at desc
Hibernate: 
    select
        ar1_0.report_id,
        ar1_0.id,
        ar1_0.analysis_type,
        ar1_0.completed_at,
        ar1_0.confidence,
        ar1_0.created_at,
        ar1_0.error_message,
        ar1_0.metadata,
        ar1_0.model_version,
        ar1_0.parameters,
        ar1_0.processing_time_ms,
        ar1_0.result,
        ar1_0.status,
        ar1_0.updated_at 
    from
        ai_analysis_results ar1_0 
    where
        ar1_0.report_id=? 
    order by
        ar1_0.created_at desc
2025-09-17 16:44:05 - Creating response with 1 report responses
2025-09-17 16:44:05 - Response created successfully: totalElements=1, reports.size()=1
2025-09-17 16:44:05 - Successfully retrieved 1 reports, total elements: 1
2025-09-17 16:44:05 - Report: id=4, title=222, status=AI_ANALYZING, authorName=主管一
2025-09-17 16:44:05 - Securing GET /tasks/weekly-report/4
2025-09-17 16:44:05 - Processing authentication for request: /api/tasks/weekly-report/4
2025-09-17 16:44:05 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-17 16:44:05 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-17 16:44:05 - Successfully authenticated user: manager1 for request: /api/tasks/weekly-report/4
2025-09-17 16:44:05 - Secured GET /tasks/weekly-report/4
2025-09-17 16:44:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getTasksByWeeklyReport(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-17 16:44:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getTasksByWeeklyReport(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-17 16:44:05 - Fetching tasks for weekly report: 4
2025-09-17 16:44:05 - 
    select
        wr1_0.id,
        wr1_0.achievements,
        wr1_0.additional_notes,
        wr1_0.admin_review_comment,
        wr1_0.admin_reviewed_at,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_result,
        wr1_0.ai_analyzed_at,
        wr1_0.ai_confidence,
        wr1_0.ai_key_issues,
        wr1_0.ai_processing_time_ms,
        wr1_0.ai_provider_used,
        wr1_0.ai_quality_score,
        wr1_0.ai_recommendations,
        wr1_0.ai_risk_level,
        wr1_0.author_id,
        wr1_0.challenges,
        wr1_0.content,
        wr1_0.created_at,
        wr1_0.is_late,
        wr1_0.manager_review_comment,
        wr1_0.manager_reviewed_at,
        wr1_0.manager_reviewer_id,
        wr1_0.next_week_plan,
        wr1_0.priority,
        wr1_0.report_week,
        wr1_0.review_comment,
        wr1_0.reviewed_at,
        wr1_0.reviewer_id,
        wr1_0.status,
        wr1_0.submitted_at,
        wr1_0.super_admin_review_comment,
        wr1_0.super_admin_reviewed_at,
        wr1_0.super_admin_reviewer_id,
        wr1_0.template_id,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.week_number,
        wr1_0.word_count,
        wr1_0.work_summary,
        wr1_0.report_year 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
Hibernate: 
    select
        wr1_0.id,
        wr1_0.achievements,
        wr1_0.additional_notes,
        wr1_0.admin_review_comment,
        wr1_0.admin_reviewed_at,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_result,
        wr1_0.ai_analyzed_at,
        wr1_0.ai_confidence,
        wr1_0.ai_key_issues,
        wr1_0.ai_processing_time_ms,
        wr1_0.ai_provider_used,
        wr1_0.ai_quality_score,
        wr1_0.ai_recommendations,
        wr1_0.ai_risk_level,
        wr1_0.author_id,
        wr1_0.challenges,
        wr1_0.content,
        wr1_0.created_at,
        wr1_0.is_late,
        wr1_0.manager_review_comment,
        wr1_0.manager_reviewed_at,
        wr1_0.manager_reviewer_id,
        wr1_0.next_week_plan,
        wr1_0.priority,
        wr1_0.report_week,
        wr1_0.review_comment,
        wr1_0.reviewed_at,
        wr1_0.reviewer_id,
        wr1_0.status,
        wr1_0.submitted_at,
        wr1_0.super_admin_review_comment,
        wr1_0.super_admin_reviewed_at,
        wr1_0.super_admin_reviewer_id,
        wr1_0.template_id,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.week_number,
        wr1_0.word_count,
        wr1_0.work_summary,
        wr1_0.report_year 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
2025-09-17 16:44:05 - 
    /* SELECT
        t 
    FROM
        Task t 
    LEFT JOIN
        
    FETCH
        t.simpleProject 
    LEFT JOIN
        
    FETCH
        t.projectPhase 
    WHERE
        t.weeklyReport = :weeklyReport 
    ORDER BY
        t.reportSection ASC,
        t.taskType ASC,
        t.createdAt ASC */ select
            t1_0.id,
            t1_0.actual_results,
            t1_0.budget,
            t1_0.completion_date,
            t1_0.created_at,
            t1_0.due_date,
            t1_0.expected_results,
            t1_0.is_completed,
            t1_0.is_overdue,
            t1_0.personnel_assignment,
            t1_0.priority,
            t1_0.progress,
            pp1_0.id,
            pp1_0.actual_results,
            pp1_0.assigned_members,
            pp1_0.completion_date,
            pp1_0.created_at,
            pp1_0.end_date,
            pp1_0.estimated_results,
            pp1_0.key_indicators,
            pp1_0.phase_description,
            pp1_0.phase_name,
            pp1_0.phase_order,
            pp1_0.project_id,
            pp1_0.start_date,
            pp1_0.status,
            pp1_0.timeline,
            pp1_0.updated_at,
            t1_0.quantitative_metrics,
            t1_0.report_section,
            t1_0.result_difference_analysis,
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            sp1_0.admin_reviewer_id,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            sp1_0.manager_reviewer_id,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sp1_0.super_admin_reviewer_id,
            sp1_0.timeline,
            sp1_0.updated_at,
            t1_0.start_date,
            t1_0.stop_loss_point,
            t1_0.task_name,
            t1_0.task_type,
            t1_0.timeline,
            t1_0.updated_at,
            t1_0.weekly_report_id 
        from
            tasks t1_0 
        left join
            simple_projects sp1_0 
                on sp1_0.id=t1_0.simple_project_id 
        left join
            project_phases pp1_0 
                on pp1_0.id=t1_0.project_phase_id 
        where
            t1_0.weekly_report_id=? 
        order by
            t1_0.report_section,
            t1_0.task_type,
            t1_0.created_at
Hibernate: 
    /* SELECT
        t 
    FROM
        Task t 
    LEFT JOIN
        
    FETCH
        t.simpleProject 
    LEFT JOIN
        
    FETCH
        t.projectPhase 
    WHERE
        t.weeklyReport = :weeklyReport 
    ORDER BY
        t.reportSection ASC,
        t.taskType ASC,
        t.createdAt ASC */ select
            t1_0.id,
            t1_0.actual_results,
            t1_0.budget,
            t1_0.completion_date,
            t1_0.created_at,
            t1_0.due_date,
            t1_0.expected_results,
            t1_0.is_completed,
            t1_0.is_overdue,
            t1_0.personnel_assignment,
            t1_0.priority,
            t1_0.progress,
            pp1_0.id,
            pp1_0.actual_results,
            pp1_0.assigned_members,
            pp1_0.completion_date,
            pp1_0.created_at,
            pp1_0.end_date,
            pp1_0.estimated_results,
            pp1_0.key_indicators,
            pp1_0.phase_description,
            pp1_0.phase_name,
            pp1_0.phase_order,
            pp1_0.project_id,
            pp1_0.start_date,
            pp1_0.status,
            pp1_0.timeline,
            pp1_0.updated_at,
            t1_0.quantitative_metrics,
            t1_0.report_section,
            t1_0.result_difference_analysis,
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            sp1_0.admin_reviewer_id,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            sp1_0.manager_reviewer_id,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sp1_0.super_admin_reviewer_id,
            sp1_0.timeline,
            sp1_0.updated_at,
            t1_0.start_date,
            t1_0.stop_loss_point,
            t1_0.task_name,
            t1_0.task_type,
            t1_0.timeline,
            t1_0.updated_at,
            t1_0.weekly_report_id 
        from
            tasks t1_0 
        left join
            simple_projects sp1_0 
                on sp1_0.id=t1_0.simple_project_id 
        left join
            project_phases pp1_0 
                on pp1_0.id=t1_0.project_phase_id 
        where
            t1_0.weekly_report_id=? 
        order by
            t1_0.report_section,
            t1_0.task_type,
            t1_0.created_at
2025-09-17 16:44:07 - Securing GET /reports
2025-09-17 16:44:07 - Processing authentication for request: /api/reports
2025-09-17 16:44:07 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-17 16:44:07 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-17 16:44:07 - Successfully authenticated user: manager1 for request: /api/reports
2025-09-17 16:44:07 - Secured GET /reports
2025-09-17 16:44:07 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.WeeklyReportController.getWeeklyReports(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.WeeklyReportController]
2025-09-17 16:44:07 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.WeeklyReportController.getWeeklyReports(java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.WeeklyReportController]
2025-09-17 16:44:07 - Getting weekly reports with filters - page: 0, size: 20 for user: 5
2025-09-17 16:44:07 - Getting weekly reports with filter for user: 5
2025-09-17 16:44:07 - 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-17 16:44:07 - 
    /* SELECT
        DISTINCT r 
    FROM
        WeeklyReport r 
    WHERE
        r.author = :user 
        OR (
            :userRole = 'SUPER_ADMIN'
        ) 
        OR (
            :userRole = 'ADMIN'
        ) 
        OR (
            :userRole = 'MANAGER' 
            AND r.author.department = :userDepartment
        ) 
    order by
        r.reportWeek desc */ select
            distinct wr1_0.id,
            wr1_0.achievements,
            wr1_0.additional_notes,
            wr1_0.admin_review_comment,
            wr1_0.admin_reviewed_at,
            wr1_0.admin_reviewer_id,
            wr1_0.ai_analysis_result,
            wr1_0.ai_analyzed_at,
            wr1_0.ai_confidence,
            wr1_0.ai_key_issues,
            wr1_0.ai_processing_time_ms,
            wr1_0.ai_provider_used,
            wr1_0.ai_quality_score,
            wr1_0.ai_recommendations,
            wr1_0.ai_risk_level,
            wr1_0.author_id,
            wr1_0.challenges,
            wr1_0.content,
            wr1_0.created_at,
            wr1_0.is_late,
            wr1_0.manager_review_comment,
            wr1_0.manager_reviewed_at,
            wr1_0.manager_reviewer_id,
            wr1_0.next_week_plan,
            wr1_0.priority,
            wr1_0.report_week,
            wr1_0.review_comment,
            wr1_0.reviewed_at,
            wr1_0.reviewer_id,
            wr1_0.status,
            wr1_0.submitted_at,
            wr1_0.super_admin_review_comment,
            wr1_0.super_admin_reviewed_at,
            wr1_0.super_admin_reviewer_id,
            wr1_0.template_id,
            wr1_0.title,
            wr1_0.updated_at,
            wr1_0.week_number,
            wr1_0.word_count,
            wr1_0.work_summary,
            wr1_0.report_year 
        from
            weekly_reports wr1_0 
        join
            users a1_0 
                on a1_0.id=wr1_0.author_id 
        where
            wr1_0.author_id=? 
            or (
                ?='SUPER_ADMIN'
            ) 
            or (
                ?='ADMIN'
            ) 
            or (
                ?='MANAGER' 
                and a1_0.department_id=?
            ) 
        order by
            wr1_0.report_week desc 
        limit
            ?, ?
Hibernate: 
    /* SELECT
        DISTINCT r 
    FROM
        WeeklyReport r 
    WHERE
        r.author = :user 
        OR (
            :userRole = 'SUPER_ADMIN'
        ) 
        OR (
            :userRole = 'ADMIN'
        ) 
        OR (
            :userRole = 'MANAGER' 
            AND r.author.department = :userDepartment
        ) 
    order by
        r.reportWeek desc */ select
            distinct wr1_0.id,
            wr1_0.achievements,
            wr1_0.additional_notes,
            wr1_0.admin_review_comment,
            wr1_0.admin_reviewed_at,
            wr1_0.admin_reviewer_id,
            wr1_0.ai_analysis_result,
            wr1_0.ai_analyzed_at,
            wr1_0.ai_confidence,
            wr1_0.ai_key_issues,
            wr1_0.ai_processing_time_ms,
            wr1_0.ai_provider_used,
            wr1_0.ai_quality_score,
            wr1_0.ai_recommendations,
            wr1_0.ai_risk_level,
            wr1_0.author_id,
            wr1_0.challenges,
            wr1_0.content,
            wr1_0.created_at,
            wr1_0.is_late,
            wr1_0.manager_review_comment,
            wr1_0.manager_reviewed_at,
            wr1_0.manager_reviewer_id,
            wr1_0.next_week_plan,
            wr1_0.priority,
            wr1_0.report_week,
            wr1_0.review_comment,
            wr1_0.reviewed_at,
            wr1_0.reviewer_id,
            wr1_0.status,
            wr1_0.submitted_at,
            wr1_0.super_admin_review_comment,
            wr1_0.super_admin_reviewed_at,
            wr1_0.super_admin_reviewer_id,
            wr1_0.template_id,
            wr1_0.title,
            wr1_0.updated_at,
            wr1_0.week_number,
            wr1_0.word_count,
            wr1_0.work_summary,
            wr1_0.report_year 
        from
            weekly_reports wr1_0 
        join
            users a1_0 
                on a1_0.id=wr1_0.author_id 
        where
            wr1_0.author_id=? 
            or (
                ?='SUPER_ADMIN'
            ) 
            or (
                ?='ADMIN'
            ) 
            or (
                ?='MANAGER' 
                and a1_0.department_id=?
            ) 
        order by
            wr1_0.report_week desc 
        limit
            ?, ?
2025-09-17 16:44:07 - Found 1 reports from repository query
2025-09-17 16:44:07 - Report ID=4, canView=true
2025-09-17 16:44:07 - Converting report ID=4 to response DTO
2025-09-17 16:44:07 - 
    select
        c1_0.weekly_report_id,
        c1_0.id,
        c1_0.attachments,
        c1_0.author_id,
        c1_0.content,
        c1_0.created_at,
        c1_0.is_private,
        c1_0.is_resolved,
        c1_0.likes_count,
        c1_0.parent_id,
        c1_0.priority,
        c1_0.resolved_at,
        c1_0.resolved_by,
        c1_0.status,
        c1_0.tags,
        c1_0.type,
        c1_0.updated_at 
    from
        comments c1_0 
    where
        c1_0.weekly_report_id=? 
    order by
        c1_0.created_at
Hibernate: 
    select
        c1_0.weekly_report_id,
        c1_0.id,
        c1_0.attachments,
        c1_0.author_id,
        c1_0.content,
        c1_0.created_at,
        c1_0.is_private,
        c1_0.is_resolved,
        c1_0.likes_count,
        c1_0.parent_id,
        c1_0.priority,
        c1_0.resolved_at,
        c1_0.resolved_by,
        c1_0.status,
        c1_0.tags,
        c1_0.type,
        c1_0.updated_at 
    from
        comments c1_0 
    where
        c1_0.weekly_report_id=? 
    order by
        c1_0.created_at
2025-09-17 16:44:07 - 
    select
        ar1_0.report_id,
        ar1_0.id,
        ar1_0.analysis_type,
        ar1_0.completed_at,
        ar1_0.confidence,
        ar1_0.created_at,
        ar1_0.error_message,
        ar1_0.metadata,
        ar1_0.model_version,
        ar1_0.parameters,
        ar1_0.processing_time_ms,
        ar1_0.result,
        ar1_0.status,
        ar1_0.updated_at 
    from
        ai_analysis_results ar1_0 
    where
        ar1_0.report_id=? 
    order by
        ar1_0.created_at desc
Hibernate: 
    select
        ar1_0.report_id,
        ar1_0.id,
        ar1_0.analysis_type,
        ar1_0.completed_at,
        ar1_0.confidence,
        ar1_0.created_at,
        ar1_0.error_message,
        ar1_0.metadata,
        ar1_0.model_version,
        ar1_0.parameters,
        ar1_0.processing_time_ms,
        ar1_0.result,
        ar1_0.status,
        ar1_0.updated_at 
    from
        ai_analysis_results ar1_0 
    where
        ar1_0.report_id=? 
    order by
        ar1_0.created_at desc
2025-09-17 16:44:07 - Creating response with 1 report responses
2025-09-17 16:44:07 - Response created successfully: totalElements=1, reports.size()=1
2025-09-17 16:44:07 - Successfully retrieved 1 reports, total elements: 1
2025-09-17 16:44:07 - Report: id=4, title=222, status=AI_ANALYZING, authorName=主管一
2025-09-17 16:44:08 - Securing GET /tasks/weekly-report/4
2025-09-17 16:44:08 - Processing authentication for request: /api/tasks/weekly-report/4
2025-09-17 16:44:08 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-17 16:44:08 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-17 16:44:08 - Successfully authenticated user: manager1 for request: /api/tasks/weekly-report/4
2025-09-17 16:44:08 - Secured GET /tasks/weekly-report/4
2025-09-17 16:44:08 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getTasksByWeeklyReport(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-17 16:44:08 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getTasksByWeeklyReport(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-17 16:44:08 - Fetching tasks for weekly report: 4
2025-09-17 16:44:08 - 
    select
        wr1_0.id,
        wr1_0.achievements,
        wr1_0.additional_notes,
        wr1_0.admin_review_comment,
        wr1_0.admin_reviewed_at,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_result,
        wr1_0.ai_analyzed_at,
        wr1_0.ai_confidence,
        wr1_0.ai_key_issues,
        wr1_0.ai_processing_time_ms,
        wr1_0.ai_provider_used,
        wr1_0.ai_quality_score,
        wr1_0.ai_recommendations,
        wr1_0.ai_risk_level,
        wr1_0.author_id,
        wr1_0.challenges,
        wr1_0.content,
        wr1_0.created_at,
        wr1_0.is_late,
        wr1_0.manager_review_comment,
        wr1_0.manager_reviewed_at,
        wr1_0.manager_reviewer_id,
        wr1_0.next_week_plan,
        wr1_0.priority,
        wr1_0.report_week,
        wr1_0.review_comment,
        wr1_0.reviewed_at,
        wr1_0.reviewer_id,
        wr1_0.status,
        wr1_0.submitted_at,
        wr1_0.super_admin_review_comment,
        wr1_0.super_admin_reviewed_at,
        wr1_0.super_admin_reviewer_id,
        wr1_0.template_id,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.week_number,
        wr1_0.word_count,
        wr1_0.work_summary,
        wr1_0.report_year 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
Hibernate: 
    select
        wr1_0.id,
        wr1_0.achievements,
        wr1_0.additional_notes,
        wr1_0.admin_review_comment,
        wr1_0.admin_reviewed_at,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_result,
        wr1_0.ai_analyzed_at,
        wr1_0.ai_confidence,
        wr1_0.ai_key_issues,
        wr1_0.ai_processing_time_ms,
        wr1_0.ai_provider_used,
        wr1_0.ai_quality_score,
        wr1_0.ai_recommendations,
        wr1_0.ai_risk_level,
        wr1_0.author_id,
        wr1_0.challenges,
        wr1_0.content,
        wr1_0.created_at,
        wr1_0.is_late,
        wr1_0.manager_review_comment,
        wr1_0.manager_reviewed_at,
        wr1_0.manager_reviewer_id,
        wr1_0.next_week_plan,
        wr1_0.priority,
        wr1_0.report_week,
        wr1_0.review_comment,
        wr1_0.reviewed_at,
        wr1_0.reviewer_id,
        wr1_0.status,
        wr1_0.submitted_at,
        wr1_0.super_admin_review_comment,
        wr1_0.super_admin_reviewed_at,
        wr1_0.super_admin_reviewer_id,
        wr1_0.template_id,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.week_number,
        wr1_0.word_count,
        wr1_0.work_summary,
        wr1_0.report_year 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
2025-09-17 16:44:08 - 
    /* SELECT
        t 
    FROM
        Task t 
    LEFT JOIN
        
    FETCH
        t.simpleProject 
    LEFT JOIN
        
    FETCH
        t.projectPhase 
    WHERE
        t.weeklyReport = :weeklyReport 
    ORDER BY
        t.reportSection ASC,
        t.taskType ASC,
        t.createdAt ASC */ select
            t1_0.id,
            t1_0.actual_results,
            t1_0.budget,
            t1_0.completion_date,
            t1_0.created_at,
            t1_0.due_date,
            t1_0.expected_results,
            t1_0.is_completed,
            t1_0.is_overdue,
            t1_0.personnel_assignment,
            t1_0.priority,
            t1_0.progress,
            pp1_0.id,
            pp1_0.actual_results,
            pp1_0.assigned_members,
            pp1_0.completion_date,
            pp1_0.created_at,
            pp1_0.end_date,
            pp1_0.estimated_results,
            pp1_0.key_indicators,
            pp1_0.phase_description,
            pp1_0.phase_name,
            pp1_0.phase_order,
            pp1_0.project_id,
            pp1_0.start_date,
            pp1_0.status,
            pp1_0.timeline,
            pp1_0.updated_at,
            t1_0.quantitative_metrics,
            t1_0.report_section,
            t1_0.result_difference_analysis,
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            sp1_0.admin_reviewer_id,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            sp1_0.manager_reviewer_id,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sp1_0.super_admin_reviewer_id,
            sp1_0.timeline,
            sp1_0.updated_at,
            t1_0.start_date,
            t1_0.stop_loss_point,
            t1_0.task_name,
            t1_0.task_type,
            t1_0.timeline,
            t1_0.updated_at,
            t1_0.weekly_report_id 
        from
            tasks t1_0 
        left join
            simple_projects sp1_0 
                on sp1_0.id=t1_0.simple_project_id 
        left join
            project_phases pp1_0 
                on pp1_0.id=t1_0.project_phase_id 
        where
            t1_0.weekly_report_id=? 
        order by
            t1_0.report_section,
            t1_0.task_type,
            t1_0.created_at
Hibernate: 
    /* SELECT
        t 
    FROM
        Task t 
    LEFT JOIN
        
    FETCH
        t.simpleProject 
    LEFT JOIN
        
    FETCH
        t.projectPhase 
    WHERE
        t.weeklyReport = :weeklyReport 
    ORDER BY
        t.reportSection ASC,
        t.taskType ASC,
        t.createdAt ASC */ select
            t1_0.id,
            t1_0.actual_results,
            t1_0.budget,
            t1_0.completion_date,
            t1_0.created_at,
            t1_0.due_date,
            t1_0.expected_results,
            t1_0.is_completed,
            t1_0.is_overdue,
            t1_0.personnel_assignment,
            t1_0.priority,
            t1_0.progress,
            pp1_0.id,
            pp1_0.actual_results,
            pp1_0.assigned_members,
            pp1_0.completion_date,
            pp1_0.created_at,
            pp1_0.end_date,
            pp1_0.estimated_results,
            pp1_0.key_indicators,
            pp1_0.phase_description,
            pp1_0.phase_name,
            pp1_0.phase_order,
            pp1_0.project_id,
            pp1_0.start_date,
            pp1_0.status,
            pp1_0.timeline,
            pp1_0.updated_at,
            t1_0.quantitative_metrics,
            t1_0.report_section,
            t1_0.result_difference_analysis,
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            sp1_0.admin_reviewer_id,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            sp1_0.manager_reviewer_id,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sp1_0.super_admin_reviewer_id,
            sp1_0.timeline,
            sp1_0.updated_at,
            t1_0.start_date,
            t1_0.stop_loss_point,
            t1_0.task_name,
            t1_0.task_type,
            t1_0.timeline,
            t1_0.updated_at,
            t1_0.weekly_report_id 
        from
            tasks t1_0 
        left join
            simple_projects sp1_0 
                on sp1_0.id=t1_0.simple_project_id 
        left join
            project_phases pp1_0 
                on pp1_0.id=t1_0.project_phase_id 
        where
            t1_0.weekly_report_id=? 
        order by
            t1_0.report_section,
            t1_0.task_type,
            t1_0.created_at
2025-09-17 16:44:10 - Securing GET /simple/projects/my?status=ALL
2025-09-17 16:44:10 - Processing authentication for request: /api/simple/projects/my
2025-09-17 16:44:10 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-17 16:44:10 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-17 16:44:10 - Successfully authenticated user: manager1 for request: /api/simple/projects/my
2025-09-17 16:44:10 - Secured GET /simple/projects/my?status=ALL
2025-09-17 16:44:10 - 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.full_name,
        u1_0.last_login_time,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-17 16:44:10 - 
    /* SELECT
        p 
    FROM
        SimpleProject p 
    LEFT JOIN
        
    FETCH
        p.createdBy 
    LEFT JOIN
        
    FETCH
        p.managerReviewer 
    LEFT JOIN
        
    FETCH
        p.adminReviewer 
    LEFT JOIN
        
    FETCH
        p.superAdminReviewer 
    WHERE
        p.createdBy = :createdBy 
    ORDER BY
        p.createdAt DESC */ select
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            ar1_0.id,
            ar1_0.avatar_url,
            ar1_0.created_at,
            ar1_0.department_id,
            ar1_0.email,
            ar1_0.employee_id,
            ar1_0.full_name,
            ar1_0.last_login_time,
            ar1_0.password,
            ar1_0.phone,
            ar1_0.position,
            ar1_0.role,
            ar1_0.status,
            ar1_0.updated_at,
            ar1_0.username,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            cb1_0.id,
            cb1_0.avatar_url,
            cb1_0.created_at,
            cb1_0.department_id,
            cb1_0.email,
            cb1_0.employee_id,
            cb1_0.full_name,
            cb1_0.last_login_time,
            cb1_0.password,
            cb1_0.phone,
            cb1_0.position,
            cb1_0.role,
            cb1_0.status,
            cb1_0.updated_at,
            cb1_0.username,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            mr1_0.id,
            mr1_0.avatar_url,
            mr1_0.created_at,
            mr1_0.department_id,
            mr1_0.email,
            mr1_0.employee_id,
            mr1_0.full_name,
            mr1_0.last_login_time,
            mr1_0.password,
            mr1_0.phone,
            mr1_0.position,
            mr1_0.role,
            mr1_0.status,
            mr1_0.updated_at,
            mr1_0.username,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sar1_0.id,
            sar1_0.avatar_url,
            sar1_0.created_at,
            sar1_0.department_id,
            sar1_0.email,
            sar1_0.employee_id,
            sar1_0.full_name,
            sar1_0.last_login_time,
            sar1_0.password,
            sar1_0.phone,
            sar1_0.position,
            sar1_0.role,
            sar1_0.status,
            sar1_0.updated_at,
            sar1_0.username,
            sp1_0.timeline,
            sp1_0.updated_at 
        from
            simple_projects sp1_0 
        left join
            users cb1_0 
                on cb1_0.id=sp1_0.created_by 
        left join
            users mr1_0 
                on mr1_0.id=sp1_0.manager_reviewer_id 
        left join
            users ar1_0 
                on ar1_0.id=sp1_0.admin_reviewer_id 
        left join
            users sar1_0 
                on sar1_0.id=sp1_0.super_admin_reviewer_id 
        where
            cb1_0.id=? 
        order by
            sp1_0.created_at desc
Hibernate: 
    /* SELECT
        p 
    FROM
        SimpleProject p 
    LEFT JOIN
        
    FETCH
        p.createdBy 
    LEFT JOIN
        
    FETCH
        p.managerReviewer 
    LEFT JOIN
        
    FETCH
        p.adminReviewer 
    LEFT JOIN
        
    FETCH
        p.superAdminReviewer 
    WHERE
        p.createdBy = :createdBy 
    ORDER BY
        p.createdAt DESC */ select
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            ar1_0.id,
            ar1_0.avatar_url,
            ar1_0.created_at,
            ar1_0.department_id,
            ar1_0.email,
            ar1_0.employee_id,
            ar1_0.full_name,
            ar1_0.last_login_time,
            ar1_0.password,
            ar1_0.phone,
            ar1_0.position,
            ar1_0.role,
            ar1_0.status,
            ar1_0.updated_at,
            ar1_0.username,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            cb1_0.id,
            cb1_0.avatar_url,
            cb1_0.created_at,
            cb1_0.department_id,
            cb1_0.email,
            cb1_0.employee_id,
            cb1_0.full_name,
            cb1_0.last_login_time,
            cb1_0.password,
            cb1_0.phone,
            cb1_0.position,
            cb1_0.role,
            cb1_0.status,
            cb1_0.updated_at,
            cb1_0.username,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            mr1_0.id,
            mr1_0.avatar_url,
            mr1_0.created_at,
            mr1_0.department_id,
            mr1_0.email,
            mr1_0.employee_id,
            mr1_0.full_name,
            mr1_0.last_login_time,
            mr1_0.password,
            mr1_0.phone,
            mr1_0.position,
            mr1_0.role,
            mr1_0.status,
            mr1_0.updated_at,
            mr1_0.username,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sar1_0.id,
            sar1_0.avatar_url,
            sar1_0.created_at,
            sar1_0.department_id,
            sar1_0.email,
            sar1_0.employee_id,
            sar1_0.full_name,
            sar1_0.last_login_time,
            sar1_0.password,
            sar1_0.phone,
            sar1_0.position,
            sar1_0.role,
            sar1_0.status,
            sar1_0.updated_at,
            sar1_0.username,
            sp1_0.timeline,
            sp1_0.updated_at 
        from
            simple_projects sp1_0 
        left join
            users cb1_0 
                on cb1_0.id=sp1_0.created_by 
        left join
            users mr1_0 
                on mr1_0.id=sp1_0.manager_reviewer_id 
        left join
            users ar1_0 
                on ar1_0.id=sp1_0.admin_reviewer_id 
        left join
            users sar1_0 
                on sar1_0.id=sp1_0.super_admin_reviewer_id 
        where
            cb1_0.id=? 
        order by
            sp1_0.created_at desc
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  12:11 min
[INFO] Finished at: 2025-09-17T16:47:07+08:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.springframework.boot:spring-boot-maven-plugin:3.2.0:run (default-cli) on project weekly-report-backend: Process terminated with exit code: 137 -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
