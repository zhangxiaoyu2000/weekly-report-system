server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: weekly-report-backend
  
  profiles:
    active: dev
  
  # 禁用默认静态资源处理，防止与API路径冲突（context-path=/api时/ai被误认为静态资源）
  web:
    resources:
      add-mappings: false  # 关键：禁用Spring Boot自动静态资源映射
  
  # Spring MVC配置
  mvc:
    throw-exception-if-no-handler-found: true  # 启用以正确处理404错误
    dispatch-options-request: false
  
  # Database configuration with MySQL  
  datasource:
    url: jdbc:mysql://localhost:3309/weekly_report_system?useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&createDatabaseIfNotExist=true
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:rootpass123}
    driver-class-name: com.mysql.cj.jdbc.Driver
    
    # HikariCP connection pool configuration
    hikari:
      # Enhanced connection pool sizing for better performance
      minimum-idle: 3
      maximum-pool-size: 15
      idle-timeout: 180000  # 3 minutes (reduced for faster turnover)
      max-lifetime: 900000  # 15 minutes (reduced for better connection health)
      connection-timeout: 15000  # 15 seconds (increased for stability)
      
      # Enhanced performance settings
      leak-detection-threshold: 30000  # 30 seconds (faster detection)
      pool-name: WeeklyReportHikariCP
      
      # Enhanced connection validation
      connection-test-query: SELECT 1 FROM DUAL
      validation-timeout: 8000  # 8 seconds (increased)
      
      # Connection behavior configuration
      auto-commit: false  # CRITICAL: Let Hibernate manage transactions
      
      # Additional connection properties
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false
    
  # Flyway configuration  
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: false
    out-of-order: true
    clean-disabled: true
  jpa:
    hibernate:
      ddl-auto: none  # Disable validation to allow VARCHAR columns with ENUM entities
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
    show-sql: true
    properties:
      hibernate:
        # Dialect and SQL settings
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        use_sql_comments: true
        
        # Performance optimizations
        jdbc:
          batch_size: 20
          fetch_size: 50
          time_zone: UTC
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        
        # Cache configuration - disabled in dev profile
        cache:
          use_second_level_cache: false
          use_query_cache: false
        
        # Connection and session settings
        connection:
          provider_disables_autocommit: true  # Let Hibernate manage autocommit
        temp:
          use_jdbc_metadata_defaults: false
          
        # Statistics and monitoring
        generate_statistics: false
        session:
          events:
            log:
              LOG_QUERIES_SLOWER_THAN_MS: 1000
              
    defer-datasource-initialization: false
    open-in-view: false  # Disable to avoid lazy loading issues in web layer

  # Transaction management configuration
  transaction:
    default-timeout: 45  # 45 seconds unified timeout (increased for stability)
    rollback-on-commit-failure: true
  
  # Security configuration
  security:
    user:
      name: admin
      password: ${ADMIN_PASSWORD:admin123}

# JWT configuration
jwt:
  secret: ${JWT_SECRET:MyVerySecureWeeklyReportJwtSigningKeyForHS512AlgorithmMustBe512BitsOrGreater2024!@#$%^&*()_+=}
  access-token-expiration: ${JWT_ACCESS_EXPIRATION:3600000}   # 60 minutes (3600000 ms)
  refresh-token-expiration: ${JWT_REFRESH_EXPIRATION:604800000}  # 7 days (604800000 ms)

# Logging configuration
logging:
  level:
    # 应用程序详细日志
    com.weeklyreport: DEBUG
    com.weeklyreport.controller: DEBUG  # 控制器详细日志
    com.weeklyreport.service: DEBUG     # 服务层详细日志
    com.weeklyreport.repository: DEBUG  # 数据访问层详细日志
    com.weeklyreport.security: DEBUG    # 安全组件详细日志
    com.weeklyreport.exception: DEBUG   # 异常处理详细日志
    
    # Spring Security详细日志
    org.springframework.security: DEBUG
    org.springframework.security.web: DEBUG
    org.springframework.security.access: DEBUG
    org.springframework.security.authentication: DEBUG
    
    # 数据库连接池详细监控
    com.zaxxer.hikari: DEBUG
    com.zaxxer.hikari.pool: DEBUG
    com.zaxxer.hikari.pool.HikariPool: DEBUG
    
    # Hibernate/JPA详细日志
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.stat: INFO
    org.hibernate.orm.jdbc.bind: TRACE  # 参数绑定
    org.hibernate.orm.jdbc.extract: TRACE  # 结果集提取
    
    # Spring事务管理详细日志
    org.springframework.transaction: DEBUG
    org.springframework.orm.jpa: DEBUG
    org.springframework.orm.jpa.JpaTransactionManager: DEBUG
    
    # Web请求详细日志
    org.springframework.web: DEBUG
    org.springframework.web.servlet: DEBUG
    org.springframework.web.servlet.DispatcherServlet: DEBUG
    
    # 根日志级别设为INFO以避免过多噪音
    root: INFO
    
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
  charset:
    console: UTF-8
    file: UTF-8
  file:
    name: logs/weekly-report.log
    max-size: 100MB  # 单个日志文件最大大小
    max-history: 10  # 保留的历史日志文件数量

# Actuator configuration for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,hikaricp,flyway,liquibase
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
      show-components: always
    metrics:
      enabled: true
  metrics:
    export:
      # Simple metrics export (can be extended with Prometheus/Grafana)
      simple:
        enabled: true
    enable:
      hikaricp: true
      jvm: true
      system: true
      jdbc: true
      hibernate: true
  health:
    db:
      enabled: true
    diskspace:
      enabled: true

# CORS configuration
cors:
  allowed-origins: http://localhost:3000,http://localhost:3002,http://localhost:3005,http://localhost:3006,http://localhost:3007,http://localhost:3008,http://localhost:3009
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# AI Services configuration
ai:
  enabled: true
  default-provider: deepseek  # Use fixed DeepSeek implementation
  enable-fallback: true
  max-retries: 3
  timeout-ms: 30000
  
  # DeepSeek configuration
  deepseek:
    enabled: true
    api-key: ${DEEPSEEK_API_KEY:sk-4613204f1ddc4fcf88894d77be5da3e8}
    base-url: https://api.deepseek.com
    model: deepseek-chat
    temperature: 0.7
    max-tokens: 2000
  
  # OpenAI configuration
  openai:
    enabled: false  # Disabled by default - requires API key
    api-key: ${OPENAI_API_KEY:}
    base-url: https://api.openai.com/v1
    model: gpt-3.5-turbo
    temperature: 0.7
    max-tokens: 4096
  
  # Anthropic configuration  
  anthropic:
    enabled: false  # Disabled by default - requires API key
    api-key: ${ANTHROPIC_API_KEY:}
    base-url: https://api.anthropic.com/v1
    model: claude-3-sonnet-20240229
    temperature: 0.7
    max-tokens: 4096
  
  # Local AI configuration
  local:
    enabled: false  # Disabled by default
    endpoint: http://localhost:8000
    model: local-model
    temperature: 0.7
    max-tokens: 2048
  

---
# Development profile
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    hikari:
      minimum-idle: 3
      maximum-pool-size: 12
      idle-timeout: 180000
      max-lifetime: 900000
      connection-timeout: 15000
      pool-name: WeeklyReportHikariCP-Dev
      validation-timeout: 8000
      leak-detection-threshold: 30000
      auto-commit: false  # CRITICAL: Let Hibernate manage transactions
  jpa:
    hibernate:
      ddl-auto: none  # Disable validation to allow VARCHAR columns with ENUM entities
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        generate_statistics: false
  flyway:
    enabled: false  # Disable Flyway in dev profile to avoid circular dependency

# AI configuration for development - use DeepSeek
ai:
  default-provider: deepseek
  deepseek:
    enabled: true
  openai:
    enabled: false

---
# Test profile
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:mysql://localhost:3309/weekly_report_system?useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&createDatabaseIfNotExist=true
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:rootpass123}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      minimum-idle: 1
      maximum-pool-size: 5
      idle-timeout: 60000
      max-lifetime: 1800000
      connection-timeout: 5000
      pool-name: WeeklyReportHikariCP-Test
  jpa:
    hibernate:
      ddl-auto: validate  # Use Flyway for schema management
    show-sql: false  # Reduce test noise
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: false
        jdbc:
          batch_size: 20
          fetch_size: 50
          time_zone: UTC
        generate_statistics: false
  flyway:
    enabled: false
    clean-disabled: false  # Allow clean in test environment
    baseline-on-migrate: true

# AI configuration for testing - use DeepSeek
ai:
  default-provider: deepseek
  deepseek:
    enabled: true
  openai:
    enabled: false

---
# Docker profile
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:mysql://${DB_HOST:mysql}:${DB_PORT:3306}/${DB_NAME:weekly_report_system}?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&createDatabaseIfNotExist=true
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:rootpass123}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15
      idle-timeout: 300000
      max-lifetime: 1800000
      connection-timeout: 20000
      leak-detection-threshold: 60000
      pool-name: WeeklyReportHikariCP-Docker
      connection-test-query: SELECT 1
      validation-timeout: 5000
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false
  jpa:
    hibernate:
      ddl-auto: validate  # Use Flyway for schema management
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        jdbc:
          batch_size: 20
          fetch_size: 50
          time_zone: UTC
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        generate_statistics: false  # Disable in docker for performance
  flyway:
    enabled: false  # Database schema already complete
    baseline-on-migrate: true
    validate-on-migrate: false

---
# Production profile
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    hikari:
      minimum-idle: 10
      maximum-pool-size: 50  # Higher for production load
      idle-timeout: 600000   # 10 minutes
      max-lifetime: 1800000  # 30 minutes
      connection-timeout: 30000  # 30 seconds
      leak-detection-threshold: 120000  # 2 minutes
      pool-name: WeeklyReportHikariCP-Prod
      connection-test-query: SELECT 1
      validation-timeout: 10000
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 500  # Larger cache for production
        prepStmtCacheSqlLimit: 4096
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false
  jpa:
    hibernate:
      ddl-auto: validate  # Never auto-modify production schema
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        jdbc:
          batch_size: 50  # Larger batches in production
          fetch_size: 100
          time_zone: UTC
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        generate_statistics: false
        connection:
          provider_disables_autocommit: false

# AI configuration for production - use DeepSeek
ai:
  default-provider: deepseek
  enable-fallback: true
  max-retries: 2
  deepseek:
    enabled: true
  openai:
    enabled: false
  
# Production-specific logging
logging:
  level:
    com.weeklyreport: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type: WARN
    com.zaxxer.hikari: WARN