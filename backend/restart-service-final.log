[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------< com.weeklyreport:weekly-report-backend >---------------
[INFO] Building weekly-report-backend 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot:3.2.0:run (default-cli) > test-compile @ weekly-report-backend >>>
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ weekly-report-backend ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 30 resources from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ weekly-report-backend ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ weekly-report-backend ---
[INFO] skip non existing resourceDirectory /Volumes/project/my-project/backend/src/test/resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ weekly-report-backend ---
[INFO] No sources to compile
[INFO] 
[INFO] <<< spring-boot:3.2.0:run (default-cli) < test-compile @ weekly-report-backend <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.2.0:run (default-cli) @ weekly-report-backend ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
[32m :: Spring Boot :: [39m              [2m (v3.2.0)[0;39m

2025-09-20 17:43:51 - Starting WeeklyReportApplication using Java 23.0.2 with PID 40306 (/Volumes/project/my-project/backend/target/classes started by zhangxiaoyu in /Volumes/project/my-project/backend)
2025-09-20 17:43:51 - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-09-20 17:43:51 - The following 1 profile is active: "dev"
2025-09-20 17:43:52 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-20 17:43:52 - Finished Spring Data repository scanning in 39 ms. Found 14 JPA repository interfaces.
2025-09-20 17:43:52 - Tomcat initialized with port 8081 (http)
2025-09-20 17:43:52 - Starting service [Tomcat]
2025-09-20 17:43:52 - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-09-20 17:43:52 - Initializing Spring embedded WebApplicationContext
2025-09-20 17:43:52 - Root WebApplicationContext: initialization completed in 947 ms
2025-09-20 17:43:53 - Filter 'jwtAuthenticationFilter' configured for use
2025-09-20 17:43:53 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-20 17:43:53 - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-09-20 17:43:53 - HHH000026: Second-level cache disabled
2025-09-20 17:43:53 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-20 17:43:53 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-20 17:43:53 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-09-20 17:43:53 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-20 17:43:53 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-20 17:43:54 - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-20 17:43:54 - AI Monitoring Service initialized
2025-09-20 17:43:54 - Initializing AI service providers...
2025-09-20 17:43:54 - Calling DeepSeek API with URL: https://api.deepseek.com/chat/completions
2025-09-20 17:43:54 - Request payload: {"model":"deepseek-chat","messages":[{"role":"user","content":"hello"}],"temperature":0.1,"stream":false,"max_tokens":10}
2025-09-20 17:43:59 - DeepSeek API response status: 200 OK
2025-09-20 17:43:59 - DeepSeek API response body: {"id":"e9917070-e276-4231-a0c3-c48c73c66acb","object":"chat.completion","created":1758361435,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"Hello! How can I help you today?"},"logprobs":null,"finish_reason":"length"}],"usage":{"prompt_tokens":5,"completion_tokens":9,"total_tokens":14,"prompt_tokens_details":{"cached_tokens":0},"prompt_cache_hit_tokens":0,"prompt_cache_miss_tokens":5},"system_fingerprint":"fp_08f168e49b_prod0820_fp8_kvcache"}
2025-09-20 17:43:59 - Registered AI provider: DeepSeek AI Service - Status: Configured and healthy
2025-09-20 17:43:59 - Registered AI provider: Mock AI Service for Testing - Status: CONFIGURED
2025-09-20 17:43:59 - Initialized 2 AI service providers
2025-09-20 17:44:01 - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-09-20 17:44:01 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1927ac40, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2697db23, org.springframework.security.web.context.SecurityContextHolderFilter@319fe6a6, org.springframework.security.web.header.HeaderWriterFilter@5403fa4, org.springframework.web.filter.CorsFilter@3fba73f, org.springframework.security.web.authentication.logout.LogoutFilter@1bb325a0, com.weeklyreport.security.JwtAuthenticationFilter@7c5c20ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25ab4b84, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@76163364, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@11b7167d, org.springframework.security.web.session.SessionManagementFilter@10e8b907, org.springframework.security.web.access.ExceptionTranslationFilter@23163234, org.springframework.security.web.access.intercept.AuthorizationFilter@31b5bf26]
2025-09-20 17:44:01 - Tomcat started on port 8081 (http) with context path '/api'
2025-09-20 17:44:01 - Started WeeklyReportApplication in 10.211 seconds (process running for 10.356)
2025-09-20 17:44:02 - === 开始修复现有用户密码编码 ===
2025-09-20 17:44:02 - WeeklyReportHikariCP-Dev - Starting...
2025-09-20 17:44:02 - WeeklyReportHikariCP-Dev - Added connection com.mysql.cj.jdbc.ConnectionImpl@7910aa04
2025-09-20 17:44:02 - WeeklyReportHikariCP-Dev - Start completed.
2025-09-20 17:44:02 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
2025-09-20 17:44:02 - 检查 13 个用户的密码编码
2025-09-20 17:44:02 - 用户 admin 的密码已经加密，跳过
2025-09-20 17:44:02 - 用户 superadmin 的密码已经加密，跳过
2025-09-20 17:44:02 - 用户 zhangxiaoyu 的密码已经加密，跳过
2025-09-20 17:44:02 - 用户 admin1 的密码已经加密，跳过
2025-09-20 17:44:02 - 用户 admin2 的密码已经加密，跳过
2025-09-20 17:44:02 - 用户 manager1 的密码已经加密，跳过
2025-09-20 17:44:02 - 用户 testuser 的密码已经加密，跳过
2025-09-20 17:44:02 - 用户 testuser123 的密码已经加密，跳过
2025-09-20 17:44:02 - 用户 newuser123 的密码已经加密，跳过
2025-09-20 17:44:02 - 用户 testuser1758361059178 的密码已经加密，跳过
2025-09-20 17:44:02 - 用户 newuser1758361060884 的密码已经加密，跳过
2025-09-20 17:44:02 - 用户 testuser1758361133338 的密码已经加密，跳过
2025-09-20 17:44:02 - 用户 newuser1758361134934 的密码已经加密，跳过
2025-09-20 17:44:02 - === 所有用户密码都已正确编码 ===
2025-09-20 17:44:02 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:44:02 - Super admin user already exists: superadmin
2025-09-20 17:44:02 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:44:02 - Super admin user already exists: zhangxiaoyu
2025-09-20 17:44:02 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:44:02 - Admin user already exists: admin
2025-09-20 17:44:02 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:44:02 - Admin user already exists: admin1
2025-09-20 17:44:02 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:44:02 - Admin user already exists: admin2
2025-09-20 17:44:02 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:44:02 - Manager user already exists: manager1
=== SIMPLE COMMENTS TABLE FIX ===
Simple comments table fix failed: StatementCallback; bad SQL grammar [ALTER TABLE comments ADD COLUMN IF NOT EXISTS attachments JSON]
=== SIMPLE COMMENTS TABLE FIX COMPLETE ===
2025-09-20 17:48:01 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-20 17:48:01 - Initializing Servlet 'dispatcherServlet'
2025-09-20 17:48:01 - Completed initialization in 2 ms
2025-09-20 17:48:01 - Securing POST /auth/login
2025-09-20 17:48:01 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:01 - Cache miss for REQUEST dispatch to '/api/auth/login' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
2025-09-20 17:48:01 - Secured POST /auth/login
2025-09-20 17:48:01 - Login attempt for user: admin
2025-09-20 17:48:01 - Attempting login for user: admin
2025-09-20 17:48:01 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:02 - User admin logged in successfully
2025-09-20 17:48:02 - Login successful for user: admin
2025-09-20 17:48:02 - Securing POST /auth/login
2025-09-20 17:48:02 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:02 - Secured POST /auth/login
2025-09-20 17:48:02 - Login attempt for user: superadmin
2025-09-20 17:48:02 - Attempting login for user: superadmin
2025-09-20 17:48:02 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:02 - User superadmin logged in successfully
2025-09-20 17:48:02 - Login successful for user: superadmin
2025-09-20 17:48:02 - Securing POST /auth/login
2025-09-20 17:48:02 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:02 - Secured POST /auth/login
2025-09-20 17:48:02 - Login attempt for user: manager1
2025-09-20 17:48:02 - Attempting login for user: manager1
2025-09-20 17:48:02 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:02 - User manager1 logged in successfully
2025-09-20 17:48:02 - Login successful for user: manager1
2025-09-20 17:48:02 - Securing GET /health
2025-09-20 17:48:02 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:02 - Secured GET /health
2025-09-20 17:48:02 - Securing GET /health/authenticated
2025-09-20 17:48:02 - Processing authentication for request: /api/health/authenticated
2025-09-20 17:48:02 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:02 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:02 - Successfully authenticated user: admin for request: /api/health/authenticated
2025-09-20 17:48:02 - Secured GET /health/authenticated
2025-09-20 17:48:02 - Authorizing method invocation ReflectiveMethodInvocation: public com.weeklyreport.dto.ApiResponse com.weeklyreport.controller.HealthController.authenticatedHealth(org.springframework.security.core.Authentication); target is of class [com.weeklyreport.controller.HealthController]
2025-09-20 17:48:02 - Authorized method invocation ReflectiveMethodInvocation: public com.weeklyreport.dto.ApiResponse com.weeklyreport.controller.HealthController.authenticatedHealth(org.springframework.security.core.Authentication); target is of class [com.weeklyreport.controller.HealthController]
2025-09-20 17:48:02 - Securing POST /auth/login
2025-09-20 17:48:02 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:02 - Secured POST /auth/login
2025-09-20 17:48:02 - Login attempt for user: admin
2025-09-20 17:48:02 - Attempting login for user: admin
2025-09-20 17:48:02 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:03 - User admin logged in successfully
2025-09-20 17:48:03 - Login successful for user: admin
2025-09-20 17:48:03 - Securing POST /auth/login
2025-09-20 17:48:03 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:03 - Secured POST /auth/login
2025-09-20 17:48:03 - Login attempt for user: wronguser
2025-09-20 17:48:03 - Attempting login for user: wronguser
2025-09-20 17:48:03 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:03 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-20 17:48:03 - Login failed for user: wronguser - Invalid username/email or password
2025-09-20 17:48:03 - Securing POST /auth/register
2025-09-20 17:48:03 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:03 - Secured POST /auth/register
2025-09-20 17:48:03 - Registration attempt for user: testuser1758361683269
2025-09-20 17:48:03 - Attempting registration for user: testuser1758361683269
2025-09-20 17:48:03 - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-09-20 17:48:03 - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
2025-09-20 17:48:03 - 
    /* insert for
        com.weeklyreport.entity.User */insert 
    into
        users (created_at, email, password, role, status, updated_at, username) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert for
        com.weeklyreport.entity.User */insert 
    into
        users (created_at, email, password, role, status, updated_at, username) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-09-20 17:48:03 - User testuser1758361683269 registered successfully
2025-09-20 17:48:03 - Registration successful for user: testuser1758361683269
2025-09-20 17:48:03 - Securing POST /auth/refresh
2025-09-20 17:48:03 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:03 - Secured POST /auth/refresh
2025-09-20 17:48:03 - Token refresh attempt
2025-09-20 17:48:03 - Attempting to refresh token
2025-09-20 17:48:03 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:03 - AuthService.refreshToken failed, trying fallback
org.springframework.security.authentication.BadCredentialsException: User not found
	at com.weeklyreport.service.AuthService.lambda$refreshToken$1(AuthService.java:147)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.weeklyreport.service.AuthService.refreshToken(AuthService.java:147)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.weeklyreport.service.AuthService$$SpringCGLIB$$0.refreshToken(<generated>)
	at com.weeklyreport.controller.AuthController.refreshToken(AuthController.java:151)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-09-20 17:48:03 - Using fallback token response due to service error
2025-09-20 17:48:03 - Securing POST /auth/change-password
2025-09-20 17:48:03 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:03 - Secured POST /auth/change-password
2025-09-20 17:48:03 - Password change attempt
2025-09-20 17:48:03 - Attempting password change for user: admin
2025-09-20 17:48:03 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:04 - Password changed successfully for user: admin
2025-09-20 17:48:04 - 
    /* update
        for com.weeklyreport.entity.User */update users 
    set
        email=?,
        password=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    /* update
        for com.weeklyreport.entity.User */update users 
    set
        email=?,
        password=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-09-20 17:48:04 - Password changed successfully for user: admin
2025-09-20 17:48:04 - Securing GET /auth/check-username?username=testuser999
2025-09-20 17:48:04 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:04 - Secured GET /auth/check-username?username=testuser999
2025-09-20 17:48:04 - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-09-20 17:48:04 - Securing GET /auth/check-email?email=test999@example.com
2025-09-20 17:48:04 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:04 - Secured GET /auth/check-email?email=test999@example.com
2025-09-20 17:48:04 - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
2025-09-20 17:48:04 - Securing POST /auth/logout
2025-09-20 17:48:04 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:04 - Secured POST /auth/logout
2025-09-20 17:48:04 - Logout attempt
2025-09-20 17:48:04 - Attempting logout
2025-09-20 17:48:04 - User logged out successfully
2025-09-20 17:48:04 - Logout successful
2025-09-20 17:48:04 - Securing GET /users
2025-09-20 17:48:04 - Processing authentication for request: /api/users
2025-09-20 17:48:04 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:04 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:04 - Successfully authenticated user: admin for request: /api/users
2025-09-20 17:48:04 - Secured GET /users
2025-09-20 17:48:04 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getAllUsers(org.springframework.data.domain.Pageable,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 17:48:04 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getAllUsers(org.springframework.data.domain.Pageable,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 17:48:04 - Fetching all users with pagination
2025-09-20 17:48:04 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.weeklyreport.service.UserService.getAllUsers(org.springframework.data.domain.Pageable); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:04 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.weeklyreport.service.UserService.getAllUsers(org.springframework.data.domain.Pageable); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:04 - Fetching all users with pagination
2025-09-20 17:48:04 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.status!=? 
    limit
        ?, ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.status!=? 
    limit
        ?, ?
2025-09-20 17:48:04 - Users query completed in 7ms, total count: 14
2025-09-20 17:48:04 - Users fetched successfully, count: 14, took: 10ms
2025-09-20 17:48:04 - Securing GET /users?page=0&size=10
2025-09-20 17:48:04 - Processing authentication for request: /api/users
2025-09-20 17:48:04 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:04 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:04 - Successfully authenticated user: admin for request: /api/users
2025-09-20 17:48:04 - Secured GET /users?page=0&size=10
2025-09-20 17:48:04 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getAllUsers(org.springframework.data.domain.Pageable,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 17:48:04 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getAllUsers(org.springframework.data.domain.Pageable,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 17:48:04 - Fetching all users with pagination
2025-09-20 17:48:04 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.weeklyreport.service.UserService.getAllUsers(org.springframework.data.domain.Pageable); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:04 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.weeklyreport.service.UserService.getAllUsers(org.springframework.data.domain.Pageable); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:04 - Fetching all users with pagination
2025-09-20 17:48:04 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.status!=? 
    limit
        ?, ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.status!=? 
    limit
        ?, ?
2025-09-20 17:48:04 - 
    /* <criteria> */ select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.status!=?
Hibernate: 
    /* <criteria> */ select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.status!=?
2025-09-20 17:48:04 - Users query completed in 9ms, total count: 14
2025-09-20 17:48:04 - Users fetched successfully, count: 14, took: 13ms
2025-09-20 17:48:04 - Securing GET /users/fast
2025-09-20 17:48:04 - Processing authentication for request: /api/users/fast
2025-09-20 17:48:04 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:04 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:04 - Successfully authenticated user: admin for request: /api/users/fast
2025-09-20 17:48:04 - Secured GET /users/fast
2025-09-20 17:48:04 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getFastUsers(org.springframework.data.domain.Pageable,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 17:48:04 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getFastUsers(org.springframework.data.domain.Pageable,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 17:48:04 - Fetching users with fast query
2025-09-20 17:48:04 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.weeklyreport.service.UserService.getAllUsers(org.springframework.data.domain.Pageable); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:04 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.weeklyreport.service.UserService.getAllUsers(org.springframework.data.domain.Pageable); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:04 - Fetching all users with pagination
2025-09-20 17:48:04 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.status!=? 
    limit
        ?, ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.status!=? 
    limit
        ?, ?
2025-09-20 17:48:04 - Users query completed in 3ms, total count: 14
2025-09-20 17:48:04 - Fast users query completed in 7ms, count: 14
2025-09-20 17:48:04 - Securing GET /users/profile
2025-09-20 17:48:04 - Processing authentication for request: /api/users/profile
2025-09-20 17:48:04 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:04 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:04 - Successfully authenticated user: admin for request: /api/users/profile
2025-09-20 17:48:04 - Secured GET /users/profile
2025-09-20 17:48:04 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getCurrentUserProfile(com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 17:48:04 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getCurrentUserProfile(com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 17:48:04 - Fetching profile for user: admin
2025-09-20 17:48:04 - Fetching profile for user: admin
2025-09-20 17:48:04 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:04 - Profile fetched successfully for user: admin
2025-09-20 17:48:04 - Securing PUT /users/profile
2025-09-20 17:48:04 - Processing authentication for request: /api/users/profile
2025-09-20 17:48:04 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:04 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:04 - Successfully authenticated user: admin for request: /api/users/profile
2025-09-20 17:48:04 - Secured PUT /users/profile
2025-09-20 17:48:04 - Updating profile for user: admin
2025-09-20 17:48:04 - Updating profile for user: admin
2025-09-20 17:48:04 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:04 - Profile updated successfully for user: admin
2025-09-20 17:48:04 - Profile updated successfully for user: admin
2025-09-20 17:48:04 - Securing GET /users/1
2025-09-20 17:48:04 - Processing authentication for request: /api/users/1
2025-09-20 17:48:04 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:04 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:04 - Successfully authenticated user: admin for request: /api/users/1
2025-09-20 17:48:04 - Secured GET /users/1
2025-09-20 17:48:04 - Fetching user by ID: 1
2025-09-20 17:48:04 - Authorizing method invocation ReflectiveMethodInvocation: public com.weeklyreport.entity.User com.weeklyreport.service.UserService.getUserById(java.lang.Long); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:04 - Authorized method invocation ReflectiveMethodInvocation: public com.weeklyreport.entity.User com.weeklyreport.service.UserService.getUserById(java.lang.Long); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:04 - Fetching user by ID: 1
2025-09-20 17:48:04 - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-20 17:48:04 - User fetched successfully: admin
2025-09-20 17:48:04 - Securing GET /users/search?keyword=admin
2025-09-20 17:48:04 - Processing authentication for request: /api/users/search
2025-09-20 17:48:04 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:04 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:04 - Successfully authenticated user: admin for request: /api/users/search
2025-09-20 17:48:04 - Secured GET /users/search?keyword=admin
2025-09-20 17:48:04 - Searching users with keyword: admin
2025-09-20 17:48:04 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.weeklyreport.service.UserService.searchUsers(java.lang.String,org.springframework.data.domain.Pageable); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:04 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.weeklyreport.service.UserService.searchUsers(java.lang.String,org.springframework.data.domain.Pageable); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:04 - Searching users with keyword: admin
2025-09-20 17:48:04 - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        (
            LOWER(u.username) LIKE LOWER(CONCAT('%', :keyword, '%')) 
            OR LOWER(u.email) LIKE LOWER(CONCAT('%', :keyword, '%'))
        ) 
        AND u.status = :status */ select
            u1_0.id,
            u1_0.created_at,
            u1_0.email,
            u1_0.password,
            u1_0.role,
            u1_0.status,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            (
                lower(u1_0.username) like replace(lower(concat('%', ?, '%')), '\\', '\\\\') 
                or lower(u1_0.email) like replace(lower(concat('%', ?, '%')), '\\', '\\\\')
            ) 
            and u1_0.status=? 
        limit
            ?, ?
Hibernate: 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        (
            LOWER(u.username) LIKE LOWER(CONCAT('%', :keyword, '%')) 
            OR LOWER(u.email) LIKE LOWER(CONCAT('%', :keyword, '%'))
        ) 
        AND u.status = :status */ select
            u1_0.id,
            u1_0.created_at,
            u1_0.email,
            u1_0.password,
            u1_0.role,
            u1_0.status,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            (
                lower(u1_0.username) like replace(lower(concat('%', ?, '%')), '\\', '\\\\') 
                or lower(u1_0.email) like replace(lower(concat('%', ?, '%')), '\\', '\\\\')
            ) 
            and u1_0.status=? 
        limit
            ?, ?
2025-09-20 17:48:04 - User search completed, found: 4
2025-09-20 17:48:04 - Securing GET /users/role/ADMIN
2025-09-20 17:48:04 - Processing authentication for request: /api/users/role/ADMIN
2025-09-20 17:48:04 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:04 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:04 - Successfully authenticated user: admin for request: /api/users/role/ADMIN
2025-09-20 17:48:04 - Secured GET /users/role/ADMIN
2025-09-20 17:48:04 - Fetching users with role: ADMIN
2025-09-20 17:48:04 - Authorizing method invocation ReflectiveMethodInvocation: public java.util.List com.weeklyreport.service.UserService.getUsersByRole(com.weeklyreport.entity.User$Role); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:04 - Authorized method invocation ReflectiveMethodInvocation: public java.util.List com.weeklyreport.service.UserService.getUsersByRole(com.weeklyreport.entity.User$Role); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:04 - Fetching users with role: ADMIN
2025-09-20 17:48:04 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-09-20 17:48:04 - Users with role ADMIN fetched successfully, count: 3
2025-09-20 17:48:04 - Securing GET /users/statistics
2025-09-20 17:48:04 - Processing authentication for request: /api/users/statistics
2025-09-20 17:48:04 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:04 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:04 - Successfully authenticated user: admin for request: /api/users/statistics
2025-09-20 17:48:04 - Secured GET /users/statistics
2025-09-20 17:48:04 - Fetching user statistics
2025-09-20 17:48:04 - Authorizing method invocation ReflectiveMethodInvocation: public com.weeklyreport.service.UserService$UserStatistics com.weeklyreport.service.UserService.getUserStatistics(); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:04 - Authorized method invocation ReflectiveMethodInvocation: public com.weeklyreport.service.UserService$UserStatistics com.weeklyreport.service.UserService.getUserStatistics(); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:04 - 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.status = :status */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.status=?
Hibernate: 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.status = :status */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.status=?
2025-09-20 17:48:04 - 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.status = :status */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.status=?
Hibernate: 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.status = :status */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.status=?
2025-09-20 17:48:04 - 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.status = :status */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.status=?
Hibernate: 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.status = :status */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.status=?
2025-09-20 17:48:04 - 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.role = :role */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.role=?
Hibernate: 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.role = :role */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.role=?
2025-09-20 17:48:04 - 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.role = :role */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.role=?
Hibernate: 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.role = :role */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.role=?
2025-09-20 17:48:04 - User statistics fetched successfully
2025-09-20 17:48:04 - Securing POST /users
2025-09-20 17:48:04 - Processing authentication for request: /api/users
2025-09-20 17:48:04 - Extracted authorities from token: [ROLE_SUPER_ADMIN] for roles: ROLE_SUPER_ADMIN
2025-09-20 17:48:04 - Created authentication for user superadmin with authorities: [ROLE_SUPER_ADMIN]
2025-09-20 17:48:04 - Successfully authenticated user: superadmin for request: /api/users
2025-09-20 17:48:05 - Secured POST /users
2025-09-20 17:48:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.createUser(com.weeklyreport.dto.auth.RegisterRequest,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 17:48:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.createUser(com.weeklyreport.dto.auth.RegisterRequest,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 17:48:05 - Admin superadmin attempting to create user: newuser1758361684997
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
2025-09-20 17:48:05 - Authorizing method invocation ReflectiveMethodInvocation: public com.weeklyreport.entity.User com.weeklyreport.service.UserService.createUser(com.weeklyreport.entity.User,java.lang.String); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:05 - Authorized method invocation ReflectiveMethodInvocation: public com.weeklyreport.entity.User com.weeklyreport.service.UserService.createUser(com.weeklyreport.entity.User,java.lang.String); target is of class [com.weeklyreport.service.UserService]
2025-09-20 17:48:05 - Creating new user: newuser1758361684997
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
2025-09-20 17:48:05 - 
    /* insert for
        com.weeklyreport.entity.User */insert 
    into
        users (created_at, email, password, role, status, updated_at, username) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert for
        com.weeklyreport.entity.User */insert 
    into
        users (created_at, email, password, role, status, updated_at, username) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-09-20 17:48:05 - User created successfully: newuser1758361684997
2025-09-20 17:48:05 - User created successfully by admin superadmin: newuser1758361684997
2025-09-20 17:48:05 - Securing GET /ai/health
2025-09-20 17:48:05 - Processing authentication for request: /api/ai/health
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/ai/health
2025-09-20 17:48:05 - Secured GET /ai/health
2025-09-20 17:48:05 - Unexpected exception: No static resource ai/health. - Request: uri=/api/ai/health
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource ai/health.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-09-20 17:48:05 - Securing GET /ai/metrics
2025-09-20 17:48:05 - Processing authentication for request: /api/ai/metrics
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/ai/metrics
2025-09-20 17:48:05 - Secured GET /ai/metrics
2025-09-20 17:48:05 - Unexpected exception: No static resource ai/metrics. - Request: uri=/api/ai/metrics
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource ai/metrics.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-09-20 17:48:05 - Securing GET /ai/metrics?timeRange=7d
2025-09-20 17:48:05 - Processing authentication for request: /api/ai/metrics
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/ai/metrics
2025-09-20 17:48:05 - Secured GET /ai/metrics?timeRange=7d
2025-09-20 17:48:05 - Unexpected exception: No static resource ai/metrics. - Request: uri=/api/ai/metrics
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource ai/metrics.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-09-20 17:48:05 - Securing POST /ai/analyze/project
2025-09-20 17:48:05 - Processing authentication for request: /api/ai/analyze/project
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/ai/analyze/project
2025-09-20 17:48:05 - Secured POST /ai/analyze/project
2025-09-20 17:48:05 - Unexpected exception: No static resource ai/analyze/project. - Request: uri=/api/ai/analyze/project
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource ai/analyze/project.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-09-20 17:48:05 - Securing POST /ai/analyze/weekly-report
2025-09-20 17:48:05 - Processing authentication for request: /api/ai/analyze/weekly-report
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/ai/analyze/weekly-report
2025-09-20 17:48:05 - Secured POST /ai/analyze/weekly-report
2025-09-20 17:48:05 - Unexpected exception: No static resource ai/analyze/weekly-report. - Request: uri=/api/ai/analyze/weekly-report
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource ai/analyze/weekly-report.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-09-20 17:48:05 - Securing GET /ai/analysis/1
2025-09-20 17:48:05 - Processing authentication for request: /api/ai/analysis/1
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/ai/analysis/1
2025-09-20 17:48:05 - Secured GET /ai/analysis/1
2025-09-20 17:48:05 - Unexpected exception: No static resource ai/analysis/1. - Request: uri=/api/ai/analysis/1
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource ai/analysis/1.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-09-20 17:48:05 - Securing POST /ai/generate-suggestions
2025-09-20 17:48:05 - Processing authentication for request: /api/ai/generate-suggestions
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/ai/generate-suggestions
2025-09-20 17:48:05 - Secured POST /ai/generate-suggestions
2025-09-20 17:48:05 - Unexpected exception: No static resource ai/generate-suggestions. - Request: uri=/api/ai/generate-suggestions
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource ai/generate-suggestions.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-09-20 17:48:05 - Securing GET /ai/project-insights/1
2025-09-20 17:48:05 - Processing authentication for request: /api/ai/project-insights/1
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/ai/project-insights/1
2025-09-20 17:48:05 - Secured GET /ai/project-insights/1
2025-09-20 17:48:05 - Unexpected exception: No static resource ai/project-insights/1. - Request: uri=/api/ai/project-insights/1
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource ai/project-insights/1.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-09-20 17:48:05 - Securing GET /weekly-reports
2025-09-20 17:48:05 - Processing authentication for request: /api/weekly-reports
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/weekly-reports
2025-09-20 17:48:05 - Secured GET /weekly-reports
2025-09-20 17:48:05 - Fetching profile for user: admin
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0
Hibernate: 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0
2025-09-20 17:48:05 - Securing GET /weekly-reports?page=0&size=10
2025-09-20 17:48:05 - Processing authentication for request: /api/weekly-reports
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/weekly-reports
2025-09-20 17:48:05 - Secured GET /weekly-reports?page=0&size=10
2025-09-20 17:48:05 - Fetching profile for user: admin
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0
Hibernate: 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0
2025-09-20 17:48:05 - Securing GET /weekly-reports/my
2025-09-20 17:48:05 - Processing authentication for request: /api/weekly-reports/my
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/weekly-reports/my
2025-09-20 17:48:05 - Secured GET /weekly-reports/my
2025-09-20 17:48:05 - Fetching profile for user: admin
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.user_id=? 
    order by
        wr1_0.created_at desc
Hibernate: 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.user_id=? 
    order by
        wr1_0.created_at desc
2025-09-20 17:48:05 - Securing GET /weekly-reports/pending
2025-09-20 17:48:05 - Processing authentication for request: /api/weekly-reports/pending
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/weekly-reports/pending
2025-09-20 17:48:05 - Secured GET /weekly-reports/pending
2025-09-20 17:48:05 - Fetching profile for user: admin
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.approval_status=? 
    order by
        wr1_0.created_at desc
Hibernate: 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.approval_status=? 
    order by
        wr1_0.created_at desc
2025-09-20 17:48:05 - Securing POST /weekly-reports
2025-09-20 17:48:05 - Processing authentication for request: /api/weekly-reports
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/weekly-reports
2025-09-20 17:48:05 - Secured POST /weekly-reports
2025-09-20 17:48:05 - Fetching profile for user: admin
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:05 - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-20 17:48:05 - 
    /* insert for
        com.weeklyreport.entity.WeeklyReport */insert 
    into
        weekly_reports (additional_notes, admin_reviewer_id, ai_analysis_id, approval_status, created_at, development_opportunities, rejection_reason, report_week, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert for
        com.weeklyreport.entity.WeeklyReport */insert 
    into
        weekly_reports (additional_notes, admin_reviewer_id, ai_analysis_id, approval_status, created_at, development_opportunities, rejection_reason, report_week, title, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-20 17:48:05 - Securing GET /weekly-reports/1
2025-09-20 17:48:05 - Processing authentication for request: /api/weekly-reports/1
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/weekly-reports/1
2025-09-20 17:48:05 - Secured GET /weekly-reports/1
2025-09-20 17:48:05 - Fetching profile for user: admin
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:05 - 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
Hibernate: 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
2025-09-20 17:48:05 - Securing PUT /weekly-reports/1/submit
2025-09-20 17:48:05 - Processing authentication for request: /api/weekly-reports/1/submit
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/weekly-reports/1/submit
2025-09-20 17:48:05 - Secured PUT /weekly-reports/1/submit
2025-09-20 17:48:05 - Fetching profile for user: admin
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:05 - 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
Hibernate: 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
2025-09-20 17:48:05 - Securing GET /projects
2025-09-20 17:48:05 - Processing authentication for request: /api/projects
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/projects
2025-09-20 17:48:05 - Secured GET /projects
2025-09-20 17:48:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.getAllProjects(int,int,java.lang.String,java.lang.String); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 17:48:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.getAllProjects(int,int,java.lang.String,java.lang.String); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    /* <criteria> */ select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-09-20 17:48:05 - Securing GET /projects?page=0&size=10
2025-09-20 17:48:05 - Processing authentication for request: /api/projects
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/projects
2025-09-20 17:48:05 - Secured GET /projects?page=0&size=10
2025-09-20 17:48:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.getAllProjects(int,int,java.lang.String,java.lang.String); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 17:48:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.getAllProjects(int,int,java.lang.String,java.lang.String); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    /* <criteria> */ select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-09-20 17:48:05 - Securing GET /projects/my
2025-09-20 17:48:05 - Processing authentication for request: /api/projects/my
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 17:48:05 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 17:48:05 - Successfully authenticated user: manager1 for request: /api/projects/my
2025-09-20 17:48:05 - Secured GET /projects/my
2025-09-20 17:48:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.getMyProjects(); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 17:48:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.getMyProjects(); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 17:48:05 - Fetching profile for user: manager1
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.created_by=? 
    order by
        p1_0.created_at desc
Hibernate: 
    /* <criteria> */ select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.created_by=? 
    order by
        p1_0.created_at desc
2025-09-20 17:48:05 - Securing GET /projects/pending
2025-09-20 17:48:05 - Processing authentication for request: /api/projects/pending
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/projects/pending
2025-09-20 17:48:05 - Secured GET /projects/pending
2025-09-20 17:48:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.getPendingProjects(); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 17:48:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.getPendingProjects(); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 17:48:05 - 
    /* SELECT
        p 
    FROM
        Project p 
    WHERE
        p.approvalStatus = 'AI_APPROVED' */ select
            p1_0.id,
            p1_0.admin_reviewer_id,
            p1_0.ai_analysis_id,
            p1_0.approval_status,
            p1_0.created_at,
            p1_0.created_by,
            p1_0.description,
            p1_0.expected_results,
            p1_0.members,
            p1_0.name,
            p1_0.rejection_reason,
            p1_0.stop_loss,
            p1_0.super_admin_reviewer_id,
            p1_0.timeline,
            p1_0.updated_at 
        from
            projects p1_0 
        where
            p1_0.approval_status='AI_APPROVED'
Hibernate: 
    /* SELECT
        p 
    FROM
        Project p 
    WHERE
        p.approvalStatus = 'AI_APPROVED' */ select
            p1_0.id,
            p1_0.admin_reviewer_id,
            p1_0.ai_analysis_id,
            p1_0.approval_status,
            p1_0.created_at,
            p1_0.created_by,
            p1_0.description,
            p1_0.expected_results,
            p1_0.members,
            p1_0.name,
            p1_0.rejection_reason,
            p1_0.stop_loss,
            p1_0.super_admin_reviewer_id,
            p1_0.timeline,
            p1_0.updated_at 
        from
            projects p1_0 
        where
            p1_0.approval_status='AI_APPROVED'
2025-09-20 17:48:05 - Securing POST /projects
2025-09-20 17:48:05 - Processing authentication for request: /api/projects
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 17:48:05 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 17:48:05 - Successfully authenticated user: manager1 for request: /api/projects
2025-09-20 17:48:05 - Secured POST /projects
2025-09-20 17:48:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.createProject(com.weeklyreport.dto.project.ProjectCreateRequest); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 17:48:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.createProject(com.weeklyreport.dto.project.ProjectCreateRequest); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 17:48:05 - Fetching profile for user: manager1
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        p1_0.id 
    from
        projects p1_0 
    where
        p1_0.name=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        p1_0.id 
    from
        projects p1_0 
    where
        p1_0.name=? 
    limit
        ?
2025-09-20 17:48:05 - 
    /* insert for
        com.weeklyreport.entity.Project */insert 
    into
        projects (admin_reviewer_id, ai_analysis_id, approval_status, created_at, created_by, description, expected_results, members, name, rejection_reason, stop_loss, super_admin_reviewer_id, timeline, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert for
        com.weeklyreport.entity.Project */insert 
    into
        projects (admin_reviewer_id, ai_analysis_id, approval_status, created_at, created_by, description, expected_results, members, name, rejection_reason, stop_loss, super_admin_reviewer_id, timeline, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-20 17:48:05 - Project created: 16 by user: 10004
2025-09-20 17:48:05 - Securing GET /projects/1
2025-09-20 17:48:05 - Processing authentication for request: /api/projects/1
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/projects/1
2025-09-20 17:48:05 - Secured GET /projects/1
2025-09-20 17:48:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.getProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 17:48:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.getProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 17:48:05 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 17:48:05 - Securing PUT /projects/1/submit
2025-09-20 17:48:05 - Processing authentication for request: /api/projects/1/submit
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 17:48:05 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 17:48:05 - Successfully authenticated user: manager1 for request: /api/projects/1/submit
2025-09-20 17:48:05 - Secured PUT /projects/1/submit
2025-09-20 17:48:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.submitProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 17:48:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.submitProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 17:48:05 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 17:48:05 - Securing GET /tasks
2025-09-20 17:48:05 - Processing authentication for request: /api/tasks
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/tasks
2025-09-20 17:48:05 - Secured GET /tasks
2025-09-20 17:48:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getAllTasks(int,int,java.lang.String,java.lang.String); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 17:48:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getAllTasks(int,int,java.lang.String,java.lang.String); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 17:48:05 - Fetching profile for user: admin
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    order by
        t1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    order by
        t1_0.created_at desc 
    limit
        ?, ?
2025-09-20 17:48:05 - Securing GET /tasks?page=0&size=10
2025-09-20 17:48:05 - Processing authentication for request: /api/tasks
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/tasks
2025-09-20 17:48:05 - Secured GET /tasks?page=0&size=10
2025-09-20 17:48:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getAllTasks(int,int,java.lang.String,java.lang.String); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 17:48:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getAllTasks(int,int,java.lang.String,java.lang.String); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 17:48:05 - Fetching profile for user: admin
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    order by
        t1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    order by
        t1_0.created_at desc 
    limit
        ?, ?
2025-09-20 17:48:05 - Securing GET /tasks/my
2025-09-20 17:48:05 - Processing authentication for request: /api/tasks/my
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 17:48:05 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 17:48:05 - Successfully authenticated user: manager1 for request: /api/tasks/my
2025-09-20 17:48:05 - Secured GET /tasks/my
2025-09-20 17:48:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getMyTasks(); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 17:48:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getMyTasks(); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 17:48:05 - Fetching profile for user: manager1
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.created_by=? 
    order by
        t1_0.created_at desc
Hibernate: 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.created_by=? 
    order by
        t1_0.created_at desc
2025-09-20 17:48:05 - Securing GET /tasks/by-type/ROUTINE
2025-09-20 17:48:05 - Processing authentication for request: /api/tasks/by-type/ROUTINE
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/tasks/by-type/ROUTINE
2025-09-20 17:48:05 - Secured GET /tasks/by-type/ROUTINE
2025-09-20 17:48:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getTasksByType(java.lang.String); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 17:48:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getTasksByType(java.lang.String); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 17:48:05 - Fetching profile for user: admin
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.task_type=?
Hibernate: 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.task_type=?
2025-09-20 17:48:05 - Securing POST /tasks
2025-09-20 17:48:05 - Processing authentication for request: /api/tasks
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 17:48:05 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 17:48:05 - Successfully authenticated user: manager1 for request: /api/tasks
2025-09-20 17:48:05 - Secured POST /tasks
2025-09-20 17:48:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.createTask(com.weeklyreport.dto.task.TaskCreateRequest); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 17:48:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.createTask(com.weeklyreport.dto.task.TaskCreateRequest); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 17:48:05 - Fetching profile for user: manager1
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:05 - 
    /* insert for
        com.weeklyreport.entity.Task */insert 
    into
        tasks (actual_results, created_at, created_by, expected_results, personnel_assignment, quantitative_metrics, result_difference_analysis, task_name, task_type, timeline, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert for
        com.weeklyreport.entity.Task */insert 
    into
        tasks (actual_results, created_at, created_by, expected_results, personnel_assignment, quantitative_metrics, result_difference_analysis, task_name, task_type, timeline, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-20 17:48:05 - Task created: 25 by user: 10004
2025-09-20 17:48:05 - Securing GET /tasks/1
2025-09-20 17:48:05 - Processing authentication for request: /api/tasks/1
2025-09-20 17:48:05 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 17:48:05 - Created authentication for user admin with authorities: [ROLE_ADMIN]
2025-09-20 17:48:05 - Successfully authenticated user: admin for request: /api/tasks/1
2025-09-20 17:48:05 - Secured GET /tasks/1
2025-09-20 17:48:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getTask(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 17:48:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getTask(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 17:48:05 - 
    select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.id=?
2025-09-20 17:48:05 - Securing GET /debug/user/admin
2025-09-20 17:48:05 - Processing authentication for request: /api/debug/user/admin
2025-09-20 17:48:05 - No JWT token found in request: /api/debug/user/admin
2025-09-20 17:48:05 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:05 - Secured GET /debug/user/admin
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:05 - Securing POST /debug/test-password
2025-09-20 17:48:05 - Processing authentication for request: /api/debug/test-password
2025-09-20 17:48:05 - No JWT token found in request: /api/debug/test-password
2025-09-20 17:48:05 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:05 - Secured POST /debug/test-password
2025-09-20 17:48:05 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:06 - Securing POST /debug/reset-user-password
2025-09-20 17:48:06 - Processing authentication for request: /api/debug/reset-user-password
2025-09-20 17:48:06 - No JWT token found in request: /api/debug/reset-user-password
2025-09-20 17:48:06 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:06 - Secured POST /debug/reset-user-password
2025-09-20 17:48:06 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 17:48:07 - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-20 17:48:07 - 
    /* update
        for com.weeklyreport.entity.User */update users 
    set
        email=?,
        password=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    /* update
        for com.weeklyreport.entity.User */update users 
    set
        email=?,
        password=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-09-20 17:48:07 - Securing GET /simple/hello
2025-09-20 17:48:07 - Processing authentication for request: /api/simple/hello
2025-09-20 17:48:07 - No JWT token found in request: /api/simple/hello
2025-09-20 17:48:07 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:07 - Unauthorized access attempt to: /api/simple/hello from IP: 0:0:0:0:0:0:0:1. Error: Full authentication is required to access this resource
2025-09-20 17:48:07 - Securing POST /simple/fix-passwords
2025-09-20 17:48:07 - Processing authentication for request: /api/simple/fix-passwords
2025-09-20 17:48:07 - No JWT token found in request: /api/simple/fix-passwords
2025-09-20 17:48:07 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 17:48:07 - Unauthorized access attempt to: /api/simple/fix-passwords from IP: 0:0:0:0:0:0:0:1. Error: Full authentication is required to access this resource
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  08:05 min
[INFO] Finished at: 2025-09-20T17:51:56+08:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.springframework.boot:spring-boot-maven-plugin:3.2.0:run (default-cli) on project weekly-report-backend: Process terminated with exit code: 137 -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
