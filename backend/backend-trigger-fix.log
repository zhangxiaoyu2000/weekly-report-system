[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------< com.weeklyreport:weekly-report-backend >---------------
[INFO] Building weekly-report-backend 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot:3.2.0:run (default-cli) > test-compile @ weekly-report-backend >>>
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ weekly-report-backend ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 18 resources from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ weekly-report-backend ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ weekly-report-backend ---
[INFO] skip non existing resourceDirectory /Volumes/project/my-project/backend/src/test/resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ weekly-report-backend ---
[INFO] No sources to compile
[INFO] 
[INFO] <<< spring-boot:3.2.0:run (default-cli) < test-compile @ weekly-report-backend <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.2.0:run (default-cli) @ weekly-report-backend ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
[32m :: Spring Boot :: [39m              [2m (v3.2.0)[0;39m

2025-09-18 15:22:31 - Starting WeeklyReportApplication using Java 23.0.2 with PID 21247 (/Volumes/project/my-project/backend/target/classes started by zhangxiaoyu in /Volumes/project/my-project/backend)
2025-09-18 15:22:31 - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-09-18 15:22:31 - The following 1 profile is active: "dev"
2025-09-18 15:22:32 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-18 15:22:32 - Finished Spring Data repository scanning in 39 ms. Found 12 JPA repository interfaces.
2025-09-18 15:22:32 - Tomcat initialized with port 8081 (http)
2025-09-18 15:22:32 - Starting service [Tomcat]
2025-09-18 15:22:32 - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-09-18 15:22:32 - Initializing Spring embedded WebApplicationContext
2025-09-18 15:22:32 - Root WebApplicationContext: initialization completed in 1099 ms
2025-09-18 15:22:32 - Filter 'jwtAuthenticationFilter' configured for use
2025-09-18 15:22:33 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-18 15:22:33 - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-09-18 15:22:33 - HHH000026: Second-level cache disabled
2025-09-18 15:22:33 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-18 15:22:33 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-18 15:22:33 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-09-18 15:22:33 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-18 15:22:33 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-18 15:22:34 - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-18 15:22:34 - AI Monitoring Service initialized
2025-09-18 15:22:34 - Initializing AI service providers...
2025-09-18 15:22:34 - Calling DeepSeek API with URL: https://api.deepseek.com/chat/completions
2025-09-18 15:22:34 - Request payload: {"model":"deepseek-chat","messages":[{"role":"user","content":"hello"}],"temperature":0.1,"stream":false,"max_tokens":10}
2025-09-18 15:22:41 - DeepSeek API response status: 200 OK
2025-09-18 15:22:41 - DeepSeek API response body: {"id":"57c9f2ac-b985-4718-999d-e62a8d1ede8d","object":"chat.completion","created":1758180156,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"Hello! How can I help you today?"},"logprobs":null,"finish_reason":"length"}],"usage":{"prompt_tokens":5,"completion_tokens":9,"total_tokens":14,"prompt_tokens_details":{"cached_tokens":0},"prompt_cache_hit_tokens":0,"prompt_cache_miss_tokens":5},"system_fingerprint":"fp_08f168e49b_prod0820_fp8_kvcache"}
2025-09-18 15:22:41 - Registered AI provider: DeepSeek AI Service - Status: Configured and healthy
2025-09-18 15:22:41 - Registered AI provider: Mock AI Service for Testing - Status: CONFIGURED
2025-09-18 15:22:41 - Initialized 2 AI service providers
2025-09-18 15:22:44 - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-09-18 15:22:44 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@8e0ef56, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1c787cd2, org.springframework.security.web.context.SecurityContextHolderFilter@36d0ac8, org.springframework.security.web.header.HeaderWriterFilter@34991ade, org.springframework.web.filter.CorsFilter@3ff6e486, org.springframework.security.web.authentication.logout.LogoutFilter@1a64dd2e, com.weeklyreport.security.JwtAuthenticationFilter@5cbe95b1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@78dd35d8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@8b79b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@65e7e15c, org.springframework.security.web.session.SessionManagementFilter@1ae6e1cc, org.springframework.security.web.access.ExceptionTranslationFilter@19d47ee1, org.springframework.security.web.access.intercept.AuthorizationFilter@19672cb8]
2025-09-18 15:22:45 - Tomcat started on port 8081 (http) with context path '/api'
2025-09-18 15:22:45 - Started WeeklyReportApplication in 14.476 seconds (process running for 14.628)
2025-09-18 15:22:46 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-18 15:22:46 - WeeklyReportHikariCP-Dev - Starting...
2025-09-18 15:22:46 - WeeklyReportHikariCP-Dev - Added connection com.mysql.cj.jdbc.ConnectionImpl@4b705e60
2025-09-18 15:22:46 - WeeklyReportHikariCP-Dev - Start completed.
2025-09-18 15:22:46 - Super admin user already exists: superadmin
2025-09-18 15:22:46 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-18 15:22:46 - Super admin user already exists: zhangxiaoyu
2025-09-18 15:22:46 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-18 15:22:46 - Admin user already exists: admin1
2025-09-18 15:22:46 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-18 15:22:46 - Admin user already exists: admin2
2025-09-18 15:22:46 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-18 15:22:46 - Manager user already exists: manager1
2025-09-18 15:23:02 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-18 15:23:02 - Initializing Servlet 'dispatcherServlet'
2025-09-18 15:23:02 - Completed initialization in 5 ms
2025-09-18 15:23:02 - Securing POST /auth/login
2025-09-18 15:23:02 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 15:23:02 - Cache miss for REQUEST dispatch to '/api/auth/login' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
2025-09-18 15:23:02 - Secured POST /auth/login
2025-09-18 15:23:02 - Login attempt for user: manager1
2025-09-18 15:23:02 - Attempting login for user: manager1
2025-09-18 15:23:02 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-18 15:23:03 - User manager1 logged in successfully
2025-09-18 15:23:03 - 
    /* update
        for com.weeklyreport.entity.User */update users 
    set
        avatar_url=?,
        deleted_at=?,
        department_id=?,
        email=?,
        employee_id=?,
        first_name=?,
        full_name=?,
        last_login=?,
        last_login_time=?,
        last_name=?,
        password=?,
        phone=?,
        position=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    /* update
        for com.weeklyreport.entity.User */update users 
    set
        avatar_url=?,
        deleted_at=?,
        department_id=?,
        email=?,
        employee_id=?,
        first_name=?,
        full_name=?,
        last_login=?,
        last_login_time=?,
        last_name=?,
        password=?,
        phone=?,
        position=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-09-18 15:23:03 - Login successful for user: manager1
2025-09-18 15:23:03 - Securing POST /reports
2025-09-18 15:23:03 - Processing authentication for request: /api/reports
2025-09-18 15:23:03 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-18 15:23:03 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-18 15:23:03 - Successfully authenticated user: manager1 for request: /api/reports
2025-09-18 15:23:03 - Secured POST /reports
2025-09-18 15:23:03 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.WeeklyReportController.createWeeklyReport(com.weeklyreport.dto.weeklyreport.WeeklyReportCreateRequest,boolean,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.WeeklyReportController]
2025-09-18 15:23:03 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.WeeklyReportController.createWeeklyReport(com.weeklyreport.dto.weeklyreport.WeeklyReportCreateRequest,boolean,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.WeeklyReportController]
2025-09-18 15:23:03 - Creating new weekly report: 测试周报 - 修复weekEnd字段 for user: 10004
2025-09-18 15:23:03 - Creating new weekly report: 测试周报 - 修复weekEnd字段 for user: 10004, isDraft: false
2025-09-18 15:23:03 - 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 15:23:03 - 
    /* <criteria> */ select
        wr1_0.id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.user_id=? 
        and wr1_0.week_start=? 
        and wr1_0.status!=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        wr1_0.id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.user_id=? 
        and wr1_0.week_start=? 
        and wr1_0.status!=? 
    limit
        ?
2025-09-18 15:23:03 - Setting week dates: weekStart=2025-09-16, weekEnd=2025-09-22
2025-09-18 15:23:03 - After setting - report.getWeekStart()=2025-09-16, report.getWeekEnd()=2025-09-22
2025-09-18 15:23:03 - weekEnd value class: java.time.LocalDate, weekStart value class: java.time.LocalDate
2025-09-18 15:23:03 - 
    /* insert for
        com.weeklyreport.entity.WeeklyReport */insert 
    into
        weekly_reports (admin_review_comment, admin_reviewed_at, admin_reviewer_id, ai_analyzed_at, ai_confidence, ai_key_issues, ai_processing_time_ms, ai_provider_used, ai_quality_score, ai_recommendations, ai_risk_level, attachments, user_id, content, created_at, deleted_at, manager_review_comment, manager_reviewed_at, manager_reviewer_id, priority, project_id, review_comments, reviewed_at, reviewed_by, status, submitted_at, summary, super_admin_review_comment, super_admin_reviewed_at, super_admin_reviewer_id, tags, template_id, title, updated_at, view_count, week_end, week_start) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert for
        com.weeklyreport.entity.WeeklyReport */insert 
    into
        weekly_reports (admin_review_comment, admin_reviewed_at, admin_reviewer_id, ai_analyzed_at, ai_confidence, ai_key_issues, ai_processing_time_ms, ai_provider_used, ai_quality_score, ai_recommendations, ai_risk_level, attachments, user_id, content, created_at, deleted_at, manager_review_comment, manager_reviewed_at, manager_reviewer_id, priority, project_id, review_comments, reviewed_at, reviewed_by, status, submitted_at, summary, super_admin_review_comment, super_admin_reviewed_at, super_admin_reviewer_id, tags, template_id, title, updated_at, view_count, week_end, week_start) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-18 15:23:03 - SQL Error: 1292, SQLState: 22001
2025-09-18 15:23:03 - Data truncation: Incorrect date value: '0000-00-00' for column 'week_end' at row 1
2025-09-18 15:23:03 - Weekly report creation error - could not execute statement [Data truncation: Incorrect date value: '0000-00-00' for column 'week_end' at row 1] [/* insert for com.weeklyreport.entity.WeeklyReport */insert into weekly_reports (admin_review_comment,admin_reviewed_at,admin_reviewer_id,ai_analyzed_at,ai_confidence,ai_key_issues,ai_processing_time_ms,ai_provider_used,ai_quality_score,ai_recommendations,ai_risk_level,attachments,user_id,content,created_at,deleted_at,manager_review_comment,manager_reviewed_at,manager_reviewer_id,priority,project_id,review_comments,reviewed_at,reviewed_by,status,submitted_at,summary,super_admin_review_comment,super_admin_reviewed_at,super_admin_reviewer_id,tags,template_id,title,updated_at,view_count,week_end,week_start) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for com.weeklyreport.entity.WeeklyReport */insert into weekly_reports (admin_review_comment,admin_reviewed_at,admin_reviewer_id,ai_analyzed_at,ai_confidence,ai_key_issues,ai_processing_time_ms,ai_provider_used,ai_quality_score,ai_recommendations,ai_risk_level,attachments,user_id,content,created_at,deleted_at,manager_review_comment,manager_reviewed_at,manager_reviewer_id,priority,project_id,review_comments,reviewed_at,reviewed_by,status,submitted_at,summary,super_admin_review_comment,super_admin_reviewed_at,super_admin_reviewer_id,tags,template_id,title,updated_at,view_count,week_end,week_start) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
org.springframework.dao.DataIntegrityViolationException: could not execute statement [Data truncation: Incorrect date value: '0000-00-00' for column 'week_end' at row 1] [/* insert for com.weeklyreport.entity.WeeklyReport */insert into weekly_reports (admin_review_comment,admin_reviewed_at,admin_reviewer_id,ai_analyzed_at,ai_confidence,ai_key_issues,ai_processing_time_ms,ai_provider_used,ai_quality_score,ai_recommendations,ai_risk_level,attachments,user_id,content,created_at,deleted_at,manager_review_comment,manager_reviewed_at,manager_reviewer_id,priority,project_id,review_comments,reviewed_at,reviewed_by,status,submitted_at,summary,super_admin_review_comment,super_admin_reviewed_at,super_admin_reviewer_id,tags,template_id,title,updated_at,view_count,week_end,week_start) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for com.weeklyreport.entity.WeeklyReport */insert into weekly_reports (admin_review_comment,admin_reviewed_at,admin_reviewer_id,ai_analyzed_at,ai_confidence,ai_key_issues,ai_processing_time_ms,ai_provider_used,ai_quality_score,ai_recommendations,ai_risk_level,attachments,user_id,content,created_at,deleted_at,manager_review_comment,manager_reviewed_at,manager_reviewer_id,priority,project_id,review_comments,reviewed_at,reviewed_by,status,submitted_at,summary,super_admin_review_comment,super_admin_reviewed_at,super_admin_reviewer_id,tags,template_id,title,updated_at,view_count,week_end,week_start) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:293)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy189.save(Unknown Source)
	at com.weeklyreport.service.WeeklyReportService.createWeeklyReport(WeeklyReportService.java:147)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.weeklyreport.service.WeeklyReportService$$SpringCGLIB$$0.createWeeklyReport(<generated>)
	at com.weeklyreport.controller.WeeklyReportController.createWeeklyReport(WeeklyReportController.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.weeklyreport.controller.WeeklyReportController$$SpringCGLIB$$0.createWeeklyReport(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.exception.DataException: could not execute statement [Data truncation: Incorrect date value: '0000-00-00' for column 'week_end' at row 1] [/* insert for com.weeklyreport.entity.WeeklyReport */insert into weekly_reports (admin_review_comment,admin_reviewed_at,admin_reviewer_id,ai_analyzed_at,ai_confidence,ai_key_issues,ai_processing_time_ms,ai_provider_used,ai_quality_score,ai_recommendations,ai_risk_level,attachments,user_id,content,created_at,deleted_at,manager_review_comment,manager_reviewed_at,manager_reviewer_id,priority,project_id,review_comments,reviewed_at,reviewed_by,status,submitted_at,summary,super_admin_review_comment,super_admin_reviewed_at,super_admin_reviewer_id,tags,template_id,title,updated_at,view_count,week_end,week_start) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:55)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:283)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2860)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:667)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:290)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:271)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:321)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy175.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 162 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect date value: '0000-00-00' for column 'week_end' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ServerPreparedStatement.serverExecute(ServerPreparedStatement.java:555)
	at com.mysql.cj.jdbc.ServerPreparedStatement.executeInternal(ServerPreparedStatement.java:339)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:280)
	... 208 common frames omitted
2025-09-18 15:25:40 - Securing POST /auth/logout
2025-09-18 15:25:40 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 15:25:40 - Secured POST /auth/logout
2025-09-18 15:25:40 - Logout attempt
2025-09-18 15:25:40 - Attempting logout
2025-09-18 15:25:40 - User logged out successfully
2025-09-18 15:25:40 - Logout successful
2025-09-18 15:33:07 - Securing GET /tasks/routine/selectable
2025-09-18 15:33:07 - Processing authentication for request: /api/tasks/routine/selectable
2025-09-18 15:33:07 - Expired JWT token: JWT expired at 2025-09-18T07:29:03Z. Current time: 2025-09-18T07:33:07Z, a difference of 244560 milliseconds.  Allowed clock skew: 0 milliseconds.
2025-09-18 15:33:07 - Invalid JWT token for request: /api/tasks/routine/selectable
2025-09-18 15:33:07 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 15:33:07 - Unauthorized access attempt to: /api/tasks/routine/selectable from IP: 127.0.0.1. Error: Full authentication is required to access this resource
2025-09-18 15:36:06 - Securing GET /simple/projects/my?status=ALL
2025-09-18 15:36:06 - Processing authentication for request: /api/simple/projects/my
2025-09-18 15:36:06 - Expired JWT token: JWT expired at 2025-09-18T07:29:03Z. Current time: 2025-09-18T07:36:06Z, a difference of 423451 milliseconds.  Allowed clock skew: 0 milliseconds.
2025-09-18 15:36:06 - Invalid JWT token for request: /api/simple/projects/my
2025-09-18 15:36:06 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 15:36:06 - Unauthorized access attempt to: /api/simple/projects/my from IP: 127.0.0.1. Error: Full authentication is required to access this resource
2025-09-18 15:36:07 - Securing GET /tasks/routine/selectable
2025-09-18 15:36:07 - Processing authentication for request: /api/tasks/routine/selectable
2025-09-18 15:36:07 - Expired JWT token: JWT expired at 2025-09-18T07:29:03Z. Current time: 2025-09-18T07:36:07Z, a difference of 424333 milliseconds.  Allowed clock skew: 0 milliseconds.
2025-09-18 15:36:07 - Invalid JWT token for request: /api/tasks/routine/selectable
2025-09-18 15:36:07 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 15:36:07 - Unauthorized access attempt to: /api/tasks/routine/selectable from IP: 127.0.0.1. Error: Full authentication is required to access this resource
2025-09-18 15:36:13 - Securing POST /tasks/routine/template
2025-09-18 15:36:13 - Processing authentication for request: /api/tasks/routine/template
2025-09-18 15:36:13 - Expired JWT token: JWT expired at 2025-09-18T07:29:03Z. Current time: 2025-09-18T07:36:13Z, a difference of 430513 milliseconds.  Allowed clock skew: 0 milliseconds.
2025-09-18 15:36:13 - Invalid JWT token for request: /api/tasks/routine/template
2025-09-18 15:36:13 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 15:36:13 - Unauthorized access attempt to: /api/tasks/routine/template from IP: 127.0.0.1. Error: Full authentication is required to access this resource
2025-09-18 15:36:21 - Securing GET /tasks/routine/selectable
2025-09-18 15:36:21 - Processing authentication for request: /api/tasks/routine/selectable
2025-09-18 15:36:21 - Expired JWT token: JWT expired at 2025-09-18T07:29:03Z. Current time: 2025-09-18T07:36:21Z, a difference of 438490 milliseconds.  Allowed clock skew: 0 milliseconds.
2025-09-18 15:36:21 - Invalid JWT token for request: /api/tasks/routine/selectable
2025-09-18 15:36:21 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 15:36:21 - Unauthorized access attempt to: /api/tasks/routine/selectable from IP: 127.0.0.1. Error: Full authentication is required to access this resource
2025-09-18 15:36:24 - Securing GET /tasks/routine/selectable
2025-09-18 15:36:24 - Processing authentication for request: /api/tasks/routine/selectable
2025-09-18 15:36:24 - Expired JWT token: JWT expired at 2025-09-18T07:29:03Z. Current time: 2025-09-18T07:36:24Z, a difference of 441251 milliseconds.  Allowed clock skew: 0 milliseconds.
2025-09-18 15:36:24 - Invalid JWT token for request: /api/tasks/routine/selectable
2025-09-18 15:36:24 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 15:36:24 - Unauthorized access attempt to: /api/tasks/routine/selectable from IP: 127.0.0.1. Error: Full authentication is required to access this resource
2025-09-18 15:36:37 - Securing GET /simple/projects/my?status=ALL
2025-09-18 15:36:37 - Processing authentication for request: /api/simple/projects/my
2025-09-18 15:36:37 - Expired JWT token: JWT expired at 2025-09-18T07:29:03Z. Current time: 2025-09-18T07:36:37Z, a difference of 454809 milliseconds.  Allowed clock skew: 0 milliseconds.
2025-09-18 15:36:37 - Invalid JWT token for request: /api/simple/projects/my
2025-09-18 15:36:37 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 15:36:37 - Unauthorized access attempt to: /api/simple/projects/my from IP: 127.0.0.1. Error: Full authentication is required to access this resource
2025-09-18 15:36:38 - Securing POST /auth/refresh
2025-09-18 15:36:38 - Securing POST /auth/refresh
2025-09-18 15:36:38 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 15:36:38 - Secured POST /auth/refresh
2025-09-18 15:36:38 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 15:36:38 - Secured POST /auth/refresh
2025-09-18 15:36:38 - Token refresh attempt
2025-09-18 15:36:38 - Token refresh attempt
2025-09-18 15:36:38 - Attempting to refresh token
2025-09-18 15:36:38 - Attempting to refresh token
2025-09-18 15:36:38 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-18 15:36:38 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-18 15:36:38 - Token refresh failed - User not found
2025-09-18 15:36:38 - Token refresh failed - User not found
2025-09-18 15:36:56 - Securing POST /auth/login
2025-09-18 15:36:56 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 15:36:56 - Secured POST /auth/login
2025-09-18 15:36:56 - Login attempt for user: manager1
2025-09-18 15:36:56 - Attempting login for user: manager1
2025-09-18 15:36:56 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-18 15:36:56 - User manager1 logged in successfully
2025-09-18 15:36:56 - 
    /* update
        for com.weeklyreport.entity.User */update users 
    set
        avatar_url=?,
        deleted_at=?,
        department_id=?,
        email=?,
        employee_id=?,
        first_name=?,
        full_name=?,
        last_login=?,
        last_login_time=?,
        last_name=?,
        password=?,
        phone=?,
        position=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    /* update
        for com.weeklyreport.entity.User */update users 
    set
        avatar_url=?,
        deleted_at=?,
        department_id=?,
        email=?,
        employee_id=?,
        first_name=?,
        full_name=?,
        last_login=?,
        last_login_time=?,
        last_name=?,
        password=?,
        phone=?,
        position=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-09-18 15:36:56 - Login successful for user: manager1
2025-09-18 15:36:56 - Securing GET /simple/projects/my?status=ALL
2025-09-18 15:36:56 - Processing authentication for request: /api/simple/projects/my
2025-09-18 15:36:56 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-18 15:36:56 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-18 15:36:56 - Successfully authenticated user: manager1 for request: /api/simple/projects/my
2025-09-18 15:36:56 - Secured GET /simple/projects/my?status=ALL
2025-09-18 15:36:56 - 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 15:36:56 - 
    /* SELECT
        p 
    FROM
        SimpleProject p 
    LEFT JOIN
        
    FETCH
        p.createdBy 
    LEFT JOIN
        
    FETCH
        p.managerReviewer 
    LEFT JOIN
        
    FETCH
        p.adminReviewer 
    LEFT JOIN
        
    FETCH
        p.superAdminReviewer 
    WHERE
        p.createdBy = :createdBy 
    ORDER BY
        p.createdAt DESC */ select
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            ar1_0.id,
            ar1_0.avatar_url,
            ar1_0.created_at,
            ar1_0.deleted_at,
            ar1_0.department_id,
            ar1_0.email,
            ar1_0.employee_id,
            ar1_0.first_name,
            ar1_0.full_name,
            ar1_0.last_login,
            ar1_0.last_login_time,
            ar1_0.last_name,
            ar1_0.password,
            ar1_0.phone,
            ar1_0.position,
            ar1_0.role,
            ar1_0.status,
            ar1_0.updated_at,
            ar1_0.username,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            cb1_0.id,
            cb1_0.avatar_url,
            cb1_0.created_at,
            cb1_0.deleted_at,
            cb1_0.department_id,
            cb1_0.email,
            cb1_0.employee_id,
            cb1_0.first_name,
            cb1_0.full_name,
            cb1_0.last_login,
            cb1_0.last_login_time,
            cb1_0.last_name,
            cb1_0.password,
            cb1_0.phone,
            cb1_0.position,
            cb1_0.role,
            cb1_0.status,
            cb1_0.updated_at,
            cb1_0.username,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            mr1_0.id,
            mr1_0.avatar_url,
            mr1_0.created_at,
            mr1_0.deleted_at,
            mr1_0.department_id,
            mr1_0.email,
            mr1_0.employee_id,
            mr1_0.first_name,
            mr1_0.full_name,
            mr1_0.last_login,
            mr1_0.last_login_time,
            mr1_0.last_name,
            mr1_0.password,
            mr1_0.phone,
            mr1_0.position,
            mr1_0.role,
            mr1_0.status,
            mr1_0.updated_at,
            mr1_0.username,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sar1_0.id,
            sar1_0.avatar_url,
            sar1_0.created_at,
            sar1_0.deleted_at,
            sar1_0.department_id,
            sar1_0.email,
            sar1_0.employee_id,
            sar1_0.first_name,
            sar1_0.full_name,
            sar1_0.last_login,
            sar1_0.last_login_time,
            sar1_0.last_name,
            sar1_0.password,
            sar1_0.phone,
            sar1_0.position,
            sar1_0.role,
            sar1_0.status,
            sar1_0.updated_at,
            sar1_0.username,
            sp1_0.timeline,
            sp1_0.updated_at 
        from
            simple_projects sp1_0 
        left join
            users cb1_0 
                on cb1_0.id=sp1_0.created_by 
        left join
            users mr1_0 
                on mr1_0.id=sp1_0.manager_reviewer_id 
        left join
            users ar1_0 
                on ar1_0.id=sp1_0.admin_reviewer_id 
        left join
            users sar1_0 
                on sar1_0.id=sp1_0.super_admin_reviewer_id 
        where
            cb1_0.id=? 
        order by
            sp1_0.created_at desc
Hibernate: 
    /* SELECT
        p 
    FROM
        SimpleProject p 
    LEFT JOIN
        
    FETCH
        p.createdBy 
    LEFT JOIN
        
    FETCH
        p.managerReviewer 
    LEFT JOIN
        
    FETCH
        p.adminReviewer 
    LEFT JOIN
        
    FETCH
        p.superAdminReviewer 
    WHERE
        p.createdBy = :createdBy 
    ORDER BY
        p.createdAt DESC */ select
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            ar1_0.id,
            ar1_0.avatar_url,
            ar1_0.created_at,
            ar1_0.deleted_at,
            ar1_0.department_id,
            ar1_0.email,
            ar1_0.employee_id,
            ar1_0.first_name,
            ar1_0.full_name,
            ar1_0.last_login,
            ar1_0.last_login_time,
            ar1_0.last_name,
            ar1_0.password,
            ar1_0.phone,
            ar1_0.position,
            ar1_0.role,
            ar1_0.status,
            ar1_0.updated_at,
            ar1_0.username,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            cb1_0.id,
            cb1_0.avatar_url,
            cb1_0.created_at,
            cb1_0.deleted_at,
            cb1_0.department_id,
            cb1_0.email,
            cb1_0.employee_id,
            cb1_0.first_name,
            cb1_0.full_name,
            cb1_0.last_login,
            cb1_0.last_login_time,
            cb1_0.last_name,
            cb1_0.password,
            cb1_0.phone,
            cb1_0.position,
            cb1_0.role,
            cb1_0.status,
            cb1_0.updated_at,
            cb1_0.username,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            mr1_0.id,
            mr1_0.avatar_url,
            mr1_0.created_at,
            mr1_0.deleted_at,
            mr1_0.department_id,
            mr1_0.email,
            mr1_0.employee_id,
            mr1_0.first_name,
            mr1_0.full_name,
            mr1_0.last_login,
            mr1_0.last_login_time,
            mr1_0.last_name,
            mr1_0.password,
            mr1_0.phone,
            mr1_0.position,
            mr1_0.role,
            mr1_0.status,
            mr1_0.updated_at,
            mr1_0.username,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sar1_0.id,
            sar1_0.avatar_url,
            sar1_0.created_at,
            sar1_0.deleted_at,
            sar1_0.department_id,
            sar1_0.email,
            sar1_0.employee_id,
            sar1_0.first_name,
            sar1_0.full_name,
            sar1_0.last_login,
            sar1_0.last_login_time,
            sar1_0.last_name,
            sar1_0.password,
            sar1_0.phone,
            sar1_0.position,
            sar1_0.role,
            sar1_0.status,
            sar1_0.updated_at,
            sar1_0.username,
            sp1_0.timeline,
            sp1_0.updated_at 
        from
            simple_projects sp1_0 
        left join
            users cb1_0 
                on cb1_0.id=sp1_0.created_by 
        left join
            users mr1_0 
                on mr1_0.id=sp1_0.manager_reviewer_id 
        left join
            users ar1_0 
                on ar1_0.id=sp1_0.admin_reviewer_id 
        left join
            users sar1_0 
                on sar1_0.id=sp1_0.super_admin_reviewer_id 
        where
            cb1_0.id=? 
        order by
            sp1_0.created_at desc
2025-09-18 15:36:58 - Securing GET /tasks/routine/selectable
2025-09-18 15:36:58 - Processing authentication for request: /api/tasks/routine/selectable
2025-09-18 15:36:58 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-18 15:36:58 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-18 15:36:58 - Successfully authenticated user: manager1 for request: /api/tasks/routine/selectable
2025-09-18 15:36:58 - Secured GET /tasks/routine/selectable
2025-09-18 15:36:58 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getSelectableRoutineTasks(); target is of class [com.weeklyreport.controller.TaskController]
2025-09-18 15:36:58 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getSelectableRoutineTasks(); target is of class [com.weeklyreport.controller.TaskController]
2025-09-18 15:36:58 - Fetching selectable routine tasks
2025-09-18 15:36:58 - 
    /* SELECT
        DISTINCT t 
    FROM
        Task t 
    WHERE
        t.taskType = 'ROUTINE' 
        AND t.weeklyReport IS NULL 
    ORDER BY
        t.taskName ASC */ select
            distinct t1_0.id,
            t1_0.actual_results,
            t1_0.budget,
            t1_0.completion_date,
            t1_0.created_at,
            t1_0.due_date,
            t1_0.expected_results,
            t1_0.is_completed,
            t1_0.is_overdue,
            t1_0.personnel_assignment,
            t1_0.priority,
            t1_0.progress,
            t1_0.project_phase_id,
            t1_0.quantitative_metrics,
            t1_0.report_section,
            t1_0.result_difference_analysis,
            t1_0.simple_project_id,
            t1_0.start_date,
            t1_0.stop_loss_point,
            t1_0.task_name,
            t1_0.task_type,
            t1_0.timeline,
            t1_0.updated_at,
            t1_0.weekly_report_id 
        from
            tasks t1_0 
        where
            t1_0.task_type='ROUTINE' 
            and t1_0.weekly_report_id is null 
        order by
            t1_0.task_name
Hibernate: 
    /* SELECT
        DISTINCT t 
    FROM
        Task t 
    WHERE
        t.taskType = 'ROUTINE' 
        AND t.weeklyReport IS NULL 
    ORDER BY
        t.taskName ASC */ select
            distinct t1_0.id,
            t1_0.actual_results,
            t1_0.budget,
            t1_0.completion_date,
            t1_0.created_at,
            t1_0.due_date,
            t1_0.expected_results,
            t1_0.is_completed,
            t1_0.is_overdue,
            t1_0.personnel_assignment,
            t1_0.priority,
            t1_0.progress,
            t1_0.project_phase_id,
            t1_0.quantitative_metrics,
            t1_0.report_section,
            t1_0.result_difference_analysis,
            t1_0.simple_project_id,
            t1_0.start_date,
            t1_0.stop_loss_point,
            t1_0.task_name,
            t1_0.task_type,
            t1_0.timeline,
            t1_0.updated_at,
            t1_0.weekly_report_id 
        from
            tasks t1_0 
        where
            t1_0.task_type='ROUTINE' 
            and t1_0.weekly_report_id is null 
        order by
            t1_0.task_name
2025-09-18 15:36:58 - Retrieved 2 routine tasks for selection
2025-09-18 15:37:01 - Securing GET /tasks/routine/selectable
2025-09-18 15:37:01 - Processing authentication for request: /api/tasks/routine/selectable
2025-09-18 15:37:01 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-18 15:37:01 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-18 15:37:01 - Successfully authenticated user: manager1 for request: /api/tasks/routine/selectable
2025-09-18 15:37:01 - Secured GET /tasks/routine/selectable
2025-09-18 15:37:01 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getSelectableRoutineTasks(); target is of class [com.weeklyreport.controller.TaskController]
2025-09-18 15:37:01 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getSelectableRoutineTasks(); target is of class [com.weeklyreport.controller.TaskController]
2025-09-18 15:37:01 - Fetching selectable routine tasks
2025-09-18 15:37:01 - 
    /* SELECT
        DISTINCT t 
    FROM
        Task t 
    WHERE
        t.taskType = 'ROUTINE' 
        AND t.weeklyReport IS NULL 
    ORDER BY
        t.taskName ASC */ select
            distinct t1_0.id,
            t1_0.actual_results,
            t1_0.budget,
            t1_0.completion_date,
            t1_0.created_at,
            t1_0.due_date,
            t1_0.expected_results,
            t1_0.is_completed,
            t1_0.is_overdue,
            t1_0.personnel_assignment,
            t1_0.priority,
            t1_0.progress,
            t1_0.project_phase_id,
            t1_0.quantitative_metrics,
            t1_0.report_section,
            t1_0.result_difference_analysis,
            t1_0.simple_project_id,
            t1_0.start_date,
            t1_0.stop_loss_point,
            t1_0.task_name,
            t1_0.task_type,
            t1_0.timeline,
            t1_0.updated_at,
            t1_0.weekly_report_id 
        from
            tasks t1_0 
        where
            t1_0.task_type='ROUTINE' 
            and t1_0.weekly_report_id is null 
        order by
            t1_0.task_name
Hibernate: 
    /* SELECT
        DISTINCT t 
    FROM
        Task t 
    WHERE
        t.taskType = 'ROUTINE' 
        AND t.weeklyReport IS NULL 
    ORDER BY
        t.taskName ASC */ select
            distinct t1_0.id,
            t1_0.actual_results,
            t1_0.budget,
            t1_0.completion_date,
            t1_0.created_at,
            t1_0.due_date,
            t1_0.expected_results,
            t1_0.is_completed,
            t1_0.is_overdue,
            t1_0.personnel_assignment,
            t1_0.priority,
            t1_0.progress,
            t1_0.project_phase_id,
            t1_0.quantitative_metrics,
            t1_0.report_section,
            t1_0.result_difference_analysis,
            t1_0.simple_project_id,
            t1_0.start_date,
            t1_0.stop_loss_point,
            t1_0.task_name,
            t1_0.task_type,
            t1_0.timeline,
            t1_0.updated_at,
            t1_0.weekly_report_id 
        from
            tasks t1_0 
        where
            t1_0.task_type='ROUTINE' 
            and t1_0.weekly_report_id is null 
        order by
            t1_0.task_name
2025-09-18 15:37:01 - Retrieved 2 routine tasks for selection
2025-09-18 15:37:27 - Securing GET /simple/projects/my?status=APPROVED
2025-09-18 15:37:27 - Processing authentication for request: /api/simple/projects/my
2025-09-18 15:37:27 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-18 15:37:27 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-18 15:37:27 - Successfully authenticated user: manager1 for request: /api/simple/projects/my
2025-09-18 15:37:27 - Secured GET /simple/projects/my?status=APPROVED
2025-09-18 15:37:27 - 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 15:37:27 - 
    /* SELECT
        p 
    FROM
        SimpleProject p 
    LEFT JOIN
        
    FETCH
        p.createdBy 
    LEFT JOIN
        
    FETCH
        p.managerReviewer 
    LEFT JOIN
        
    FETCH
        p.adminReviewer 
    LEFT JOIN
        
    FETCH
        p.superAdminReviewer 
    WHERE
        p.createdBy = :createdBy 
        AND p.status = :status 
    ORDER BY
        p.createdAt DESC */ select
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            ar1_0.id,
            ar1_0.avatar_url,
            ar1_0.created_at,
            ar1_0.deleted_at,
            ar1_0.department_id,
            ar1_0.email,
            ar1_0.employee_id,
            ar1_0.first_name,
            ar1_0.full_name,
            ar1_0.last_login,
            ar1_0.last_login_time,
            ar1_0.last_name,
            ar1_0.password,
            ar1_0.phone,
            ar1_0.position,
            ar1_0.role,
            ar1_0.status,
            ar1_0.updated_at,
            ar1_0.username,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            cb1_0.id,
            cb1_0.avatar_url,
            cb1_0.created_at,
            cb1_0.deleted_at,
            cb1_0.department_id,
            cb1_0.email,
            cb1_0.employee_id,
            cb1_0.first_name,
            cb1_0.full_name,
            cb1_0.last_login,
            cb1_0.last_login_time,
            cb1_0.last_name,
            cb1_0.password,
            cb1_0.phone,
            cb1_0.position,
            cb1_0.role,
            cb1_0.status,
            cb1_0.updated_at,
            cb1_0.username,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            mr1_0.id,
            mr1_0.avatar_url,
            mr1_0.created_at,
            mr1_0.deleted_at,
            mr1_0.department_id,
            mr1_0.email,
            mr1_0.employee_id,
            mr1_0.first_name,
            mr1_0.full_name,
            mr1_0.last_login,
            mr1_0.last_login_time,
            mr1_0.last_name,
            mr1_0.password,
            mr1_0.phone,
            mr1_0.position,
            mr1_0.role,
            mr1_0.status,
            mr1_0.updated_at,
            mr1_0.username,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sar1_0.id,
            sar1_0.avatar_url,
            sar1_0.created_at,
            sar1_0.deleted_at,
            sar1_0.department_id,
            sar1_0.email,
            sar1_0.employee_id,
            sar1_0.first_name,
            sar1_0.full_name,
            sar1_0.last_login,
            sar1_0.last_login_time,
            sar1_0.last_name,
            sar1_0.password,
            sar1_0.phone,
            sar1_0.position,
            sar1_0.role,
            sar1_0.status,
            sar1_0.updated_at,
            sar1_0.username,
            sp1_0.timeline,
            sp1_0.updated_at 
        from
            simple_projects sp1_0 
        left join
            users cb1_0 
                on cb1_0.id=sp1_0.created_by 
        left join
            users mr1_0 
                on mr1_0.id=sp1_0.manager_reviewer_id 
        left join
            users ar1_0 
                on ar1_0.id=sp1_0.admin_reviewer_id 
        left join
            users sar1_0 
                on sar1_0.id=sp1_0.super_admin_reviewer_id 
        where
            cb1_0.id=? 
            and sp1_0.status=? 
        order by
            sp1_0.created_at desc
Hibernate: 
    /* SELECT
        p 
    FROM
        SimpleProject p 
    LEFT JOIN
        
    FETCH
        p.createdBy 
    LEFT JOIN
        
    FETCH
        p.managerReviewer 
    LEFT JOIN
        
    FETCH
        p.adminReviewer 
    LEFT JOIN
        
    FETCH
        p.superAdminReviewer 
    WHERE
        p.createdBy = :createdBy 
        AND p.status = :status 
    ORDER BY
        p.createdAt DESC */ select
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            ar1_0.id,
            ar1_0.avatar_url,
            ar1_0.created_at,
            ar1_0.deleted_at,
            ar1_0.department_id,
            ar1_0.email,
            ar1_0.employee_id,
            ar1_0.first_name,
            ar1_0.full_name,
            ar1_0.last_login,
            ar1_0.last_login_time,
            ar1_0.last_name,
            ar1_0.password,
            ar1_0.phone,
            ar1_0.position,
            ar1_0.role,
            ar1_0.status,
            ar1_0.updated_at,
            ar1_0.username,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            cb1_0.id,
            cb1_0.avatar_url,
            cb1_0.created_at,
            cb1_0.deleted_at,
            cb1_0.department_id,
            cb1_0.email,
            cb1_0.employee_id,
            cb1_0.first_name,
            cb1_0.full_name,
            cb1_0.last_login,
            cb1_0.last_login_time,
            cb1_0.last_name,
            cb1_0.password,
            cb1_0.phone,
            cb1_0.position,
            cb1_0.role,
            cb1_0.status,
            cb1_0.updated_at,
            cb1_0.username,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            mr1_0.id,
            mr1_0.avatar_url,
            mr1_0.created_at,
            mr1_0.deleted_at,
            mr1_0.department_id,
            mr1_0.email,
            mr1_0.employee_id,
            mr1_0.first_name,
            mr1_0.full_name,
            mr1_0.last_login,
            mr1_0.last_login_time,
            mr1_0.last_name,
            mr1_0.password,
            mr1_0.phone,
            mr1_0.position,
            mr1_0.role,
            mr1_0.status,
            mr1_0.updated_at,
            mr1_0.username,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sar1_0.id,
            sar1_0.avatar_url,
            sar1_0.created_at,
            sar1_0.deleted_at,
            sar1_0.department_id,
            sar1_0.email,
            sar1_0.employee_id,
            sar1_0.first_name,
            sar1_0.full_name,
            sar1_0.last_login,
            sar1_0.last_login_time,
            sar1_0.last_name,
            sar1_0.password,
            sar1_0.phone,
            sar1_0.position,
            sar1_0.role,
            sar1_0.status,
            sar1_0.updated_at,
            sar1_0.username,
            sp1_0.timeline,
            sp1_0.updated_at 
        from
            simple_projects sp1_0 
        left join
            users cb1_0 
                on cb1_0.id=sp1_0.created_by 
        left join
            users mr1_0 
                on mr1_0.id=sp1_0.manager_reviewer_id 
        left join
            users ar1_0 
                on ar1_0.id=sp1_0.admin_reviewer_id 
        left join
            users sar1_0 
                on sar1_0.id=sp1_0.super_admin_reviewer_id 
        where
            cb1_0.id=? 
            and sp1_0.status=? 
        order by
            sp1_0.created_at desc
2025-09-18 15:37:30 - Securing GET /project-phases/project/8/selectable
2025-09-18 15:37:30 - Processing authentication for request: /api/project-phases/project/8/selectable
2025-09-18 15:37:30 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-18 15:37:30 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-18 15:37:30 - Successfully authenticated user: manager1 for request: /api/project-phases/project/8/selectable
2025-09-18 15:37:30 - Secured GET /project-phases/project/8/selectable
2025-09-18 15:37:30 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectPhaseController.getSelectablePhases(java.lang.Long,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.ProjectPhaseController]
2025-09-18 15:37:30 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectPhaseController.getSelectablePhases(java.lang.Long,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.ProjectPhaseController]
2025-09-18 15:37:30 - 
    /* SELECT
        p 
    FROM
        ProjectPhase p 
    WHERE
        p.project.id = :projectId 
        AND p.status != :status 
    ORDER BY
        p.phaseOrder ASC */ select
            pp1_0.id,
            pp1_0.actual_results,
            pp1_0.assigned_members,
            pp1_0.completion_date,
            pp1_0.created_at,
            pp1_0.end_date,
            pp1_0.estimated_results,
            pp1_0.phase_description,
            pp1_0.phase_name,
            pp1_0.phase_order,
            pp1_0.project_id,
            pp1_0.start_date,
            pp1_0.status,
            pp1_0.timeline,
            pp1_0.updated_at 
        from
            project_phases pp1_0 
        where
            pp1_0.project_id=? 
            and pp1_0.status!=? 
        order by
            pp1_0.phase_order
Hibernate: 
    /* SELECT
        p 
    FROM
        ProjectPhase p 
    WHERE
        p.project.id = :projectId 
        AND p.status != :status 
    ORDER BY
        p.phaseOrder ASC */ select
            pp1_0.id,
            pp1_0.actual_results,
            pp1_0.assigned_members,
            pp1_0.completion_date,
            pp1_0.created_at,
            pp1_0.end_date,
            pp1_0.estimated_results,
            pp1_0.phase_description,
            pp1_0.phase_name,
            pp1_0.phase_order,
            pp1_0.project_id,
            pp1_0.start_date,
            pp1_0.status,
            pp1_0.timeline,
            pp1_0.updated_at 
        from
            project_phases pp1_0 
        where
            pp1_0.project_id=? 
            and pp1_0.status!=? 
        order by
            pp1_0.phase_order
2025-09-18 15:37:37 - Securing GET /tasks/routine/selectable
2025-09-18 15:37:37 - Processing authentication for request: /api/tasks/routine/selectable
2025-09-18 15:37:37 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-18 15:37:37 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-18 15:37:37 - Successfully authenticated user: manager1 for request: /api/tasks/routine/selectable
2025-09-18 15:37:37 - Secured GET /tasks/routine/selectable
2025-09-18 15:37:37 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getSelectableRoutineTasks(); target is of class [com.weeklyreport.controller.TaskController]
2025-09-18 15:37:37 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getSelectableRoutineTasks(); target is of class [com.weeklyreport.controller.TaskController]
2025-09-18 15:37:37 - Fetching selectable routine tasks
2025-09-18 15:37:37 - 
    /* SELECT
        DISTINCT t 
    FROM
        Task t 
    WHERE
        t.taskType = 'ROUTINE' 
        AND t.weeklyReport IS NULL 
    ORDER BY
        t.taskName ASC */ select
            distinct t1_0.id,
            t1_0.actual_results,
            t1_0.budget,
            t1_0.completion_date,
            t1_0.created_at,
            t1_0.due_date,
            t1_0.expected_results,
            t1_0.is_completed,
            t1_0.is_overdue,
            t1_0.personnel_assignment,
            t1_0.priority,
            t1_0.progress,
            t1_0.project_phase_id,
            t1_0.quantitative_metrics,
            t1_0.report_section,
            t1_0.result_difference_analysis,
            t1_0.simple_project_id,
            t1_0.start_date,
            t1_0.stop_loss_point,
            t1_0.task_name,
            t1_0.task_type,
            t1_0.timeline,
            t1_0.updated_at,
            t1_0.weekly_report_id 
        from
            tasks t1_0 
        where
            t1_0.task_type='ROUTINE' 
            and t1_0.weekly_report_id is null 
        order by
            t1_0.task_name
Hibernate: 
    /* SELECT
        DISTINCT t 
    FROM
        Task t 
    WHERE
        t.taskType = 'ROUTINE' 
        AND t.weeklyReport IS NULL 
    ORDER BY
        t.taskName ASC */ select
            distinct t1_0.id,
            t1_0.actual_results,
            t1_0.budget,
            t1_0.completion_date,
            t1_0.created_at,
            t1_0.due_date,
            t1_0.expected_results,
            t1_0.is_completed,
            t1_0.is_overdue,
            t1_0.personnel_assignment,
            t1_0.priority,
            t1_0.progress,
            t1_0.project_phase_id,
            t1_0.quantitative_metrics,
            t1_0.report_section,
            t1_0.result_difference_analysis,
            t1_0.simple_project_id,
            t1_0.start_date,
            t1_0.stop_loss_point,
            t1_0.task_name,
            t1_0.task_type,
            t1_0.timeline,
            t1_0.updated_at,
            t1_0.weekly_report_id 
        from
            tasks t1_0 
        where
            t1_0.task_type='ROUTINE' 
            and t1_0.weekly_report_id is null 
        order by
            t1_0.task_name
2025-09-18 15:37:37 - Retrieved 2 routine tasks for selection
2025-09-18 15:37:40 - Securing GET /simple/projects/my?status=APPROVED
2025-09-18 15:37:40 - Processing authentication for request: /api/simple/projects/my
2025-09-18 15:37:40 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-18 15:37:40 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-18 15:37:40 - Successfully authenticated user: manager1 for request: /api/simple/projects/my
2025-09-18 15:37:40 - Secured GET /simple/projects/my?status=APPROVED
2025-09-18 15:37:40 - 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 15:37:40 - 
    /* SELECT
        p 
    FROM
        SimpleProject p 
    LEFT JOIN
        
    FETCH
        p.createdBy 
    LEFT JOIN
        
    FETCH
        p.managerReviewer 
    LEFT JOIN
        
    FETCH
        p.adminReviewer 
    LEFT JOIN
        
    FETCH
        p.superAdminReviewer 
    WHERE
        p.createdBy = :createdBy 
        AND p.status = :status 
    ORDER BY
        p.createdAt DESC */ select
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            ar1_0.id,
            ar1_0.avatar_url,
            ar1_0.created_at,
            ar1_0.deleted_at,
            ar1_0.department_id,
            ar1_0.email,
            ar1_0.employee_id,
            ar1_0.first_name,
            ar1_0.full_name,
            ar1_0.last_login,
            ar1_0.last_login_time,
            ar1_0.last_name,
            ar1_0.password,
            ar1_0.phone,
            ar1_0.position,
            ar1_0.role,
            ar1_0.status,
            ar1_0.updated_at,
            ar1_0.username,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            cb1_0.id,
            cb1_0.avatar_url,
            cb1_0.created_at,
            cb1_0.deleted_at,
            cb1_0.department_id,
            cb1_0.email,
            cb1_0.employee_id,
            cb1_0.first_name,
            cb1_0.full_name,
            cb1_0.last_login,
            cb1_0.last_login_time,
            cb1_0.last_name,
            cb1_0.password,
            cb1_0.phone,
            cb1_0.position,
            cb1_0.role,
            cb1_0.status,
            cb1_0.updated_at,
            cb1_0.username,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            mr1_0.id,
            mr1_0.avatar_url,
            mr1_0.created_at,
            mr1_0.deleted_at,
            mr1_0.department_id,
            mr1_0.email,
            mr1_0.employee_id,
            mr1_0.first_name,
            mr1_0.full_name,
            mr1_0.last_login,
            mr1_0.last_login_time,
            mr1_0.last_name,
            mr1_0.password,
            mr1_0.phone,
            mr1_0.position,
            mr1_0.role,
            mr1_0.status,
            mr1_0.updated_at,
            mr1_0.username,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sar1_0.id,
            sar1_0.avatar_url,
            sar1_0.created_at,
            sar1_0.deleted_at,
            sar1_0.department_id,
            sar1_0.email,
            sar1_0.employee_id,
            sar1_0.first_name,
            sar1_0.full_name,
            sar1_0.last_login,
            sar1_0.last_login_time,
            sar1_0.last_name,
            sar1_0.password,
            sar1_0.phone,
            sar1_0.position,
            sar1_0.role,
            sar1_0.status,
            sar1_0.updated_at,
            sar1_0.username,
            sp1_0.timeline,
            sp1_0.updated_at 
        from
            simple_projects sp1_0 
        left join
            users cb1_0 
                on cb1_0.id=sp1_0.created_by 
        left join
            users mr1_0 
                on mr1_0.id=sp1_0.manager_reviewer_id 
        left join
            users ar1_0 
                on ar1_0.id=sp1_0.admin_reviewer_id 
        left join
            users sar1_0 
                on sar1_0.id=sp1_0.super_admin_reviewer_id 
        where
            cb1_0.id=? 
            and sp1_0.status=? 
        order by
            sp1_0.created_at desc
Hibernate: 
    /* SELECT
        p 
    FROM
        SimpleProject p 
    LEFT JOIN
        
    FETCH
        p.createdBy 
    LEFT JOIN
        
    FETCH
        p.managerReviewer 
    LEFT JOIN
        
    FETCH
        p.adminReviewer 
    LEFT JOIN
        
    FETCH
        p.superAdminReviewer 
    WHERE
        p.createdBy = :createdBy 
        AND p.status = :status 
    ORDER BY
        p.createdAt DESC */ select
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            ar1_0.id,
            ar1_0.avatar_url,
            ar1_0.created_at,
            ar1_0.deleted_at,
            ar1_0.department_id,
            ar1_0.email,
            ar1_0.employee_id,
            ar1_0.first_name,
            ar1_0.full_name,
            ar1_0.last_login,
            ar1_0.last_login_time,
            ar1_0.last_name,
            ar1_0.password,
            ar1_0.phone,
            ar1_0.position,
            ar1_0.role,
            ar1_0.status,
            ar1_0.updated_at,
            ar1_0.username,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            cb1_0.id,
            cb1_0.avatar_url,
            cb1_0.created_at,
            cb1_0.deleted_at,
            cb1_0.department_id,
            cb1_0.email,
            cb1_0.employee_id,
            cb1_0.first_name,
            cb1_0.full_name,
            cb1_0.last_login,
            cb1_0.last_login_time,
            cb1_0.last_name,
            cb1_0.password,
            cb1_0.phone,
            cb1_0.position,
            cb1_0.role,
            cb1_0.status,
            cb1_0.updated_at,
            cb1_0.username,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            mr1_0.id,
            mr1_0.avatar_url,
            mr1_0.created_at,
            mr1_0.deleted_at,
            mr1_0.department_id,
            mr1_0.email,
            mr1_0.employee_id,
            mr1_0.first_name,
            mr1_0.full_name,
            mr1_0.last_login,
            mr1_0.last_login_time,
            mr1_0.last_name,
            mr1_0.password,
            mr1_0.phone,
            mr1_0.position,
            mr1_0.role,
            mr1_0.status,
            mr1_0.updated_at,
            mr1_0.username,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sar1_0.id,
            sar1_0.avatar_url,
            sar1_0.created_at,
            sar1_0.deleted_at,
            sar1_0.department_id,
            sar1_0.email,
            sar1_0.employee_id,
            sar1_0.first_name,
            sar1_0.full_name,
            sar1_0.last_login,
            sar1_0.last_login_time,
            sar1_0.last_name,
            sar1_0.password,
            sar1_0.phone,
            sar1_0.position,
            sar1_0.role,
            sar1_0.status,
            sar1_0.updated_at,
            sar1_0.username,
            sp1_0.timeline,
            sp1_0.updated_at 
        from
            simple_projects sp1_0 
        left join
            users cb1_0 
                on cb1_0.id=sp1_0.created_by 
        left join
            users mr1_0 
                on mr1_0.id=sp1_0.manager_reviewer_id 
        left join
            users ar1_0 
                on ar1_0.id=sp1_0.admin_reviewer_id 
        left join
            users sar1_0 
                on sar1_0.id=sp1_0.super_admin_reviewer_id 
        where
            cb1_0.id=? 
            and sp1_0.status=? 
        order by
            sp1_0.created_at desc
2025-09-18 15:37:42 - Securing GET /project-phases/project/8/selectable
2025-09-18 15:37:42 - Processing authentication for request: /api/project-phases/project/8/selectable
2025-09-18 15:37:42 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-18 15:37:42 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-18 15:37:42 - Successfully authenticated user: manager1 for request: /api/project-phases/project/8/selectable
2025-09-18 15:37:42 - Secured GET /project-phases/project/8/selectable
2025-09-18 15:37:42 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectPhaseController.getSelectablePhases(java.lang.Long,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.ProjectPhaseController]
2025-09-18 15:37:42 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectPhaseController.getSelectablePhases(java.lang.Long,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.ProjectPhaseController]
2025-09-18 15:37:42 - 
    /* SELECT
        p 
    FROM
        ProjectPhase p 
    WHERE
        p.project.id = :projectId 
        AND p.status != :status 
    ORDER BY
        p.phaseOrder ASC */ select
            pp1_0.id,
            pp1_0.actual_results,
            pp1_0.assigned_members,
            pp1_0.completion_date,
            pp1_0.created_at,
            pp1_0.end_date,
            pp1_0.estimated_results,
            pp1_0.phase_description,
            pp1_0.phase_name,
            pp1_0.phase_order,
            pp1_0.project_id,
            pp1_0.start_date,
            pp1_0.status,
            pp1_0.timeline,
            pp1_0.updated_at 
        from
            project_phases pp1_0 
        where
            pp1_0.project_id=? 
            and pp1_0.status!=? 
        order by
            pp1_0.phase_order
Hibernate: 
    /* SELECT
        p 
    FROM
        ProjectPhase p 
    WHERE
        p.project.id = :projectId 
        AND p.status != :status 
    ORDER BY
        p.phaseOrder ASC */ select
            pp1_0.id,
            pp1_0.actual_results,
            pp1_0.assigned_members,
            pp1_0.completion_date,
            pp1_0.created_at,
            pp1_0.end_date,
            pp1_0.estimated_results,
            pp1_0.phase_description,
            pp1_0.phase_name,
            pp1_0.phase_order,
            pp1_0.project_id,
            pp1_0.start_date,
            pp1_0.status,
            pp1_0.timeline,
            pp1_0.updated_at 
        from
            project_phases pp1_0 
        where
            pp1_0.project_id=? 
            and pp1_0.status!=? 
        order by
            pp1_0.phase_order
2025-09-18 15:37:45 - Securing GET /project-phases/project/8/selectable
2025-09-18 15:37:45 - Processing authentication for request: /api/project-phases/project/8/selectable
2025-09-18 15:37:45 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-18 15:37:45 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-18 15:37:45 - Successfully authenticated user: manager1 for request: /api/project-phases/project/8/selectable
2025-09-18 15:37:45 - Secured GET /project-phases/project/8/selectable
2025-09-18 15:37:45 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectPhaseController.getSelectablePhases(java.lang.Long,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.ProjectPhaseController]
2025-09-18 15:37:45 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectPhaseController.getSelectablePhases(java.lang.Long,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.ProjectPhaseController]
2025-09-18 15:37:45 - 
    /* SELECT
        p 
    FROM
        ProjectPhase p 
    WHERE
        p.project.id = :projectId 
        AND p.status != :status 
    ORDER BY
        p.phaseOrder ASC */ select
            pp1_0.id,
            pp1_0.actual_results,
            pp1_0.assigned_members,
            pp1_0.completion_date,
            pp1_0.created_at,
            pp1_0.end_date,
            pp1_0.estimated_results,
            pp1_0.phase_description,
            pp1_0.phase_name,
            pp1_0.phase_order,
            pp1_0.project_id,
            pp1_0.start_date,
            pp1_0.status,
            pp1_0.timeline,
            pp1_0.updated_at 
        from
            project_phases pp1_0 
        where
            pp1_0.project_id=? 
            and pp1_0.status!=? 
        order by
            pp1_0.phase_order
Hibernate: 
    /* SELECT
        p 
    FROM
        ProjectPhase p 
    WHERE
        p.project.id = :projectId 
        AND p.status != :status 
    ORDER BY
        p.phaseOrder ASC */ select
            pp1_0.id,
            pp1_0.actual_results,
            pp1_0.assigned_members,
            pp1_0.completion_date,
            pp1_0.created_at,
            pp1_0.end_date,
            pp1_0.estimated_results,
            pp1_0.phase_description,
            pp1_0.phase_name,
            pp1_0.phase_order,
            pp1_0.project_id,
            pp1_0.start_date,
            pp1_0.status,
            pp1_0.timeline,
            pp1_0.updated_at 
        from
            project_phases pp1_0 
        where
            pp1_0.project_id=? 
            and pp1_0.status!=? 
        order by
            pp1_0.phase_order
2025-09-18 15:38:05 - Securing POST /reports
2025-09-18 15:38:05 - Processing authentication for request: /api/reports
2025-09-18 15:38:05 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-18 15:38:05 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-18 15:38:05 - Successfully authenticated user: manager1 for request: /api/reports
2025-09-18 15:38:05 - Secured POST /reports
2025-09-18 15:38:05 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.WeeklyReportController.createWeeklyReport(com.weeklyreport.dto.weeklyreport.WeeklyReportCreateRequest,boolean,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.WeeklyReportController]
2025-09-18 15:38:05 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.WeeklyReportController.createWeeklyReport(com.weeklyreport.dto.weeklyreport.WeeklyReportCreateRequest,boolean,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.WeeklyReportController]
2025-09-18 15:38:05 - Creating new weekly report: 222 for user: 10004
2025-09-18 15:38:05 - Creating new weekly report: 222 for user: 10004, isDraft: false
2025-09-18 15:38:05 - 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 15:38:05 - 
    /* <criteria> */ select
        wr1_0.id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.user_id=? 
        and wr1_0.week_start=? 
        and wr1_0.status!=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        wr1_0.id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.user_id=? 
        and wr1_0.week_start=? 
        and wr1_0.status!=? 
    limit
        ?
2025-09-18 15:38:05 - Setting week dates: weekStart=2025-09-15, weekEnd=2025-09-21
2025-09-18 15:38:05 - After setting - report.getWeekStart()=2025-09-15, report.getWeekEnd()=2025-09-21
2025-09-18 15:38:05 - weekEnd value class: java.time.LocalDate, weekStart value class: java.time.LocalDate
2025-09-18 15:38:05 - 
    /* insert for
        com.weeklyreport.entity.WeeklyReport */insert 
    into
        weekly_reports (admin_review_comment, admin_reviewed_at, admin_reviewer_id, ai_analyzed_at, ai_confidence, ai_key_issues, ai_processing_time_ms, ai_provider_used, ai_quality_score, ai_recommendations, ai_risk_level, attachments, user_id, content, created_at, deleted_at, manager_review_comment, manager_reviewed_at, manager_reviewer_id, priority, project_id, review_comments, reviewed_at, reviewed_by, status, submitted_at, summary, super_admin_review_comment, super_admin_reviewed_at, super_admin_reviewer_id, tags, template_id, title, updated_at, view_count, week_end, week_start) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert for
        com.weeklyreport.entity.WeeklyReport */insert 
    into
        weekly_reports (admin_review_comment, admin_reviewed_at, admin_reviewer_id, ai_analyzed_at, ai_confidence, ai_key_issues, ai_processing_time_ms, ai_provider_used, ai_quality_score, ai_recommendations, ai_risk_level, attachments, user_id, content, created_at, deleted_at, manager_review_comment, manager_reviewed_at, manager_reviewer_id, priority, project_id, review_comments, reviewed_at, reviewed_by, status, submitted_at, summary, super_admin_review_comment, super_admin_reviewed_at, super_admin_reviewer_id, tags, template_id, title, updated_at, view_count, week_end, week_start) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-18 15:38:05 - SQL Error: 1292, SQLState: 22001
2025-09-18 15:38:05 - Data truncation: Incorrect date value: '0000-00-00' for column 'week_end' at row 1
2025-09-18 15:38:05 - Weekly report creation error - could not execute statement [Data truncation: Incorrect date value: '0000-00-00' for column 'week_end' at row 1] [/* insert for com.weeklyreport.entity.WeeklyReport */insert into weekly_reports (admin_review_comment,admin_reviewed_at,admin_reviewer_id,ai_analyzed_at,ai_confidence,ai_key_issues,ai_processing_time_ms,ai_provider_used,ai_quality_score,ai_recommendations,ai_risk_level,attachments,user_id,content,created_at,deleted_at,manager_review_comment,manager_reviewed_at,manager_reviewer_id,priority,project_id,review_comments,reviewed_at,reviewed_by,status,submitted_at,summary,super_admin_review_comment,super_admin_reviewed_at,super_admin_reviewer_id,tags,template_id,title,updated_at,view_count,week_end,week_start) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for com.weeklyreport.entity.WeeklyReport */insert into weekly_reports (admin_review_comment,admin_reviewed_at,admin_reviewer_id,ai_analyzed_at,ai_confidence,ai_key_issues,ai_processing_time_ms,ai_provider_used,ai_quality_score,ai_recommendations,ai_risk_level,attachments,user_id,content,created_at,deleted_at,manager_review_comment,manager_reviewed_at,manager_reviewer_id,priority,project_id,review_comments,reviewed_at,reviewed_by,status,submitted_at,summary,super_admin_review_comment,super_admin_reviewed_at,super_admin_reviewer_id,tags,template_id,title,updated_at,view_count,week_end,week_start) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
org.springframework.dao.DataIntegrityViolationException: could not execute statement [Data truncation: Incorrect date value: '0000-00-00' for column 'week_end' at row 1] [/* insert for com.weeklyreport.entity.WeeklyReport */insert into weekly_reports (admin_review_comment,admin_reviewed_at,admin_reviewer_id,ai_analyzed_at,ai_confidence,ai_key_issues,ai_processing_time_ms,ai_provider_used,ai_quality_score,ai_recommendations,ai_risk_level,attachments,user_id,content,created_at,deleted_at,manager_review_comment,manager_reviewed_at,manager_reviewer_id,priority,project_id,review_comments,reviewed_at,reviewed_by,status,submitted_at,summary,super_admin_review_comment,super_admin_reviewed_at,super_admin_reviewer_id,tags,template_id,title,updated_at,view_count,week_end,week_start) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for com.weeklyreport.entity.WeeklyReport */insert into weekly_reports (admin_review_comment,admin_reviewed_at,admin_reviewer_id,ai_analyzed_at,ai_confidence,ai_key_issues,ai_processing_time_ms,ai_provider_used,ai_quality_score,ai_recommendations,ai_risk_level,attachments,user_id,content,created_at,deleted_at,manager_review_comment,manager_reviewed_at,manager_reviewer_id,priority,project_id,review_comments,reviewed_at,reviewed_by,status,submitted_at,summary,super_admin_review_comment,super_admin_reviewed_at,super_admin_reviewer_id,tags,template_id,title,updated_at,view_count,week_end,week_start) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:293)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy189.save(Unknown Source)
	at com.weeklyreport.service.WeeklyReportService.createWeeklyReport(WeeklyReportService.java:147)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.weeklyreport.service.WeeklyReportService$$SpringCGLIB$$0.createWeeklyReport(<generated>)
	at com.weeklyreport.controller.WeeklyReportController.createWeeklyReport(WeeklyReportController.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.weeklyreport.controller.WeeklyReportController$$SpringCGLIB$$0.createWeeklyReport(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.exception.DataException: could not execute statement [Data truncation: Incorrect date value: '0000-00-00' for column 'week_end' at row 1] [/* insert for com.weeklyreport.entity.WeeklyReport */insert into weekly_reports (admin_review_comment,admin_reviewed_at,admin_reviewer_id,ai_analyzed_at,ai_confidence,ai_key_issues,ai_processing_time_ms,ai_provider_used,ai_quality_score,ai_recommendations,ai_risk_level,attachments,user_id,content,created_at,deleted_at,manager_review_comment,manager_reviewed_at,manager_reviewer_id,priority,project_id,review_comments,reviewed_at,reviewed_by,status,submitted_at,summary,super_admin_review_comment,super_admin_reviewed_at,super_admin_reviewer_id,tags,template_id,title,updated_at,view_count,week_end,week_start) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:55)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:283)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2860)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:667)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:290)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:271)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:321)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy175.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 162 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect date value: '0000-00-00' for column 'week_end' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ServerPreparedStatement.serverExecute(ServerPreparedStatement.java:555)
	at com.mysql.cj.jdbc.ServerPreparedStatement.executeInternal(ServerPreparedStatement.java:339)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:280)
	... 208 common frames omitted
2025-09-18 16:01:57 - Securing POST /auth/login
2025-09-18 16:01:57 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 16:01:57 - Secured POST /auth/login
2025-09-18 16:01:57 - Login attempt for user: manager1
2025-09-18 16:01:57 - Attempting login for user: manager1
2025-09-18 16:01:57 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-18 16:01:58 - User manager1 logged in successfully
2025-09-18 16:01:58 - 
    /* update
        for com.weeklyreport.entity.User */update users 
    set
        avatar_url=?,
        deleted_at=?,
        department_id=?,
        email=?,
        employee_id=?,
        first_name=?,
        full_name=?,
        last_login=?,
        last_login_time=?,
        last_name=?,
        password=?,
        phone=?,
        position=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    /* update
        for com.weeklyreport.entity.User */update users 
    set
        avatar_url=?,
        deleted_at=?,
        department_id=?,
        email=?,
        employee_id=?,
        first_name=?,
        full_name=?,
        last_login=?,
        last_login_time=?,
        last_name=?,
        password=?,
        phone=?,
        position=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-09-18 16:01:58 - Login successful for user: manager1
2025-09-18 16:02:11 - Securing GET /tasks/routine/selectable
2025-09-18 16:02:11 - Processing authentication for request: /api/tasks/routine/selectable
2025-09-18 16:02:11 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-18 16:02:11 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-18 16:02:11 - Successfully authenticated user: manager1 for request: /api/tasks/routine/selectable
2025-09-18 16:02:11 - Secured GET /tasks/routine/selectable
2025-09-18 16:02:11 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getSelectableRoutineTasks(); target is of class [com.weeklyreport.controller.TaskController]
2025-09-18 16:02:11 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getSelectableRoutineTasks(); target is of class [com.weeklyreport.controller.TaskController]
2025-09-18 16:02:11 - Fetching selectable routine tasks
2025-09-18 16:02:11 - 
    /* SELECT
        DISTINCT t 
    FROM
        Task t 
    WHERE
        t.taskType = 'ROUTINE' 
        AND t.weeklyReport IS NULL 
    ORDER BY
        t.taskName ASC */ select
            distinct t1_0.id,
            t1_0.actual_results,
            t1_0.budget,
            t1_0.completion_date,
            t1_0.created_at,
            t1_0.due_date,
            t1_0.expected_results,
            t1_0.is_completed,
            t1_0.is_overdue,
            t1_0.personnel_assignment,
            t1_0.priority,
            t1_0.progress,
            t1_0.project_phase_id,
            t1_0.quantitative_metrics,
            t1_0.report_section,
            t1_0.result_difference_analysis,
            t1_0.simple_project_id,
            t1_0.start_date,
            t1_0.stop_loss_point,
            t1_0.task_name,
            t1_0.task_type,
            t1_0.timeline,
            t1_0.updated_at,
            t1_0.weekly_report_id 
        from
            tasks t1_0 
        where
            t1_0.task_type='ROUTINE' 
            and t1_0.weekly_report_id is null 
        order by
            t1_0.task_name
Hibernate: 
    /* SELECT
        DISTINCT t 
    FROM
        Task t 
    WHERE
        t.taskType = 'ROUTINE' 
        AND t.weeklyReport IS NULL 
    ORDER BY
        t.taskName ASC */ select
            distinct t1_0.id,
            t1_0.actual_results,
            t1_0.budget,
            t1_0.completion_date,
            t1_0.created_at,
            t1_0.due_date,
            t1_0.expected_results,
            t1_0.is_completed,
            t1_0.is_overdue,
            t1_0.personnel_assignment,
            t1_0.priority,
            t1_0.progress,
            t1_0.project_phase_id,
            t1_0.quantitative_metrics,
            t1_0.report_section,
            t1_0.result_difference_analysis,
            t1_0.simple_project_id,
            t1_0.start_date,
            t1_0.stop_loss_point,
            t1_0.task_name,
            t1_0.task_type,
            t1_0.timeline,
            t1_0.updated_at,
            t1_0.weekly_report_id 
        from
            tasks t1_0 
        where
            t1_0.task_type='ROUTINE' 
            and t1_0.weekly_report_id is null 
        order by
            t1_0.task_name
2025-09-18 16:02:11 - Retrieved 2 routine tasks for selection
2025-09-18 16:02:51 - Securing GET /simple/projects/my?status=APPROVED
2025-09-18 16:02:51 - Processing authentication for request: /api/simple/projects/my
2025-09-18 16:02:51 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-18 16:02:51 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-18 16:02:51 - Successfully authenticated user: manager1 for request: /api/simple/projects/my
2025-09-18 16:02:51 - Secured GET /simple/projects/my?status=APPROVED
2025-09-18 16:02:51 - 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 16:02:51 - 
    /* SELECT
        p 
    FROM
        SimpleProject p 
    LEFT JOIN
        
    FETCH
        p.createdBy 
    LEFT JOIN
        
    FETCH
        p.managerReviewer 
    LEFT JOIN
        
    FETCH
        p.adminReviewer 
    LEFT JOIN
        
    FETCH
        p.superAdminReviewer 
    WHERE
        p.createdBy = :createdBy 
        AND p.status = :status 
    ORDER BY
        p.createdAt DESC */ select
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            ar1_0.id,
            ar1_0.avatar_url,
            ar1_0.created_at,
            ar1_0.deleted_at,
            ar1_0.department_id,
            ar1_0.email,
            ar1_0.employee_id,
            ar1_0.first_name,
            ar1_0.full_name,
            ar1_0.last_login,
            ar1_0.last_login_time,
            ar1_0.last_name,
            ar1_0.password,
            ar1_0.phone,
            ar1_0.position,
            ar1_0.role,
            ar1_0.status,
            ar1_0.updated_at,
            ar1_0.username,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            cb1_0.id,
            cb1_0.avatar_url,
            cb1_0.created_at,
            cb1_0.deleted_at,
            cb1_0.department_id,
            cb1_0.email,
            cb1_0.employee_id,
            cb1_0.first_name,
            cb1_0.full_name,
            cb1_0.last_login,
            cb1_0.last_login_time,
            cb1_0.last_name,
            cb1_0.password,
            cb1_0.phone,
            cb1_0.position,
            cb1_0.role,
            cb1_0.status,
            cb1_0.updated_at,
            cb1_0.username,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            mr1_0.id,
            mr1_0.avatar_url,
            mr1_0.created_at,
            mr1_0.deleted_at,
            mr1_0.department_id,
            mr1_0.email,
            mr1_0.employee_id,
            mr1_0.first_name,
            mr1_0.full_name,
            mr1_0.last_login,
            mr1_0.last_login_time,
            mr1_0.last_name,
            mr1_0.password,
            mr1_0.phone,
            mr1_0.position,
            mr1_0.role,
            mr1_0.status,
            mr1_0.updated_at,
            mr1_0.username,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sar1_0.id,
            sar1_0.avatar_url,
            sar1_0.created_at,
            sar1_0.deleted_at,
            sar1_0.department_id,
            sar1_0.email,
            sar1_0.employee_id,
            sar1_0.first_name,
            sar1_0.full_name,
            sar1_0.last_login,
            sar1_0.last_login_time,
            sar1_0.last_name,
            sar1_0.password,
            sar1_0.phone,
            sar1_0.position,
            sar1_0.role,
            sar1_0.status,
            sar1_0.updated_at,
            sar1_0.username,
            sp1_0.timeline,
            sp1_0.updated_at 
        from
            simple_projects sp1_0 
        left join
            users cb1_0 
                on cb1_0.id=sp1_0.created_by 
        left join
            users mr1_0 
                on mr1_0.id=sp1_0.manager_reviewer_id 
        left join
            users ar1_0 
                on ar1_0.id=sp1_0.admin_reviewer_id 
        left join
            users sar1_0 
                on sar1_0.id=sp1_0.super_admin_reviewer_id 
        where
            cb1_0.id=? 
            and sp1_0.status=? 
        order by
            sp1_0.created_at desc
Hibernate: 
    /* SELECT
        p 
    FROM
        SimpleProject p 
    LEFT JOIN
        
    FETCH
        p.createdBy 
    LEFT JOIN
        
    FETCH
        p.managerReviewer 
    LEFT JOIN
        
    FETCH
        p.adminReviewer 
    LEFT JOIN
        
    FETCH
        p.superAdminReviewer 
    WHERE
        p.createdBy = :createdBy 
        AND p.status = :status 
    ORDER BY
        p.createdAt DESC */ select
            sp1_0.id,
            sp1_0.actual_results,
            sp1_0.admin_review_comment,
            sp1_0.admin_reviewed_at,
            ar1_0.id,
            ar1_0.avatar_url,
            ar1_0.created_at,
            ar1_0.deleted_at,
            ar1_0.department_id,
            ar1_0.email,
            ar1_0.employee_id,
            ar1_0.first_name,
            ar1_0.full_name,
            ar1_0.last_login,
            ar1_0.last_login_time,
            ar1_0.last_name,
            ar1_0.password,
            ar1_0.phone,
            ar1_0.position,
            ar1_0.role,
            ar1_0.status,
            ar1_0.updated_at,
            ar1_0.username,
            sp1_0.ai_analysis_result,
            sp1_0.ai_analyzed_at,
            sp1_0.ai_confidence,
            sp1_0.ai_feasibility_score,
            sp1_0.ai_key_issues,
            sp1_0.ai_processing_time_ms,
            sp1_0.ai_provider_used,
            sp1_0.ai_recommendations,
            sp1_0.ai_risk_level,
            sp1_0.created_at,
            sp1_0.created_by,
            cb1_0.id,
            cb1_0.avatar_url,
            cb1_0.created_at,
            cb1_0.deleted_at,
            cb1_0.department_id,
            cb1_0.email,
            cb1_0.employee_id,
            cb1_0.first_name,
            cb1_0.full_name,
            cb1_0.last_login,
            cb1_0.last_login_time,
            cb1_0.last_name,
            cb1_0.password,
            cb1_0.phone,
            cb1_0.position,
            cb1_0.role,
            cb1_0.status,
            cb1_0.updated_at,
            cb1_0.username,
            sp1_0.expected_results,
            sp1_0.manager_review_comment,
            sp1_0.manager_reviewed_at,
            mr1_0.id,
            mr1_0.avatar_url,
            mr1_0.created_at,
            mr1_0.deleted_at,
            mr1_0.department_id,
            mr1_0.email,
            mr1_0.employee_id,
            mr1_0.first_name,
            mr1_0.full_name,
            mr1_0.last_login,
            mr1_0.last_login_time,
            mr1_0.last_name,
            mr1_0.password,
            mr1_0.phone,
            mr1_0.position,
            mr1_0.role,
            mr1_0.status,
            mr1_0.updated_at,
            mr1_0.username,
            sp1_0.project_content,
            sp1_0.project_members,
            sp1_0.project_name,
            sp1_0.status,
            sp1_0.stop_loss,
            sp1_0.super_admin_review_comment,
            sp1_0.super_admin_reviewed_at,
            sar1_0.id,
            sar1_0.avatar_url,
            sar1_0.created_at,
            sar1_0.deleted_at,
            sar1_0.department_id,
            sar1_0.email,
            sar1_0.employee_id,
            sar1_0.first_name,
            sar1_0.full_name,
            sar1_0.last_login,
            sar1_0.last_login_time,
            sar1_0.last_name,
            sar1_0.password,
            sar1_0.phone,
            sar1_0.position,
            sar1_0.role,
            sar1_0.status,
            sar1_0.updated_at,
            sar1_0.username,
            sp1_0.timeline,
            sp1_0.updated_at 
        from
            simple_projects sp1_0 
        left join
            users cb1_0 
                on cb1_0.id=sp1_0.created_by 
        left join
            users mr1_0 
                on mr1_0.id=sp1_0.manager_reviewer_id 
        left join
            users ar1_0 
                on ar1_0.id=sp1_0.admin_reviewer_id 
        left join
            users sar1_0 
                on sar1_0.id=sp1_0.super_admin_reviewer_id 
        where
            cb1_0.id=? 
            and sp1_0.status=? 
        order by
            sp1_0.created_at desc
2025-09-18 16:03:00 - Securing GET /project-phases/project/8/selectable
2025-09-18 16:03:00 - Processing authentication for request: /api/project-phases/project/8/selectable
2025-09-18 16:03:00 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-18 16:03:00 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-18 16:03:00 - Successfully authenticated user: manager1 for request: /api/project-phases/project/8/selectable
2025-09-18 16:03:00 - Secured GET /project-phases/project/8/selectable
2025-09-18 16:03:00 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectPhaseController.getSelectablePhases(java.lang.Long,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.ProjectPhaseController]
2025-09-18 16:03:00 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectPhaseController.getSelectablePhases(java.lang.Long,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.ProjectPhaseController]
2025-09-18 16:03:00 - 
    /* SELECT
        p 
    FROM
        ProjectPhase p 
    WHERE
        p.project.id = :projectId 
        AND p.status != :status 
    ORDER BY
        p.phaseOrder ASC */ select
            pp1_0.id,
            pp1_0.actual_results,
            pp1_0.assigned_members,
            pp1_0.completion_date,
            pp1_0.created_at,
            pp1_0.end_date,
            pp1_0.estimated_results,
            pp1_0.phase_description,
            pp1_0.phase_name,
            pp1_0.phase_order,
            pp1_0.project_id,
            pp1_0.start_date,
            pp1_0.status,
            pp1_0.timeline,
            pp1_0.updated_at 
        from
            project_phases pp1_0 
        where
            pp1_0.project_id=? 
            and pp1_0.status!=? 
        order by
            pp1_0.phase_order
Hibernate: 
    /* SELECT
        p 
    FROM
        ProjectPhase p 
    WHERE
        p.project.id = :projectId 
        AND p.status != :status 
    ORDER BY
        p.phaseOrder ASC */ select
            pp1_0.id,
            pp1_0.actual_results,
            pp1_0.assigned_members,
            pp1_0.completion_date,
            pp1_0.created_at,
            pp1_0.end_date,
            pp1_0.estimated_results,
            pp1_0.phase_description,
            pp1_0.phase_name,
            pp1_0.phase_order,
            pp1_0.project_id,
            pp1_0.start_date,
            pp1_0.status,
            pp1_0.timeline,
            pp1_0.updated_at 
        from
            project_phases pp1_0 
        where
            pp1_0.project_id=? 
            and pp1_0.status!=? 
        order by
            pp1_0.phase_order
2025-09-18 16:04:28 - Securing POST /reports
2025-09-18 16:04:28 - Processing authentication for request: /api/reports
2025-09-18 16:04:28 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-18 16:04:28 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-18 16:04:28 - Successfully authenticated user: manager1 for request: /api/reports
2025-09-18 16:04:28 - Secured POST /reports
2025-09-18 16:04:29 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.WeeklyReportController.createWeeklyReport(com.weeklyreport.dto.weeklyreport.WeeklyReportCreateRequest,boolean,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.WeeklyReportController]
2025-09-18 16:04:29 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.WeeklyReportController.createWeeklyReport(com.weeklyreport.dto.weeklyreport.WeeklyReportCreateRequest,boolean,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.WeeklyReportController]
2025-09-18 16:04:29 - Creating new weekly report: 主管周报测试 - 2025年9月第4周 for user: 10004
2025-09-18 16:04:29 - Creating new weekly report: 主管周报测试 - 2025年9月第4周 for user: 10004, isDraft: false
2025-09-18 16:04:29 - 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.avatar_url,
        u1_0.created_at,
        u1_0.deleted_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.employee_id,
        u1_0.first_name,
        u1_0.full_name,
        u1_0.last_login,
        u1_0.last_login_time,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.position,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 16:04:29 - 
    /* <criteria> */ select
        wr1_0.id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.user_id=? 
        and wr1_0.week_start=? 
        and wr1_0.status!=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        wr1_0.id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.user_id=? 
        and wr1_0.week_start=? 
        and wr1_0.status!=? 
    limit
        ?
2025-09-18 16:04:29 - Setting week dates: weekStart=2025-09-15, weekEnd=2025-09-21
2025-09-18 16:04:29 - After setting - report.getWeekStart()=2025-09-15, report.getWeekEnd()=2025-09-21
2025-09-18 16:04:29 - weekEnd value class: java.time.LocalDate, weekStart value class: java.time.LocalDate
2025-09-18 16:04:29 - 
    /* insert for
        com.weeklyreport.entity.WeeklyReport */insert 
    into
        weekly_reports (admin_review_comment, admin_reviewed_at, admin_reviewer_id, ai_analyzed_at, ai_confidence, ai_key_issues, ai_processing_time_ms, ai_provider_used, ai_quality_score, ai_recommendations, ai_risk_level, attachments, user_id, content, created_at, deleted_at, manager_review_comment, manager_reviewed_at, manager_reviewer_id, priority, project_id, review_comments, reviewed_at, reviewed_by, status, submitted_at, summary, super_admin_review_comment, super_admin_reviewed_at, super_admin_reviewer_id, tags, template_id, title, updated_at, view_count, week_end, week_start) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert for
        com.weeklyreport.entity.WeeklyReport */insert 
    into
        weekly_reports (admin_review_comment, admin_reviewed_at, admin_reviewer_id, ai_analyzed_at, ai_confidence, ai_key_issues, ai_processing_time_ms, ai_provider_used, ai_quality_score, ai_recommendations, ai_risk_level, attachments, user_id, content, created_at, deleted_at, manager_review_comment, manager_reviewed_at, manager_reviewer_id, priority, project_id, review_comments, reviewed_at, reviewed_by, status, submitted_at, summary, super_admin_review_comment, super_admin_reviewed_at, super_admin_reviewer_id, tags, template_id, title, updated_at, view_count, week_end, week_start) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-18 16:04:29 - SQL Error: 1292, SQLState: 22001
2025-09-18 16:04:29 - Data truncation: Incorrect date value: '0000-00-00' for column 'week_end' at row 1
2025-09-18 16:04:29 - Weekly report creation error - could not execute statement [Data truncation: Incorrect date value: '0000-00-00' for column 'week_end' at row 1] [/* insert for com.weeklyreport.entity.WeeklyReport */insert into weekly_reports (admin_review_comment,admin_reviewed_at,admin_reviewer_id,ai_analyzed_at,ai_confidence,ai_key_issues,ai_processing_time_ms,ai_provider_used,ai_quality_score,ai_recommendations,ai_risk_level,attachments,user_id,content,created_at,deleted_at,manager_review_comment,manager_reviewed_at,manager_reviewer_id,priority,project_id,review_comments,reviewed_at,reviewed_by,status,submitted_at,summary,super_admin_review_comment,super_admin_reviewed_at,super_admin_reviewer_id,tags,template_id,title,updated_at,view_count,week_end,week_start) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for com.weeklyreport.entity.WeeklyReport */insert into weekly_reports (admin_review_comment,admin_reviewed_at,admin_reviewer_id,ai_analyzed_at,ai_confidence,ai_key_issues,ai_processing_time_ms,ai_provider_used,ai_quality_score,ai_recommendations,ai_risk_level,attachments,user_id,content,created_at,deleted_at,manager_review_comment,manager_reviewed_at,manager_reviewer_id,priority,project_id,review_comments,reviewed_at,reviewed_by,status,submitted_at,summary,super_admin_review_comment,super_admin_reviewed_at,super_admin_reviewer_id,tags,template_id,title,updated_at,view_count,week_end,week_start) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
org.springframework.dao.DataIntegrityViolationException: could not execute statement [Data truncation: Incorrect date value: '0000-00-00' for column 'week_end' at row 1] [/* insert for com.weeklyreport.entity.WeeklyReport */insert into weekly_reports (admin_review_comment,admin_reviewed_at,admin_reviewer_id,ai_analyzed_at,ai_confidence,ai_key_issues,ai_processing_time_ms,ai_provider_used,ai_quality_score,ai_recommendations,ai_risk_level,attachments,user_id,content,created_at,deleted_at,manager_review_comment,manager_reviewed_at,manager_reviewer_id,priority,project_id,review_comments,reviewed_at,reviewed_by,status,submitted_at,summary,super_admin_review_comment,super_admin_reviewed_at,super_admin_reviewer_id,tags,template_id,title,updated_at,view_count,week_end,week_start) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for com.weeklyreport.entity.WeeklyReport */insert into weekly_reports (admin_review_comment,admin_reviewed_at,admin_reviewer_id,ai_analyzed_at,ai_confidence,ai_key_issues,ai_processing_time_ms,ai_provider_used,ai_quality_score,ai_recommendations,ai_risk_level,attachments,user_id,content,created_at,deleted_at,manager_review_comment,manager_reviewed_at,manager_reviewer_id,priority,project_id,review_comments,reviewed_at,reviewed_by,status,submitted_at,summary,super_admin_review_comment,super_admin_reviewed_at,super_admin_reviewer_id,tags,template_id,title,updated_at,view_count,week_end,week_start) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:293)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy189.save(Unknown Source)
	at com.weeklyreport.service.WeeklyReportService.createWeeklyReport(WeeklyReportService.java:147)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.weeklyreport.service.WeeklyReportService$$SpringCGLIB$$0.createWeeklyReport(<generated>)
	at com.weeklyreport.controller.WeeklyReportController.createWeeklyReport(WeeklyReportController.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.weeklyreport.controller.WeeklyReportController$$SpringCGLIB$$0.createWeeklyReport(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.exception.DataException: could not execute statement [Data truncation: Incorrect date value: '0000-00-00' for column 'week_end' at row 1] [/* insert for com.weeklyreport.entity.WeeklyReport */insert into weekly_reports (admin_review_comment,admin_reviewed_at,admin_reviewer_id,ai_analyzed_at,ai_confidence,ai_key_issues,ai_processing_time_ms,ai_provider_used,ai_quality_score,ai_recommendations,ai_risk_level,attachments,user_id,content,created_at,deleted_at,manager_review_comment,manager_reviewed_at,manager_reviewer_id,priority,project_id,review_comments,reviewed_at,reviewed_by,status,submitted_at,summary,super_admin_review_comment,super_admin_reviewed_at,super_admin_reviewer_id,tags,template_id,title,updated_at,view_count,week_end,week_start) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:55)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:283)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2860)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:667)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:290)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:271)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:321)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy175.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 162 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect date value: '0000-00-00' for column 'week_end' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ServerPreparedStatement.serverExecute(ServerPreparedStatement.java:555)
	at com.mysql.cj.jdbc.ServerPreparedStatement.executeInternal(ServerPreparedStatement.java:339)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:280)
	... 208 common frames omitted
2025-09-18 16:09:18 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-18 16:09:18 - WeeklyReportHikariCP-Dev - Shutdown initiated...
2025-09-18 16:09:18 - WeeklyReportHikariCP-Dev - Shutdown completed.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  46:48 min
[INFO] Finished at: 2025-09-18T16:09:18+08:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.springframework.boot:spring-boot-maven-plugin:3.2.0:run (default-cli) on project weekly-report-backend: Process terminated with exit code: 143 -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
