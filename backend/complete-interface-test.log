[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------< com.weeklyreport:weekly-report-backend >---------------
[INFO] Building weekly-report-backend 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot:3.2.0:run (default-cli) > test-compile @ weekly-report-backend >>>
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ weekly-report-backend ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 30 resources from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ weekly-report-backend ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ weekly-report-backend ---
[INFO] skip non existing resourceDirectory /Volumes/project/my-project/backend/src/test/resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ weekly-report-backend ---
[INFO] No sources to compile
[INFO] 
[INFO] <<< spring-boot:3.2.0:run (default-cli) < test-compile @ weekly-report-backend <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.2.0:run (default-cli) @ weekly-report-backend ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
[32m :: Spring Boot :: [39m              [2m (v3.2.0)[0;39m

2025-09-20 13:49:32 - Starting WeeklyReportApplication using Java 23.0.2 with PID 11372 (/Volumes/project/my-project/backend/target/classes started by zhangxiaoyu in /Volumes/project/my-project/backend)
2025-09-20 13:49:32 - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-09-20 13:49:32 - The following 1 profile is active: "dev"
2025-09-20 13:49:32 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-20 13:49:32 - Finished Spring Data repository scanning in 39 ms. Found 14 JPA repository interfaces.
2025-09-20 13:49:33 - Tomcat initialized with port 8081 (http)
2025-09-20 13:49:33 - Starting service [Tomcat]
2025-09-20 13:49:33 - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-09-20 13:49:33 - Initializing Spring embedded WebApplicationContext
2025-09-20 13:49:33 - Root WebApplicationContext: initialization completed in 986 ms
2025-09-20 13:49:33 - Filter 'jwtAuthenticationFilter' configured for use
2025-09-20 13:49:33 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-20 13:49:33 - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-09-20 13:49:33 - HHH000026: Second-level cache disabled
2025-09-20 13:49:33 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-20 13:49:33 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-20 13:49:33 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-09-20 13:49:34 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-20 13:49:34 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-20 13:49:34 - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-20 13:49:34 - AI Monitoring Service initialized
2025-09-20 13:49:34 - Initializing AI service providers...
2025-09-20 13:49:35 - Calling DeepSeek API with URL: https://api.deepseek.com/chat/completions
2025-09-20 13:49:35 - Request payload: {"model":"deepseek-chat","messages":[{"role":"user","content":"hello"}],"temperature":0.1,"stream":false,"max_tokens":10}
2025-09-20 13:49:39 - DeepSeek API response status: 200 OK
2025-09-20 13:49:39 - DeepSeek API response body: {"id":"454f7089-133a-42b5-8f77-ac56382be61a","object":"chat.completion","created":1758347376,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"Hello! How can I help you today?"},"logprobs":null,"finish_reason":"length"}],"usage":{"prompt_tokens":5,"completion_tokens":9,"total_tokens":14,"prompt_tokens_details":{"cached_tokens":0},"prompt_cache_hit_tokens":0,"prompt_cache_miss_tokens":5},"system_fingerprint":"fp_08f168e49b_prod0820_fp8_kvcache"}
2025-09-20 13:49:39 - Registered AI provider: DeepSeek AI Service - Status: Configured and healthy
2025-09-20 13:49:39 - Registered AI provider: Mock AI Service for Testing - Status: CONFIGURED
2025-09-20 13:49:39 - Initialized 2 AI service providers
2025-09-20 13:49:40 - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-09-20 13:49:41 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@101e09d8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@134458bb, org.springframework.security.web.context.SecurityContextHolderFilter@32906bb, org.springframework.security.web.header.HeaderWriterFilter@51f278d1, org.springframework.web.filter.CorsFilter@7b04f4c7, org.springframework.security.web.authentication.logout.LogoutFilter@7611dd8b, com.weeklyreport.security.JwtAuthenticationFilter@43755e2f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1bb325a0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f6a75b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f23ef28, org.springframework.security.web.session.SessionManagementFilter@6ee5cd06, org.springframework.security.web.access.ExceptionTranslationFilter@14674f57, org.springframework.security.web.access.intercept.AuthorizationFilter@55010950]
2025-09-20 13:49:41 - Tomcat started on port 8081 (http) with context path '/api'
2025-09-20 13:49:41 - Started WeeklyReportApplication in 9.875 seconds (process running for 10.023)
2025-09-20 13:49:42 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:49:42 - WeeklyReportHikariCP-Dev - Starting...
2025-09-20 13:49:42 - WeeklyReportHikariCP-Dev - Added connection com.mysql.cj.jdbc.ConnectionImpl@45bffaa5
2025-09-20 13:49:42 - WeeklyReportHikariCP-Dev - Start completed.
2025-09-20 13:49:42 - Super admin user already exists: superadmin
2025-09-20 13:49:42 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:49:42 - Super admin user already exists: zhangxiaoyu
2025-09-20 13:49:42 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:49:42 - Admin user already exists: admin
2025-09-20 13:49:42 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:49:42 - Admin user already exists: admin1
2025-09-20 13:49:42 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:49:42 - Admin user already exists: admin2
2025-09-20 13:49:42 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:49:42 - Manager user already exists: manager1
=== SIMPLE COMMENTS TABLE FIX ===
Simple comments table fix failed: StatementCallback; bad SQL grammar [ALTER TABLE comments ADD COLUMN IF NOT EXISTS attachments JSON]
=== SIMPLE COMMENTS TABLE FIX COMPLETE ===
2025-09-20 13:51:19 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-20 13:51:19 - Initializing Servlet 'dispatcherServlet'
2025-09-20 13:51:19 - Completed initialization in 1 ms
2025-09-20 13:51:19 - Securing POST /auth/register
2025-09-20 13:51:19 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 13:51:19 - Cache miss for REQUEST dispatch to '/api/auth/register' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
2025-09-20 13:51:19 - Secured POST /auth/register
2025-09-20 13:51:19 - Securing POST /auth/register
2025-09-20 13:51:19 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 13:51:19 - Secured POST /auth/register
2025-09-20 13:51:19 - Securing POST /auth/refresh
2025-09-20 13:51:19 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 13:51:19 - Secured POST /auth/refresh
2025-09-20 13:51:19 - Securing POST /auth/refresh
2025-09-20 13:51:19 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 13:51:19 - Secured POST /auth/refresh
2025-09-20 13:51:19 - Securing POST /auth/logout
2025-09-20 13:51:19 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 13:51:19 - Secured POST /auth/logout
2025-09-20 13:51:19 - Logout attempt
2025-09-20 13:51:20 - Attempting logout
2025-09-20 13:51:20 - User logged out successfully
2025-09-20 13:51:20 - Logout successful
2025-09-20 13:51:20 - Securing POST /auth/logout
2025-09-20 13:51:20 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 13:51:20 - Secured POST /auth/logout
2025-09-20 13:51:20 - Logout attempt
2025-09-20 13:51:20 - Attempting logout
2025-09-20 13:51:20 - User logged out successfully
2025-09-20 13:51:20 - Logout successful
2025-09-20 13:51:20 - Securing POST /auth/change-password
2025-09-20 13:51:20 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 13:51:20 - Secured POST /auth/change-password
2025-09-20 13:51:20 - Securing POST /auth/change-password
2025-09-20 13:51:20 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 13:51:20 - Secured POST /auth/change-password
2025-09-20 13:51:20 - Securing GET /auth/check-username?username=testuser
2025-09-20 13:51:20 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 13:51:20 - Secured GET /auth/check-username?username=testuser
2025-09-20 13:51:20 - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-09-20 13:51:20 - Securing GET /auth/check-username?username=testuser
2025-09-20 13:51:20 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 13:51:20 - Secured GET /auth/check-username?username=testuser
2025-09-20 13:51:20 - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    limit
        ?
2025-09-20 13:51:20 - Securing GET /auth/check-email?email=test@test.com
2025-09-20 13:51:20 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 13:51:20 - Secured GET /auth/check-email?email=test@test.com
2025-09-20 13:51:20 - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
2025-09-20 13:51:20 - Securing GET /auth/check-email?email=test@test.com
2025-09-20 13:51:20 - Set SecurityContextHolder to anonymous SecurityContext
2025-09-20 13:51:20 - Secured GET /auth/check-email?email=test@test.com
2025-09-20 13:51:20 - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
2025-09-20 13:51:44 - Securing GET /projects/10
2025-09-20 13:51:44 - Processing authentication for request: /api/projects/10
2025-09-20 13:51:44 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:51:44 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:51:44 - Successfully authenticated user: admin1 for request: /api/projects/10
2025-09-20 13:51:44 - Secured GET /projects/10
2025-09-20 13:51:44 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.getProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:44 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.getProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:44 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 13:51:44 - Fetching profile for user: admin1
2025-09-20 13:51:44 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:51:44 - Securing GET /projects/10
2025-09-20 13:51:44 - Processing authentication for request: /api/projects/10
2025-09-20 13:51:44 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:51:44 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:51:44 - Successfully authenticated user: admin1 for request: /api/projects/10
2025-09-20 13:51:44 - Secured GET /projects/10
2025-09-20 13:51:44 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.getProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:44 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.getProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:44 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 13:51:44 - Fetching profile for user: admin1
2025-09-20 13:51:44 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:51:44 - Securing PUT /projects/10
2025-09-20 13:51:44 - Processing authentication for request: /api/projects/10
2025-09-20 13:51:44 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:51:44 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:51:44 - Successfully authenticated user: manager1 for request: /api/projects/10
2025-09-20 13:51:44 - Secured PUT /projects/10
2025-09-20 13:51:44 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.updateProject(java.lang.Long,com.weeklyreport.dto.project.ProjectCreateRequest); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:44 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.updateProject(java.lang.Long,com.weeklyreport.dto.project.ProjectCreateRequest); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:44 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 13:51:44 - Fetching profile for user: manager1
2025-09-20 13:51:44 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:51:44 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 13:51:44 - 
    /* update
        for com.weeklyreport.entity.Project */update projects 
    set
        admin_reviewer_id=?,
        ai_analysis_id=?,
        approval_status=?,
        created_by=?,
        description=?,
        expected_results=?,
        members=?,
        name=?,
        rejection_reason=?,
        stop_loss=?,
        super_admin_reviewer_id=?,
        timeline=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    /* update
        for com.weeklyreport.entity.Project */update projects 
    set
        admin_reviewer_id=?,
        ai_analysis_id=?,
        approval_status=?,
        created_by=?,
        description=?,
        expected_results=?,
        members=?,
        name=?,
        rejection_reason=?,
        stop_loss=?,
        super_admin_reviewer_id=?,
        timeline=?,
        updated_at=? 
    where
        id=?
2025-09-20 13:51:44 - Project updated: 10 by user: 10004
2025-09-20 13:51:44 - Securing PUT /projects/10
2025-09-20 13:51:44 - Processing authentication for request: /api/projects/10
2025-09-20 13:51:44 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:51:44 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:51:44 - Successfully authenticated user: manager1 for request: /api/projects/10
2025-09-20 13:51:44 - Secured PUT /projects/10
2025-09-20 13:51:44 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.updateProject(java.lang.Long,com.weeklyreport.dto.project.ProjectCreateRequest); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:44 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.updateProject(java.lang.Long,com.weeklyreport.dto.project.ProjectCreateRequest); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:44 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 13:51:44 - Fetching profile for user: manager1
2025-09-20 13:51:44 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:51:44 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 13:51:44 - 
    /* update
        for com.weeklyreport.entity.Project */update projects 
    set
        admin_reviewer_id=?,
        ai_analysis_id=?,
        approval_status=?,
        created_by=?,
        description=?,
        expected_results=?,
        members=?,
        name=?,
        rejection_reason=?,
        stop_loss=?,
        super_admin_reviewer_id=?,
        timeline=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    /* update
        for com.weeklyreport.entity.Project */update projects 
    set
        admin_reviewer_id=?,
        ai_analysis_id=?,
        approval_status=?,
        created_by=?,
        description=?,
        expected_results=?,
        members=?,
        name=?,
        rejection_reason=?,
        stop_loss=?,
        super_admin_reviewer_id=?,
        timeline=?,
        updated_at=? 
    where
        id=?
2025-09-20 13:51:44 - HHH100503: On release of batch it still contained JDBC statements
2025-09-20 13:51:44 - HHH100501: Exception executing batch [java.sql.BatchUpdateException: Column 'expected_results' cannot be null], SQL: /* update for com.weeklyreport.entity.Project */update projects set admin_reviewer_id=?,ai_analysis_id=?,approval_status=?,created_by=?,description=?,expected_results=?,members=?,name=?,rejection_reason=?,stop_loss=?,super_admin_reviewer_id=?,timeline=?,updated_at=? where id=?
2025-09-20 13:51:44 - SQL Error: 1048, SQLState: 23000
2025-09-20 13:51:44 - Column 'expected_results' cannot be null
2025-09-20 13:51:44 - Error updating project: 10
org.springframework.dao.DataIntegrityViolationException: could not execute batch [Column 'expected_results' cannot be null] [/* update for com.weeklyreport.entity.Project */update projects set admin_reviewer_id=?,ai_analysis_id=?,approval_status=?,created_by=?,description=?,expected_results=?,members=?,name=?,rejection_reason=?,stop_loss=?,super_admin_reviewer_id=?,timeline=?,updated_at=? where id=?]; SQL [/* update for com.weeklyreport.entity.Project */update projects set admin_reviewer_id=?,ai_analysis_id=?,approval_status=?,created_by=?,description=?,expected_results=?,members=?,name=?,rejection_reason=?,stop_loss=?,super_admin_reviewer_id=?,timeline=?,updated_at=? where id=?]; constraint [null]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:794)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy188.save(Unknown Source)
	at com.weeklyreport.controller.ProjectController.updateProject(ProjectController.java:217)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.weeklyreport.controller.ProjectController$$SpringCGLIB$$0.updateProject(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute batch [Column 'expected_results' cannot be null] [/* update for com.weeklyreport.entity.Project */update projects set admin_reviewer_id=?,ai_analysis_id=?,approval_status=?,created_by=?,description=?,expected_results=?,members=?,name=?,rejection_reason=?,stop_loss=?,super_admin_reviewer_id=?,timeline=?,updated_at=? where id=?]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:97)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:287)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:260)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.execute(BatchImpl.java:239)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:188)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:659)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:498)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1415)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:496)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2325)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1988)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 155 common frames omitted
Caused by: java.sql.BatchUpdateException: Column 'expected_results' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createBatchUpdateException(SQLError.java:224)
	at com.mysql.cj.jdbc.ServerPreparedStatement.executeBatchSerially(ServerPreparedStatement.java:307)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeBatchInternal(ClientPreparedStatement.java:418)
	at com.mysql.cj.jdbc.StatementImpl.executeBatch(StatementImpl.java:795)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:273)
	... 173 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'expected_results' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ServerPreparedStatement.serverExecute(ServerPreparedStatement.java:555)
	at com.mysql.cj.jdbc.ServerPreparedStatement.executeInternal(ServerPreparedStatement.java:339)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)
	at com.mysql.cj.jdbc.ServerPreparedStatement.executeBatchSerially(ServerPreparedStatement.java:279)
	... 178 common frames omitted
2025-09-20 13:51:44 - Securing PUT /projects/10/submit
2025-09-20 13:51:44 - Processing authentication for request: /api/projects/10/submit
2025-09-20 13:51:44 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:51:44 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:51:44 - Successfully authenticated user: manager1 for request: /api/projects/10/submit
2025-09-20 13:51:44 - Secured PUT /projects/10/submit
2025-09-20 13:51:44 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.submitProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:44 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.submitProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:44 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 13:51:44 - Fetching profile for user: manager1
2025-09-20 13:51:44 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:51:44 - AI analysis completed for project: 10
2025-09-20 13:51:44 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 13:51:44 - 
    /* update
        for com.weeklyreport.entity.Project */update projects 
    set
        admin_reviewer_id=?,
        ai_analysis_id=?,
        approval_status=?,
        created_by=?,
        description=?,
        expected_results=?,
        members=?,
        name=?,
        rejection_reason=?,
        stop_loss=?,
        super_admin_reviewer_id=?,
        timeline=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    /* update
        for com.weeklyreport.entity.Project */update projects 
    set
        admin_reviewer_id=?,
        ai_analysis_id=?,
        approval_status=?,
        created_by=?,
        description=?,
        expected_results=?,
        members=?,
        name=?,
        rejection_reason=?,
        stop_loss=?,
        super_admin_reviewer_id=?,
        timeline=?,
        updated_at=? 
    where
        id=?
2025-09-20 13:51:44 - Project submitted: 10 by user: 10004
2025-09-20 13:51:44 - Securing PUT /projects/10/submit
2025-09-20 13:51:44 - Processing authentication for request: /api/projects/10/submit
2025-09-20 13:51:44 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:51:44 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:51:44 - Successfully authenticated user: manager1 for request: /api/projects/10/submit
2025-09-20 13:51:44 - Secured PUT /projects/10/submit
2025-09-20 13:51:44 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.submitProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:44 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.submitProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:44 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 13:51:44 - Fetching profile for user: manager1
2025-09-20 13:51:44 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:51:45 - Securing PUT /projects/10/ai-approve
2025-09-20 13:51:45 - Processing authentication for request: /api/projects/10/ai-approve
2025-09-20 13:51:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:51:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:51:45 - Successfully authenticated user: admin1 for request: /api/projects/10/ai-approve
2025-09-20 13:51:45 - Secured PUT /projects/10/ai-approve
2025-09-20 13:51:45 - Unexpected exception: No static resource projects/10/ai-approve. - Request: uri=/api/projects/10/ai-approve
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource projects/10/ai-approve.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-09-20 13:51:45 - Securing PUT /projects/10/ai-approve
2025-09-20 13:51:45 - Processing authentication for request: /api/projects/10/ai-approve
2025-09-20 13:51:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:51:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:51:45 - Successfully authenticated user: admin1 for request: /api/projects/10/ai-approve
2025-09-20 13:51:45 - Secured PUT /projects/10/ai-approve
2025-09-20 13:51:45 - Unexpected exception: No static resource projects/10/ai-approve. - Request: uri=/api/projects/10/ai-approve
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource projects/10/ai-approve.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-09-20 13:51:45 - Securing PUT /projects/10/admin-approve
2025-09-20 13:51:45 - Processing authentication for request: /api/projects/10/admin-approve
2025-09-20 13:51:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:51:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:51:45 - Successfully authenticated user: admin1 for request: /api/projects/10/admin-approve
2025-09-20 13:51:45 - Secured PUT /projects/10/admin-approve
2025-09-20 13:51:45 - Unexpected exception: No static resource projects/10/admin-approve. - Request: uri=/api/projects/10/admin-approve
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource projects/10/admin-approve.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-09-20 13:51:45 - Securing PUT /projects/10/admin-approve
2025-09-20 13:51:45 - Processing authentication for request: /api/projects/10/admin-approve
2025-09-20 13:51:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:51:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:51:45 - Successfully authenticated user: admin1 for request: /api/projects/10/admin-approve
2025-09-20 13:51:45 - Secured PUT /projects/10/admin-approve
2025-09-20 13:51:45 - Unexpected exception: No static resource projects/10/admin-approve. - Request: uri=/api/projects/10/admin-approve
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource projects/10/admin-approve.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-09-20 13:51:45 - Securing PUT /projects/10/super-admin-approve
2025-09-20 13:51:45 - Processing authentication for request: /api/projects/10/super-admin-approve
2025-09-20 13:51:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:51:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:51:45 - Successfully authenticated user: admin1 for request: /api/projects/10/super-admin-approve
2025-09-20 13:51:45 - Secured PUT /projects/10/super-admin-approve
2025-09-20 13:51:45 - Unexpected exception: No static resource projects/10/super-admin-approve. - Request: uri=/api/projects/10/super-admin-approve
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource projects/10/super-admin-approve.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-09-20 13:51:45 - Securing PUT /projects/10/super-admin-approve
2025-09-20 13:51:45 - Processing authentication for request: /api/projects/10/super-admin-approve
2025-09-20 13:51:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:51:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:51:45 - Successfully authenticated user: admin1 for request: /api/projects/10/super-admin-approve
2025-09-20 13:51:45 - Secured PUT /projects/10/super-admin-approve
2025-09-20 13:51:45 - Unexpected exception: No static resource projects/10/super-admin-approve. - Request: uri=/api/projects/10/super-admin-approve
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource projects/10/super-admin-approve.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.weeklyreport.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-09-20 13:51:45 - Securing PUT /projects/10/reject
2025-09-20 13:51:45 - Processing authentication for request: /api/projects/10/reject
2025-09-20 13:51:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:51:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:51:45 - Successfully authenticated user: admin1 for request: /api/projects/10/reject
2025-09-20 13:51:45 - Secured PUT /projects/10/reject
2025-09-20 13:51:45 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.rejectProject(java.lang.Long,java.lang.String); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:45 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.rejectProject(java.lang.Long,java.lang.String); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:45 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 13:51:45 - Fetching profile for user: admin1
2025-09-20 13:51:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:51:45 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 13:51:45 - 
    /* update
        for com.weeklyreport.entity.Project */update projects 
    set
        admin_reviewer_id=?,
        ai_analysis_id=?,
        approval_status=?,
        created_by=?,
        description=?,
        expected_results=?,
        members=?,
        name=?,
        rejection_reason=?,
        stop_loss=?,
        super_admin_reviewer_id=?,
        timeline=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    /* update
        for com.weeklyreport.entity.Project */update projects 
    set
        admin_reviewer_id=?,
        ai_analysis_id=?,
        approval_status=?,
        created_by=?,
        description=?,
        expected_results=?,
        members=?,
        name=?,
        rejection_reason=?,
        stop_loss=?,
        super_admin_reviewer_id=?,
        timeline=?,
        updated_at=? 
    where
        id=?
2025-09-20 13:51:45 - Project rejected: 10 by user: 10002 with reason: {
    "reason": "测试拒绝原因"
  }
2025-09-20 13:51:45 - Securing PUT /projects/10/reject
2025-09-20 13:51:45 - Processing authentication for request: /api/projects/10/reject
2025-09-20 13:51:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:51:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:51:45 - Successfully authenticated user: admin1 for request: /api/projects/10/reject
2025-09-20 13:51:45 - Secured PUT /projects/10/reject
2025-09-20 13:51:45 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.rejectProject(java.lang.Long,java.lang.String); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:45 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.rejectProject(java.lang.Long,java.lang.String); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:45 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 13:51:45 - Fetching profile for user: admin1
2025-09-20 13:51:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:51:45 - Securing DELETE /projects/10
2025-09-20 13:51:45 - Processing authentication for request: /api/projects/10
2025-09-20 13:51:45 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:51:45 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:51:45 - Successfully authenticated user: manager1 for request: /api/projects/10
2025-09-20 13:51:45 - Secured DELETE /projects/10
2025-09-20 13:51:45 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.deleteProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:45 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.deleteProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:45 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 13:51:45 - Fetching profile for user: manager1
2025-09-20 13:51:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:51:45 - Securing DELETE /projects/10
2025-09-20 13:51:45 - Processing authentication for request: /api/projects/10
2025-09-20 13:51:45 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:51:45 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:51:45 - Successfully authenticated user: manager1 for request: /api/projects/10
2025-09-20 13:51:45 - Secured DELETE /projects/10
2025-09-20 13:51:45 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.deleteProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:45 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.ProjectController.deleteProject(java.lang.Long); target is of class [com.weeklyreport.controller.ProjectController]
2025-09-20 13:51:45 - 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.admin_reviewer_id,
        p1_0.ai_analysis_id,
        p1_0.approval_status,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.description,
        p1_0.expected_results,
        p1_0.members,
        p1_0.name,
        p1_0.rejection_reason,
        p1_0.stop_loss,
        p1_0.super_admin_reviewer_id,
        p1_0.timeline,
        p1_0.updated_at 
    from
        projects p1_0 
    where
        p1_0.id=?
2025-09-20 13:51:45 - Fetching profile for user: manager1
2025-09-20 13:51:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:11 - Securing POST /tasks
2025-09-20 13:52:11 - Processing authentication for request: /api/tasks
2025-09-20 13:52:11 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:11 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:11 - Successfully authenticated user: manager1 for request: /api/tasks
2025-09-20 13:52:11 - Secured POST /tasks
2025-09-20 13:52:11 - Securing POST /tasks
2025-09-20 13:52:11 - Processing authentication for request: /api/tasks
2025-09-20 13:52:11 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:11 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:11 - Successfully authenticated user: manager1 for request: /api/tasks
2025-09-20 13:52:11 - Secured POST /tasks
2025-09-20 13:52:11 - Securing GET /tasks
2025-09-20 13:52:11 - Processing authentication for request: /api/tasks
2025-09-20 13:52:11 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:11 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:11 - Successfully authenticated user: manager1 for request: /api/tasks
2025-09-20 13:52:11 - Secured GET /tasks
2025-09-20 13:52:11 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getAllTasks(int,int,java.lang.String,java.lang.String); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getAllTasks(int,int,java.lang.String,java.lang.String); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - Fetching profile for user: manager1
2025-09-20 13:52:11 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:11 - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.created_by=? 
    order by
        t1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.created_by=? 
    order by
        t1_0.created_at desc 
    limit
        ?, ?
2025-09-20 13:52:11 - Securing GET /tasks
2025-09-20 13:52:11 - Processing authentication for request: /api/tasks
2025-09-20 13:52:11 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:11 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:11 - Successfully authenticated user: manager1 for request: /api/tasks
2025-09-20 13:52:11 - Secured GET /tasks
2025-09-20 13:52:11 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getAllTasks(int,int,java.lang.String,java.lang.String); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getAllTasks(int,int,java.lang.String,java.lang.String); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - Fetching profile for user: manager1
2025-09-20 13:52:11 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:11 - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.created_by=? 
    order by
        t1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.created_by=? 
    order by
        t1_0.created_at desc 
    limit
        ?, ?
2025-09-20 13:52:11 - Securing GET /tasks/1
2025-09-20 13:52:11 - Processing authentication for request: /api/tasks/1
2025-09-20 13:52:11 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:11 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:11 - Successfully authenticated user: manager1 for request: /api/tasks/1
2025-09-20 13:52:11 - Secured GET /tasks/1
2025-09-20 13:52:11 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getTask(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getTask(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - 
    select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.id=?
2025-09-20 13:52:11 - Securing GET /tasks/1
2025-09-20 13:52:11 - Processing authentication for request: /api/tasks/1
2025-09-20 13:52:11 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:11 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:11 - Successfully authenticated user: manager1 for request: /api/tasks/1
2025-09-20 13:52:11 - Secured GET /tasks/1
2025-09-20 13:52:11 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getTask(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getTask(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - 
    select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.id=?
2025-09-20 13:52:11 - Securing PUT /tasks/1
2025-09-20 13:52:11 - Processing authentication for request: /api/tasks/1
2025-09-20 13:52:11 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:11 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:11 - Successfully authenticated user: manager1 for request: /api/tasks/1
2025-09-20 13:52:11 - Secured PUT /tasks/1
2025-09-20 13:52:11 - Securing PUT /tasks/1
2025-09-20 13:52:11 - Processing authentication for request: /api/tasks/1
2025-09-20 13:52:11 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:11 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:11 - Successfully authenticated user: manager1 for request: /api/tasks/1
2025-09-20 13:52:11 - Secured PUT /tasks/1
2025-09-20 13:52:11 - Securing GET /tasks/my
2025-09-20 13:52:11 - Processing authentication for request: /api/tasks/my
2025-09-20 13:52:11 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:11 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:11 - Successfully authenticated user: manager1 for request: /api/tasks/my
2025-09-20 13:52:11 - Secured GET /tasks/my
2025-09-20 13:52:11 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getMyTasks(); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getMyTasks(); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - Fetching profile for user: manager1
2025-09-20 13:52:11 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:11 - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.created_by=? 
    order by
        t1_0.created_at desc
Hibernate: 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.created_by=? 
    order by
        t1_0.created_at desc
2025-09-20 13:52:11 - Securing GET /tasks/my
2025-09-20 13:52:11 - Processing authentication for request: /api/tasks/my
2025-09-20 13:52:11 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:11 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:11 - Successfully authenticated user: manager1 for request: /api/tasks/my
2025-09-20 13:52:11 - Secured GET /tasks/my
2025-09-20 13:52:11 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getMyTasks(); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.getMyTasks(); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - Fetching profile for user: manager1
2025-09-20 13:52:11 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:11 - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.created_by=? 
    order by
        t1_0.created_at desc
Hibernate: 
    /* <criteria> */ select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.created_by=? 
    order by
        t1_0.created_at desc
2025-09-20 13:52:11 - Securing DELETE /tasks/1
2025-09-20 13:52:11 - Processing authentication for request: /api/tasks/1
2025-09-20 13:52:11 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:11 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:11 - Successfully authenticated user: manager1 for request: /api/tasks/1
2025-09-20 13:52:11 - Secured DELETE /tasks/1
2025-09-20 13:52:11 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.deleteTask(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.deleteTask(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - 
    select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.id=?
2025-09-20 13:52:11 - Securing DELETE /tasks/1
2025-09-20 13:52:11 - Processing authentication for request: /api/tasks/1
2025-09-20 13:52:11 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:11 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:11 - Successfully authenticated user: manager1 for request: /api/tasks/1
2025-09-20 13:52:11 - Secured DELETE /tasks/1
2025-09-20 13:52:11 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.deleteTask(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.TaskController.deleteTask(java.lang.Long); target is of class [com.weeklyreport.controller.TaskController]
2025-09-20 13:52:11 - 
    select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.actual_results,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.expected_results,
        t1_0.personnel_assignment,
        t1_0.quantitative_metrics,
        t1_0.result_difference_analysis,
        t1_0.task_name,
        t1_0.task_type,
        t1_0.timeline,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.id=?
2025-09-20 13:52:45 - Securing POST /weekly-reports
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:45 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:45 - Successfully authenticated user: manager1 for request: /api/weekly-reports
2025-09-20 13:52:45 - Secured POST /weekly-reports
2025-09-20 13:52:45 - Securing POST /weekly-reports
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:45 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:45 - Successfully authenticated user: manager1 for request: /api/weekly-reports
2025-09-20 13:52:45 - Secured POST /weekly-reports
2025-09-20 13:52:45 - Securing GET /weekly-reports
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:52:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:52:45 - Successfully authenticated user: admin1 for request: /api/weekly-reports
2025-09-20 13:52:45 - Secured GET /weekly-reports
2025-09-20 13:52:45 - Fetching profile for user: admin1
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0
Hibernate: 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0
2025-09-20 13:52:45 - Securing GET /weekly-reports
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:52:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:52:45 - Successfully authenticated user: admin1 for request: /api/weekly-reports
2025-09-20 13:52:45 - Secured GET /weekly-reports
2025-09-20 13:52:45 - Fetching profile for user: admin1
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0
Hibernate: 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0
2025-09-20 13:52:45 - Securing GET /weekly-reports/my
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/my
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:45 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:45 - Successfully authenticated user: manager1 for request: /api/weekly-reports/my
2025-09-20 13:52:45 - Secured GET /weekly-reports/my
2025-09-20 13:52:45 - Fetching profile for user: manager1
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.user_id=? 
    order by
        wr1_0.created_at desc
Hibernate: 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.user_id=? 
    order by
        wr1_0.created_at desc
2025-09-20 13:52:45 - Securing GET /weekly-reports/my
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/my
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:45 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:45 - Successfully authenticated user: manager1 for request: /api/weekly-reports/my
2025-09-20 13:52:45 - Secured GET /weekly-reports/my
2025-09-20 13:52:45 - Fetching profile for user: manager1
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.user_id=? 
    order by
        wr1_0.created_at desc
Hibernate: 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.user_id=? 
    order by
        wr1_0.created_at desc
2025-09-20 13:52:45 - Securing GET /weekly-reports/pending
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/pending
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:52:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:52:45 - Successfully authenticated user: admin1 for request: /api/weekly-reports/pending
2025-09-20 13:52:45 - Secured GET /weekly-reports/pending
2025-09-20 13:52:45 - Fetching profile for user: admin1
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.approval_status=? 
    order by
        wr1_0.created_at desc
Hibernate: 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.approval_status=? 
    order by
        wr1_0.created_at desc
2025-09-20 13:52:45 - Securing GET /weekly-reports/pending
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/pending
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:52:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:52:45 - Successfully authenticated user: admin1 for request: /api/weekly-reports/pending
2025-09-20 13:52:45 - Secured GET /weekly-reports/pending
2025-09-20 13:52:45 - Fetching profile for user: admin1
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.approval_status=? 
    order by
        wr1_0.created_at desc
Hibernate: 
    /* <criteria> */ select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.approval_status=? 
    order by
        wr1_0.created_at desc
2025-09-20 13:52:45 - Securing GET /weekly-reports/1
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/1
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:52:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:52:45 - Successfully authenticated user: admin1 for request: /api/weekly-reports/1
2025-09-20 13:52:45 - Secured GET /weekly-reports/1
2025-09-20 13:52:45 - Fetching profile for user: admin1
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:45 - 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
Hibernate: 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
2025-09-20 13:52:45 - Securing GET /weekly-reports/1
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/1
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:52:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:52:45 - Successfully authenticated user: admin1 for request: /api/weekly-reports/1
2025-09-20 13:52:45 - Secured GET /weekly-reports/1
2025-09-20 13:52:45 - Fetching profile for user: admin1
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:45 - 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
Hibernate: 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
2025-09-20 13:52:45 - Securing PUT /weekly-reports/1
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/1
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:45 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:45 - Successfully authenticated user: manager1 for request: /api/weekly-reports/1
2025-09-20 13:52:45 - Secured PUT /weekly-reports/1
2025-09-20 13:52:45 - Securing PUT /weekly-reports/1
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/1
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:45 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:45 - Successfully authenticated user: manager1 for request: /api/weekly-reports/1
2025-09-20 13:52:45 - Secured PUT /weekly-reports/1
2025-09-20 13:52:45 - Securing PUT /weekly-reports/1/submit
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/1/submit
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:45 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:45 - Successfully authenticated user: manager1 for request: /api/weekly-reports/1/submit
2025-09-20 13:52:45 - Secured PUT /weekly-reports/1/submit
2025-09-20 13:52:45 - Fetching profile for user: manager1
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:45 - 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
Hibernate: 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
2025-09-20 13:52:45 - Securing PUT /weekly-reports/1/submit
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/1/submit
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_MANAGER] for roles: ROLE_MANAGER
2025-09-20 13:52:45 - Created authentication for user manager1 with authorities: [ROLE_MANAGER]
2025-09-20 13:52:45 - Successfully authenticated user: manager1 for request: /api/weekly-reports/1/submit
2025-09-20 13:52:45 - Secured PUT /weekly-reports/1/submit
2025-09-20 13:52:45 - Fetching profile for user: manager1
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:45 - 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
Hibernate: 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
2025-09-20 13:52:45 - Securing PUT /weekly-reports/1/ai-approve
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/1/ai-approve
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:52:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:52:45 - Successfully authenticated user: admin1 for request: /api/weekly-reports/1/ai-approve
2025-09-20 13:52:45 - Secured PUT /weekly-reports/1/ai-approve
2025-09-20 13:52:45 - Securing PUT /weekly-reports/1/ai-approve
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/1/ai-approve
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:52:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:52:45 - Successfully authenticated user: admin1 for request: /api/weekly-reports/1/ai-approve
2025-09-20 13:52:45 - Secured PUT /weekly-reports/1/ai-approve
2025-09-20 13:52:45 - Securing PUT /weekly-reports/1/admin-approve
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/1/admin-approve
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:52:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:52:45 - Successfully authenticated user: admin1 for request: /api/weekly-reports/1/admin-approve
2025-09-20 13:52:45 - Secured PUT /weekly-reports/1/admin-approve
2025-09-20 13:52:45 - Fetching profile for user: admin1
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:45 - 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
Hibernate: 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
2025-09-20 13:52:45 - Securing PUT /weekly-reports/1/admin-approve
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/1/admin-approve
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:52:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:52:45 - Successfully authenticated user: admin1 for request: /api/weekly-reports/1/admin-approve
2025-09-20 13:52:45 - Secured PUT /weekly-reports/1/admin-approve
2025-09-20 13:52:45 - Fetching profile for user: admin1
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:45 - 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
Hibernate: 
    select
        wr1_0.id,
        wr1_0.additional_notes,
        wr1_0.admin_reviewer_id,
        wr1_0.ai_analysis_id,
        wr1_0.approval_status,
        wr1_0.created_at,
        wr1_0.development_opportunities,
        wr1_0.rejection_reason,
        wr1_0.report_week,
        wr1_0.title,
        wr1_0.updated_at,
        wr1_0.user_id 
    from
        weekly_reports wr1_0 
    where
        wr1_0.id=?
2025-09-20 13:52:45 - Securing PUT /weekly-reports/1/super-admin-approve
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/1/super-admin-approve
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:52:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:52:45 - Successfully authenticated user: admin1 for request: /api/weekly-reports/1/super-admin-approve
2025-09-20 13:52:45 - Secured PUT /weekly-reports/1/super-admin-approve
2025-09-20 13:52:45 - Fetching profile for user: admin1
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:52:45 - Securing PUT /weekly-reports/1/super-admin-approve
2025-09-20 13:52:45 - Processing authentication for request: /api/weekly-reports/1/super-admin-approve
2025-09-20 13:52:45 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:52:45 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:52:45 - Successfully authenticated user: admin1 for request: /api/weekly-reports/1/super-admin-approve
2025-09-20 13:52:45 - Secured PUT /weekly-reports/1/super-admin-approve
2025-09-20 13:52:45 - Fetching profile for user: admin1
2025-09-20 13:52:45 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:53:38 - Securing POST /users
2025-09-20 13:53:38 - Processing authentication for request: /api/users
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users
2025-09-20 13:53:38 - Secured POST /users
2025-09-20 13:53:38 - Securing POST /users
2025-09-20 13:53:38 - Processing authentication for request: /api/users
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users
2025-09-20 13:53:38 - Secured POST /users
2025-09-20 13:53:38 - Securing GET /users
2025-09-20 13:53:38 - Processing authentication for request: /api/users
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users
2025-09-20 13:53:38 - Secured GET /users
2025-09-20 13:53:38 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getAllUsers(org.springframework.data.domain.Pageable,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 13:53:38 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getAllUsers(org.springframework.data.domain.Pageable,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 13:53:38 - Fetching all users with pagination
2025-09-20 13:53:38 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.weeklyreport.service.UserService.getAllUsers(org.springframework.data.domain.Pageable); target is of class [com.weeklyreport.service.UserService]
2025-09-20 13:53:38 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.weeklyreport.service.UserService.getAllUsers(org.springframework.data.domain.Pageable); target is of class [com.weeklyreport.service.UserService]
2025-09-20 13:53:38 - Fetching all users with pagination
2025-09-20 13:53:38 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.status!=? 
    limit
        ?, ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.status!=? 
    limit
        ?, ?
2025-09-20 13:53:38 - Users query completed in 3ms, total count: 6
2025-09-20 13:53:38 - Users fetched successfully, count: 6, took: 7ms
2025-09-20 13:53:38 - Securing GET /users
2025-09-20 13:53:38 - Processing authentication for request: /api/users
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users
2025-09-20 13:53:38 - Secured GET /users
2025-09-20 13:53:38 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getAllUsers(org.springframework.data.domain.Pageable,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 13:53:38 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getAllUsers(org.springframework.data.domain.Pageable,com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 13:53:38 - Fetching all users with pagination
2025-09-20 13:53:38 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.weeklyreport.service.UserService.getAllUsers(org.springframework.data.domain.Pageable); target is of class [com.weeklyreport.service.UserService]
2025-09-20 13:53:38 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.data.domain.Page com.weeklyreport.service.UserService.getAllUsers(org.springframework.data.domain.Pageable); target is of class [com.weeklyreport.service.UserService]
2025-09-20 13:53:38 - Fetching all users with pagination
2025-09-20 13:53:38 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.status!=? 
    limit
        ?, ?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.status!=? 
    limit
        ?, ?
2025-09-20 13:53:38 - Users query completed in 3ms, total count: 6
2025-09-20 13:53:38 - Users fetched successfully, count: 6, took: 5ms
2025-09-20 13:53:38 - Securing GET /users/profile
2025-09-20 13:53:38 - Processing authentication for request: /api/users/profile
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users/profile
2025-09-20 13:53:38 - Secured GET /users/profile
2025-09-20 13:53:38 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getCurrentUserProfile(com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 13:53:38 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getCurrentUserProfile(com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 13:53:38 - Fetching profile for user: admin1
2025-09-20 13:53:38 - Fetching profile for user: admin1
2025-09-20 13:53:38 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:53:38 - Profile fetched successfully for user: admin1
2025-09-20 13:53:38 - Securing GET /users/profile
2025-09-20 13:53:38 - Processing authentication for request: /api/users/profile
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users/profile
2025-09-20 13:53:38 - Secured GET /users/profile
2025-09-20 13:53:38 - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getCurrentUserProfile(com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 13:53:38 - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.weeklyreport.controller.UserController.getCurrentUserProfile(com.weeklyreport.security.CustomUserPrincipal); target is of class [com.weeklyreport.controller.UserController]
2025-09-20 13:53:38 - Fetching profile for user: admin1
2025-09-20 13:53:38 - Fetching profile for user: admin1
2025-09-20 13:53:38 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:53:38 - Profile fetched successfully for user: admin1
2025-09-20 13:53:38 - Securing PUT /users/profile
2025-09-20 13:53:38 - Processing authentication for request: /api/users/profile
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users/profile
2025-09-20 13:53:38 - Secured PUT /users/profile
2025-09-20 13:53:38 - Updating profile for user: temp-user
2025-09-20 13:53:38 - Updating profile for user: temp-user
2025-09-20 13:53:38 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:53:38 - User not found: User not found: temp-user
2025-09-20 13:53:38 - Securing PUT /users/profile
2025-09-20 13:53:38 - Processing authentication for request: /api/users/profile
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users/profile
2025-09-20 13:53:38 - Secured PUT /users/profile
2025-09-20 13:53:38 - Updating profile for user: temp-user
2025-09-20 13:53:38 - Updating profile for user: temp-user
2025-09-20 13:53:38 - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-09-20 13:53:38 - User not found: User not found: temp-user
2025-09-20 13:53:38 - Securing GET /users/10002
2025-09-20 13:53:38 - Processing authentication for request: /api/users/10002
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users/10002
2025-09-20 13:53:38 - Secured GET /users/10002
2025-09-20 13:53:38 - Fetching user by ID: 10002
2025-09-20 13:53:38 - Authorizing method invocation ReflectiveMethodInvocation: public com.weeklyreport.entity.User com.weeklyreport.service.UserService.getUserById(java.lang.Long); target is of class [com.weeklyreport.service.UserService]
2025-09-20 13:53:38 - Authorized method invocation ReflectiveMethodInvocation: public com.weeklyreport.entity.User com.weeklyreport.service.UserService.getUserById(java.lang.Long); target is of class [com.weeklyreport.service.UserService]
2025-09-20 13:53:38 - Fetching user by ID: 10002
2025-09-20 13:53:38 - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-20 13:53:38 - User fetched successfully: admin1
2025-09-20 13:53:38 - Securing GET /users/10002
2025-09-20 13:53:38 - Processing authentication for request: /api/users/10002
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users/10002
2025-09-20 13:53:38 - Secured GET /users/10002
2025-09-20 13:53:38 - Fetching user by ID: 10002
2025-09-20 13:53:38 - Authorizing method invocation ReflectiveMethodInvocation: public com.weeklyreport.entity.User com.weeklyreport.service.UserService.getUserById(java.lang.Long); target is of class [com.weeklyreport.service.UserService]
2025-09-20 13:53:38 - Authorized method invocation ReflectiveMethodInvocation: public com.weeklyreport.entity.User com.weeklyreport.service.UserService.getUserById(java.lang.Long); target is of class [com.weeklyreport.service.UserService]
2025-09-20 13:53:38 - Fetching user by ID: 10002
2025-09-20 13:53:38 - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-20 13:53:38 - User fetched successfully: admin1
2025-09-20 13:53:38 - Securing GET /users/search?query=admin
2025-09-20 13:53:38 - Processing authentication for request: /api/users/search
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users/search
2025-09-20 13:53:38 - Secured GET /users/search?query=admin
2025-09-20 13:53:38 - Securing GET /users/search?query=admin
2025-09-20 13:53:38 - Processing authentication for request: /api/users/search
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users/search
2025-09-20 13:53:38 - Secured GET /users/search?query=admin
2025-09-20 13:53:38 - Securing PUT /users/10002/status
2025-09-20 13:53:38 - Processing authentication for request: /api/users/10002/status
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users/10002/status
2025-09-20 13:53:38 - Secured PUT /users/10002/status
2025-09-20 13:53:38 - Securing PUT /users/10002/status
2025-09-20 13:53:38 - Processing authentication for request: /api/users/10002/status
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users/10002/status
2025-09-20 13:53:38 - Secured PUT /users/10002/status
2025-09-20 13:53:38 - Securing PUT /users/10002/role
2025-09-20 13:53:38 - Processing authentication for request: /api/users/10002/role
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users/10002/role
2025-09-20 13:53:38 - Secured PUT /users/10002/role
2025-09-20 13:53:38 - Securing PUT /users/10002/role
2025-09-20 13:53:38 - Processing authentication for request: /api/users/10002/role
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users/10002/role
2025-09-20 13:53:38 - Secured PUT /users/10002/role
2025-09-20 13:53:38 - Securing POST /users/10002/reset-password
2025-09-20 13:53:38 - Processing authentication for request: /api/users/10002/reset-password
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users/10002/reset-password
2025-09-20 13:53:38 - Secured POST /users/10002/reset-password
2025-09-20 13:53:38 - Securing POST /users/10002/reset-password
2025-09-20 13:53:38 - Processing authentication for request: /api/users/10002/reset-password
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users/10002/reset-password
2025-09-20 13:53:38 - Secured POST /users/10002/reset-password
2025-09-20 13:53:38 - Securing DELETE /users/10007
2025-09-20 13:53:38 - Processing authentication for request: /api/users/10007
2025-09-20 13:53:38 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:38 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:38 - Successfully authenticated user: admin1 for request: /api/users/10007
2025-09-20 13:53:38 - Secured DELETE /users/10007
2025-09-20 13:53:38 - Soft deleting user ID: 10007
2025-09-20 13:53:38 - Authorizing method invocation ReflectiveMethodInvocation: public void com.weeklyreport.service.UserService.deleteUser(java.lang.Long); target is of class [com.weeklyreport.service.UserService]
2025-09-20 13:53:38 - Authorized method invocation ReflectiveMethodInvocation: public void com.weeklyreport.service.UserService.deleteUser(java.lang.Long); target is of class [com.weeklyreport.service.UserService]
2025-09-20 13:53:38 - Soft deleting user ID: 10007
2025-09-20 13:53:38 - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-20 13:53:39 - User not found with ID: 10007
2025-09-20 13:53:39 - Securing DELETE /users/10007
2025-09-20 13:53:39 - Processing authentication for request: /api/users/10007
2025-09-20 13:53:39 - Extracted authorities from token: [ROLE_ADMIN] for roles: ROLE_ADMIN
2025-09-20 13:53:39 - Created authentication for user admin1 with authorities: [ROLE_ADMIN]
2025-09-20 13:53:39 - Successfully authenticated user: admin1 for request: /api/users/10007
2025-09-20 13:53:39 - Secured DELETE /users/10007
2025-09-20 13:53:39 - Soft deleting user ID: 10007
2025-09-20 13:53:39 - Authorizing method invocation ReflectiveMethodInvocation: public void com.weeklyreport.service.UserService.deleteUser(java.lang.Long); target is of class [com.weeklyreport.service.UserService]
2025-09-20 13:53:39 - Authorized method invocation ReflectiveMethodInvocation: public void com.weeklyreport.service.UserService.deleteUser(java.lang.Long); target is of class [com.weeklyreport.service.UserService]
2025-09-20 13:53:39 - Soft deleting user ID: 10007
2025-09-20 13:53:39 - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-20 13:53:39 - User not found with ID: 10007
2025-09-20 14:04:43 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-20 14:04:43 - WeeklyReportHikariCP-Dev - Shutdown initiated...
2025-09-20 14:04:43 - WeeklyReportHikariCP-Dev - Shutdown completed.
