# Test Environment Configuration

environment: test

# Database Configuration
database:
  host: ${DB_HOST:-test-db.internal}
  port: 3306
  name: weekly_report_test
  username: ${DB_USERNAME}
  password: ${DB_PASSWORD}
  max_connections: 20
  connection_timeout: 30s

# Redis Configuration
redis:
  host: ${REDIS_HOST:-test-redis.internal}
  port: 6379
  database: 1
  password: ${REDIS_PASSWORD}
  timeout: 5s

# Application Configuration
app:
  name: "Weekly Report System"
  version: "1.0.0-test"
  port: 8080
  debug: false
  log_level: INFO
  cors_origins:
    - "https://test.weekly-report.example.com"
  jwt_secret: ${JWT_SECRET}
  jwt_expiration: 3600 # 1 hour for testing

# Frontend Configuration
frontend:
  url: "https://test.weekly-report.example.com"
  api_base_url: "https://api-test.weekly-report.example.com"

# Email Configuration (use test service)
email:
  smtp_host: ${SMTP_HOST}
  smtp_port: 587
  smtp_user: ${SMTP_USER}
  smtp_password: ${SMTP_PASSWORD}
  from_email: "noreply@weekly-report-test.example.com"
  from_name: "Weekly Report System (Test)"

# File Storage Configuration
storage:
  type: "local" # Will be changed to S3 in production
  local_path: "./uploads"
  max_file_size: 10MB
  allowed_extensions:
    - "pdf"
    - "doc"
    - "docx"
    - "xls"
    - "xlsx"
    - "png"
    - "jpg"
    - "jpeg"

# Monitoring Configuration
monitoring:
  enabled: true
  metrics_port: 9090

# External API Configuration
external_apis:
  enable_mock: false
  timeout: 15s

# Security Configuration
security:
  password_min_length: 8
  password_require_special: true
  password_require_numbers: true
  max_login_attempts: 3
  lockout_duration: 30m
  session_timeout: 2h

# Feature Flags
features:
  enable_registration: true
  enable_password_reset: true
  enable_email_notifications: true
  enable_audit_logging: true
  enable_data_export: true

# Test Specific Configuration
test:
  auto_cleanup_data: true
  test_data_retention_days: 7
  enable_performance_testing: true
  mock_external_services: false